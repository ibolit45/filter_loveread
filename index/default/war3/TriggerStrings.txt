//***************************************************************************
[TriggerEventStrings]

// Special events not defined in common.j,
// handled internally by the editor
MapInitializationEvent="Инициализация Карты"
MapInitializationEvent="Инициализация Карты"
MapInitializationEventHint="Событие происходит во время старта карты."


// Destructible events
TriggerRegisterDeathEvent="Разрушаемый объект уничтожен"
TriggerRegisterDeathEvent=~Разрушаемый объект," уничтожен" 
TriggerRegisterDeathEventHint="Используйте 'Обработчик События - Умирающий Разрушаемый' чтобы обращаться к разрушаемому объекту."

TriggerRegisterDestDeathInRegionEvent="Разрушаемый(мые) объект(ы) уничтожен(ы) в регионе"
TriggerRegisterDestDeathInRegionEvent="Разрушаемый(мые) объект(ы) уничтожен(ы) в ",~Region,""
TriggerRegisterDestDeathInRegionEventHint="Только первые 64 Разрушаемых в районе, где зарегистрировано это событие, умирают.  Лучше используйте это событие в районах с небольшим числом Разрушаемых предметов."

// Dialog events
TriggerRegisterDialogEventBJ="Нажата кнопка диалога"
TriggerRegisterDialogEventBJ="Диалоговая кнопка нажата ",~Dialog
TriggerRegisterDialogEventBJHint=


// Game events
TriggerRegisterGameStateEventTimeOfDay="Врямя дня становиться"
TriggerRegisterGameStateEventTimeOfDay="время дня становится ",~Operation," ",~Time
TriggerRegisterGameStateEventTimeOfDayHint="Игровой день 24 часа.  Шесть утра это  6.00, а шесть вечера 18.00."

TriggerRegisterVariableEvent="Значение Реальной Переменной"
TriggerRegisterVariableEvent=~Variable," становится ",~Operation," ",~Value
TriggerRegisterVariableEventHint="Это относится только к переменным вне массива типа 'Real'."

TriggerRegisterGameLoadedEventBJ="Загрузка Игры"
TriggerRegisterGameLoadedEventBJ="Сохраненная игра загружена"
TriggerRegisterGameLoadedEventBJHint="Это наступает, как только сохраненная игра загружается."

TriggerRegisterGameSavedEventBJ="сохранение игры"
TriggerRegisterGameSavedEventBJ="Игра готова к сохранению"
TriggerRegisterGameSavedEventBJHint="Это наступает как только игру собрались сохранить."

TriggerRegisterShowSkillEventBJ="Нажата Кнопка Способностей Героя"
TriggerRegisterShowSkillEventBJ="Нажата Кнопка Способностей Героя"
TriggerRegisterShowSkillEventBJHint="Это событие можно использовать только в карте для одного игрока."

TriggerRegisterBuildSubmenuEventBJ="Нажата Кнопка Построить Здание"
TriggerRegisterBuildSubmenuEventBJ="Нажата Кнопка Построить Здание "
TriggerRegisterBuildSubmenuEventBJHint="Это событие можно использовать только в карте для одного игрока."

TriggerRegisterGameEvent="Случайный Турнир"
TriggerRegisterGameEvent="Должен быть закончен ",~Event Type
TriggerRegisterGameEventHint="This event only occurs during automated tournament games on Battle.net."


// Player events
TriggerRegisterPlayerChatEvent="Напечатал сообщение в чате"
TriggerRegisterPlayerChatEvent=~Player," напечатал такое сообщение ",~Text," как ",~Match Type
TriggerRegisterPlayerChatEventHint="Используйте 'Обработчик События - Введенное/совпавшее Сообщение' чтобы обращаться к сообщению, как ко введенному/совпавшему.  Используйте 'Обработчик События - Переключение Игрока' чтобы обращаться к игроку, который напечатал сообщение."

TriggerRegisterPlayerEventEndCinematic="Пропустил мультик"
TriggerRegisterPlayerEventEndCinematic=~Player," пропускает анимацию"
TriggerRegisterPlayerEventEndCinematicHint="Это событие возникает всегда, когда игрок нажимает 'Escape' (не зависимо от того, воспроизводится ли при этом анимация)."

TriggerRegisterPlayerSelectionEventBJ="Событие Выбора"
TriggerRegisterPlayerSelectionEventBJ=~Player," ",~Selects/Deselects," отряд"
TriggerRegisterPlayerSelectionEventBJHint="Используйте 'Обработчик События - Включение Отряда' чтобы обращаться к отряду, как в выбранному или не выбранному."

TriggerRegisterPlayerKeyEventBJ="Событие Клавиатуры"
TriggerRegisterPlayerKeyEventBJ=~Player," ",~Presses/Releases," ",~Key," клавишу"
TriggerRegisterPlayerKeyEventBJHint=

TriggerRegisterPlayerStateEvent="Свойства"
TriggerRegisterPlayerStateEvent=~Player,"'а ",~Property," становится ",~Operation," ",~Value
TriggerRegisterPlayerStateEventHint=

TriggerRegisterPlayerEventAllianceChanged="Изменение союза (любое)"
TriggerRegisterPlayerEventAllianceChanged=~Player," изменил настройки союза"
TriggerRegisterPlayerEventAllianceChangedHint=

TriggerRegisterPlayerAllianceChange="Изменение союза (уточненное)"
TriggerRegisterPlayerAllianceChange=~Player," изменяет ",~Alliance Type," настройки"
TriggerRegisterPlayerAllianceChangeHint=

TriggerRegisterPlayerEventVictory="Победа"
TriggerRegisterPlayerEventVictory=~Player," покидает игру победителем"
TriggerRegisterPlayerEventVictoryHint=

TriggerRegisterPlayerEventDefeat="Поражение"
TriggerRegisterPlayerEventDefeat=~Player," покидает игру пораженным"
TriggerRegisterPlayerEventDefeatHint=

TriggerRegisterPlayerEventLeave="Покинул Игру"
TriggerRegisterPlayerEventLeave=~Player," покинул игру"
TriggerRegisterPlayerEventLeaveHint="This event occurs regardless of how the player left the game."


// Timer events
TriggerRegisterTimerEventSingle="Времени прошло"
TriggerRegisterTimerEventSingle="Прошло ",~Time," секунд"
TriggerRegisterTimerEventSingleHint=

TriggerRegisterTimerEventPeriodic="Периодическое событие"
TriggerRegisterTimerEventPeriodic="Каждые ",~Time," секунд игрового времени"
TriggerRegisterTimerEventPeriodicHint=

TriggerRegisterTimerExpireEventBJ="Таймер истекает"
TriggerRegisterTimerExpireEventBJ=~Timer," истекает"
TriggerRegisterTimerExpireEventBJHint="Таймер истекает, когда он доходит до 0.  Повторяющиеся таймеры истекают, когда доходят до 0.  Используйте 'Обработчик События - Истек Таймер' чтобы обращаться к таймеру, который истек."


// Unit events
TriggerRegisterUnitEvent="Специфическое событие отряда"
TriggerRegisterUnitEvent=~Unit," ",~Event
TriggerRegisterUnitEventHint=

TriggerRegisterPlayerUnitEventSimple="Событие Отряда Игрока"
TriggerRegisterPlayerUnitEventSimple="Событие игрока ",~Player," ",~Event
TriggerRegisterPlayerUnitEventSimpleHint=

TriggerRegisterAnyUnitEventBJ="Общее событие Отряда"
TriggerRegisterAnyUnitEventBJ="Событие ",~Event
TriggerRegisterAnyUnitEventBJHint=

TriggerRegisterEnterRectSimple="Отряд вошел в Зону"
TriggerRegisterEnterRectSimple="Отряд вошел в зону ",~Region
TriggerRegisterEnterRectSimpleHint="Используйте 'Обработчик События - Входящий Отряд' чтобы обращаться к отряду, вошедшему в зону."

TriggerRegisterLeaveRectSimple="Отряд покидает зону"
TriggerRegisterLeaveRectSimple="Отряд покидает ",~Region
TriggerRegisterLeaveRectSimpleHint="Используйте 'Обработчик События - Уходящий Отряд' чтобы обращаться к отряду, покидающему зону."

TriggerRegisterUnitInRangeSimple="Отряд в Радиусе"
TriggerRegisterUnitInRangeSimple="Отряд в радиусе ",~Range," ",~Unit
TriggerRegisterUnitInRangeSimpleHint="Используйте 'Обработчик События - Срабатывающий Отряд' чтобы обращаться к отряду, который вошел в зону действия."

TriggerRegisterUnitLifeEvent="Жизнь"
TriggerRegisterUnitLifeEvent=~Unit," жизнь становится ",~Operation," ",~Value
TriggerRegisterUnitLifeEventHint=

TriggerRegisterUnitManaEvent="Мана"
TriggerRegisterUnitManaEvent=~Unit," мана становится ",~Operation," ",~Value
TriggerRegisterUnitManaEventHint=


//***************************************************************************
[TriggerConditionStrings]

OperatorCompareBoolean="Логическое Сравнение"
OperatorCompareBoolean=~Value," ",~Operator," ",~Value
OperatorCompareBooleanHint=

OperatorCompareAbilityId="Сравнение Способностей"
OperatorCompareAbilityId=~Value," ",~Operator," ",~Value
OperatorCompareAbilityIdHint=

OperatorCompareBuffId="Сравнение Волшебства"
OperatorCompareBuffId=~Value," ",~Operator," ",~Value
OperatorCompareBuffIdHint=

OperatorCompareDestructible="Сравнение Разрушаемого"
OperatorCompareDestructible=~Value," ",~Operator," ",~Value
OperatorCompareDestructibleHint=

OperatorCompareDestructableCode="Сравнение Разрушаемый-Тип"
OperatorCompareDestructableCode=~Value," ",~Operator," ",~Value
OperatorCompareDestructableCodeHint=

OperatorCompareButton="Сравнение Диалоговых Кнопок"
OperatorCompareButton=~Value," ",~Operator," ",~Value
OperatorCompareButtonHint=

OperatorCompareGameDifficulty="Сравнение Сложности Игры"
OperatorCompareGameDifficulty=~Value," ",~Operator," ",~Value
OperatorCompareGameDifficultyHint=

OperatorCompareGameSpeed="Сравнение Скорости Игры"
OperatorCompareGameSpeed=~Value," ",~Operator," ",~Value
OperatorCompareGameSpeedHint=

OperatorCompareHeroSkill="Сравнение Уровня Героя"
OperatorCompareHeroSkill=~Value," ",~Operator," ",~Value
OperatorCompareHeroSkillHint=

OperatorCompareInteger="Сравнение Целых Чисел"
OperatorCompareInteger=~Value," ",~Operator," ",~Value
OperatorCompareIntegerHint=

OperatorCompareItem="Сравнение Предмета"
OperatorCompareItem=~Value," ",~Operator," ",~Value
OperatorCompareItemHint=

OperatorCompareItemType="Сравнение Класса Предмета"
OperatorCompareItemType=~Value," ",~Operator," ",~Value
OperatorCompareItemTypeHint=

OperatorCompareItemCode="Сравнение Типа Предмета"
OperatorCompareItemCode=~Value," ",~Operator," ",~Value
OperatorCompareItemCodeHint=

OperatorCompareMeleeDifficulty="Сравнение Рукопашного ИИ "
OperatorCompareMeleeDifficulty=~Value," ",~Operator," ",~Value
OperatorCompareMeleeDifficultyHint=

OperatorCompareOrderCode="Сравнение Приказа"
OperatorCompareOrderCode=~Value," ",~Operator," ",~Value
OperatorCompareOrderCodeHint=

OperatorComparePlayer="Сравнение Игрока"
OperatorComparePlayer=~Value," ",~Operator," ",~Value
OperatorComparePlayerHint=

OperatorComparePlayerColor="Сравнение Цвета Игрока"
OperatorComparePlayerColor=~Value," ",~Operator," ",~Value
OperatorComparePlayerColorHint=

OperatorComparePlayerControl="Сравнение Контроллера Игрока"
OperatorComparePlayerControl=~Value," ",~Operator," ",~Value
OperatorComparePlayerControlHint=

OperatorComparePlayerSlotStatus="Сравнение Статуса Слота Игрока"
OperatorComparePlayerSlotStatus=~Value," ",~Operator," ",~Value
OperatorComparePlayerSlotStatusHint=

//OperatorComparePoint="Сравнение Предмета"
//OperatorComparePoint=~Value," ",~Operator," ",~Value
//OperatorComparePointHint=

OperatorCompareRace="Сравнение Расы"
OperatorCompareRace=~Value," ",~Operator," ",~Value
OperatorCompareRaceHint=

OperatorCompareReal="Сравнение Реального числа"
OperatorCompareReal=~Value," ",~Operator," ",~Value
OperatorCompareRealHint=

//OperatorCompareRegion="Сравнение Зоны"
//OperatorCompareRegion=~Value," ",~Operator," ",~Value
//OperatorCompareRegionHint=

OperatorCompareString="Сравнение Строки"
OperatorCompareString=~Value," ",~Operator," ",~Value
OperatorCompareStringHint="Чтобы две строки были равны, нужно, чтобы у них была одинаковая длина и содержание."

OperatorCompareTechCode="Сравнение Типа Техники"
OperatorCompareTechCode=~Value," ",~Operator," ",~Value
OperatorCompareTechCodeHint=

OperatorCompareTrigger="Сравнение Переключателей"
OperatorCompareTrigger=~Value," ",~Operator," ",~Value
OperatorCompareTriggerHint=

OperatorCompareUnit="Сравнение Отрядов"
OperatorCompareUnit=~Value," ",~Operator," ",~Value
OperatorCompareUnitHint=

OperatorCompareUnitCode="Сравнение Типов Отрядов"
OperatorCompareUnitCode=~Value," ",~Operator," ",~Value
OperatorCompareUnitCodeHint=

OperatorCompareTerrainType="Сравнение Типа Почвы"
OperatorCompareTerrainType=~Value," ",~Operator," ",~Value
OperatorCompareTerrainTypeHint=

GetBooleanAnd="И"
GetBooleanAnd=~Condition 1," и ",~Condition 2
GetBooleanAndHint=

GetBooleanOr="ИЛИ"
GetBooleanOr=~Condition 1," ИЛИ ",~Condition 2
GetBooleanOrHint=

AndMultiple="И, Несколько условий"
AndMultiple="И - Все условия истинны"
AndMultipleHint="Условия И для этой функции в главном экране."

OrMultiple="ИЛИ, Несколько условий"
OrMultiple="ИЛИ - любое из условий истинно"
OrMultipleHint="Условия И для этой функции в главном экране."


//***************************************************************************
[TriggerActionStrings]

DoNothing="Ничего не делать"
DoNothing="Ничего не делать"
DoNothingHint=

CommentString="Комментарий"
CommentString="-------- ",~Comment Text," --------"
CommentStringHint=

CustomScriptCode="Личный сценарий"
CustomScriptCode="Личный сценарий:   ",~Script Code
CustomScriptCodeHint="Введите одну строку кода.  Пример: 'call my_func(udg_my_var)'"

TriggerSleepAction="Ждать"
TriggerSleepAction="Ждать ",~Time," секунд"
TriggerSleepActionHint="Длительность этой паузы задается в секундах реального времени."

PolledWait="Ждать (Игровое время)"
PolledWait="Ждать ",~Time," игровых секунд"
PolledWaitHint="Длительность этой паузы задается в секундах игрового времени..  Это ожидание может длиться немного больше."

WaitForCondition="Ждать Условия"
WaitForCondition="Ждать пока ",~Condition,", проверяя каждые ",~Interval," секунд"
WaitForConditionHint=

WaitForSoundBJ="Ждать Звука"
WaitForSoundBJ="Ждать звука ",~Sound," за ",~Time," секунд от окончания игры"
WaitForSoundBJHint="Это действие выполняется только если сейчас играет звук. Если звук еще не начался, или уже окончился, то это действие не выполняется."


// Specially handled by the editor
SetVariable="Установить переменную"
SetVariable="Установить ",~Variable," = ",~Value
SetVariableHint=


// Specially handled by the editor
ReturnAction="Пропустить оставшиеся действия"
ReturnAction="Пропустить оставшиеся действия"
ReturnActionHint="Это заставляет сценарий пропустить все оставшиеся действия."


// Specially handled by the editor
IfThenElseMultiple="Если / Тогда / Иначе, Функции"
IfThenElseMultiple="Если (все условия истинны) тогда (запуск операции) иначе (если нет, то запуск этого)"
IfThenElseMultipleHint="Добавьте условия и действия к этой функции в главною экране."

// Specially handled by the editor
IfThenElse="Если / Тогда / Иначе"
IfThenElse="Если ",~Condition," то делать ",~Action," иначе ",~Action
IfThenElseHint=

// Specially handled by the editor
ForLoopAMultiple="Для каждого числа A, Делать несколько действий
ForLoopAMultiple="Для каждого (Числа A) от ",~Start," до ",~End,", делать (действия)"
ForLoopAMultipleHint="Добавьте действия к этой функции в главном экране. Конечное значение должно быть дольше начального."

// Specially handled by the editor
ForLoopBMultiple="Для каждого Числа B, Совершать Операции
ForLoopBMultiple="Для каждого (Числа B) от ",~Start," до ",~End,", делать"
ForLoopBMultipleHint="Добавьте действия к этой функции в главном экране. Конечное значение должно быть дольше начального."

// Specially handled by the editor
ForLoopVarMultiple="Для каждой Переменной Integer, Совершать Операции
ForLoopVarMultiple="Для каждого (Числа ",~Variable,") от ",~Start," до ",~End,", делать"
ForLoopVarMultipleHint="Добавьте действия к этой функции в главном экране. Конечное значение должно быть дольше начального."

// Specially handled by the editor
ForLoopA="Для каждого Числа A, Делать"
ForLoopA="Для каждого (Числа A) от ",~Start," до ",~End,", делать ",~Action
ForLoopAHint="Конечное значение должно быть дольше начального."

// Specially handled by the editor
ForLoopB="Для каждого Числа B, Делать"
ForLoopB="Для каждого (Числа B) от ",~Start," до ",~End,", делать ",~Action
ForLoopBHint="Конечное значение должно быть дольше начального."

// Specially handled by the editor
ForLoopVar="Для каждой Переменной Integer, Совершать Операции"
ForLoopVar="Для каждого (Числа ",~Variable,") от ",~Start," до ",~End,", делать ",~Action
ForLoopVarHint="Конечное значение должно быть дольше начального."


// AI actions
StartMeleeAI="Начать Сценарий поведения ИИ"
StartMeleeAI="Начать сценарий поведения для ",~Player,": ",~Script
StartMeleeAIHint="Это нужно использовать только для игроков компьютеров. Когда пользуетесь этим действием, советуем включить 'Фиксированные Настройки Игрока' в свойствах."

StartCampaignAI="Начать сценарий кампании"
StartCampaignAI="Начать сценарий кампании для ",~Player,": ",~Script
StartCampaignAIHint="Это нужно использовать только для игроков компьютеров. Когда пользуетесь этим действием, советуем включить 'Фиксированные Настройки Игрока' в свойствах."

CommandAI="Послать команду"
CommandAI="Послать ",~Player," команду ИИ (",~Command,", ",~Data,")"
CommandAIHint="Это действие для внутреннего Использования в сценариях ИИ."

RemoveGuardPosition="Игнорировать Положение стража"
RemoveGuardPosition="Игнорировать ",~Unit,"'s положение стража"
RemoveGuardPositionHint="Это действие предписывает ни использовать, ни заменять место этого отряда.  Это не имеет действия на Героев и на крестьян."

RemoveAllGuardPositions="Игнорировать Положение Всех стражей"
RemoveAllGuardPositions="Игнорировать положение стражей всех отрядов ",~Player," "
RemoveAllGuardPositionsHint="Это действие предписывает ни использовать, ни заменять место этого отряда.  Это не имеет действия на Героев и на крестьян.."

RecycleGuardPosition="Использовать Положение стража"
RecycleGuardPosition="Использовать ",~Unit,"'s положение стража"
RecycleGuardPositionHint="Это действие заставляет ИИ использовать место, ранее занимаемое отрядом."

LockGuardPosition="Закрыть Положение стража"
LockGuardPosition="Закрыть положение стража ",~Unit
LockGuardPositionHint="Это действие не дает ИИ изменять положение стража."

// Animation actions
SetUnitAnimation="Воспроизводить Анимацию Отряда"
SetUnitAnimation="Воспроизводить анимацию ",~Unit," ",~Animation Name," "
SetUnitAnimationHint="Используйте 'Сбросить Анимацию' чтобы вернуться к нормальной анимации отряда."

SetUnitAnimationWithRarity="Воспроизвести Анимацию Отряда (Укажите Частоту)"
SetUnitAnimationWithRarity="Воспроизвести анимацию ",~Unit," ",~Animation Name,", используя только  ",~Rarity," повторов"
SetUnitAnimationWithRarityHint="Эта анимация будет повторяться, пока не будет сброшена 'Сбросить Анимацию'."

QueueUnitAnimationBJ="Анимацию В очередь"
QueueUnitAnimationBJ="Анимацию ",~Unit," ",~Animation Name," в очередь"
QueueUnitAnimationBJHint=

ResetUnitAnimation="Сбросить Анимацию"
ResetUnitAnimation="Сбросить ",~Unit," анимацию"
ResetUnitAnimationHint="Устанавливает анимацию отряда в исходное положение."

AddUnitAnimationPropertiesBJ="Убрать/Включить Анимацию Отряда"
AddUnitAnimationPropertiesBJ=~Add/Remove," ",~Tag," анимацию ",~Unit
AddUnitAnimationPropertiesBJHint=

SetUnitLookAt="Отключить Изменения Лицевой части"
SetUnitLookAt="Отключить изменения ",~Unit," ",~Source," лица ",~Unit,", сдвиг на (",~X,", ",~Y,", ",~Z,")"
SetUnitLookAtHint="Тело персонажа будет повернуто в цели, пока не произойдет событие 'Сбросить Поворот Туловища'.  Сдвиг (X, Y, Z) отсчитывается от ног объекта."

ResetUnitLookAt="Сбросить Поворот Туловища"
ResetUnitLookAt="Сбросить ",~Unit,"'s Поворот туловища"
ResetUnitLookAtHint="Возвращает поворот туловища в нормальное."

SetUnitScalePercent="Изменить Размер Отряда"
SetUnitScalePercent="Изменить ",~Unit,"'s размер до (",~X,"%, ",~Y,"%, ",~Z,"%) первоначального размера"
SetUnitScalePercentHint="Значения масштаба применены к (Длине, Ширине и Высоте)."

SetUnitVertexColorBJ="Изменить Окраску Верха Отряда"
SetUnitVertexColorBJ="Изменить окрасу верха ",~Unit,"'s на (",~Red,"%, ",~Green,"%, ",~Blue,"%) с ",~Transparency,"% прозрачности"
SetUnitVertexColorBJHint="Цвета (Красный, Зеленый, Голубой).  Большинство отрядов по умолчанию принимают 100% красного, зеленого и синего с 0% прозрачности. 100% прозрачный отряд полностью невидим."

SetUnitTimeScalePercent="Изменить Скорость анимации отряда"
SetUnitTimeScalePercent="Изменить Скорость анимации ",~Unit," на ",~Percent,"% от начально скорости"
SetUnitTimeScalePercentHint="Чтобы вернуть скорость к первоначальной, выберите ее 100%."

SetUnitTurnSpeedBJ="Изменить Скорость поворота Отряда"
SetUnitTurnSpeedBJ="Изменить Скорость поворота ",~Unit," на ",~Value
SetUnitTurnSpeedBJHint="Это значение определяет скорость разворота отряда.  Скорости могут принимать значения от 0 до 1, меньшие числа символизируют меньшую скорость поворота."

SetUnitBlendTimeBJ="Скорость Перемещения Отряда"
SetUnitBlendTimeBJ="Изменить ",~Unit," время перемещения ",~Value
SetUnitBlendTimeBJHint="Определяет, с какой скоростью части туловища отряда будут перемещаться в данном направлении."

SetUnitFlyHeightBJ="Изменить Высоту полета"
SetUnitFlyHeightBJ="Изменить Высоту полета ",~Unit," до ",~Height," при ",~Rate
SetUnitFlyHeightBJHint="Только летающие и парящие отряды могут изменять высоту полета."

SetUnitPropWindowBJ="Изменить Угол Окна Свойств"
SetUnitPropWindowBJ="Изменить Угол Окна Свойств ",~Unit," на ",~Angle
SetUnitPropWindowBJHint=

SetDestructableAnimationBJ="Воспроизвести Анимацию Разрушения"
SetDestructableAnimationBJ="Воспроизвести ",~Destructible,"'s ",~Animation Name," анимацию"
SetDestructableAnimationBJHint=

QueueDestructableAnimationBJ="В очередь Анимацию Разрушения"
QueueDestructableAnimationBJ="В очередь ",~Destructible,"'s ",~Animation Name," анимацию"
QueueDestructableAnimationBJHint=

SetDestAnimationSpeedPercent="Изменить Скорость Анимации Разрушения "
SetDestAnimationSpeedPercent="Изменить ",~Destructible,"'s скорость анимации ",~Percent,"% начальной скорости"
SetDestAnimationSpeedPercentHint="Чтобы вернуть скорость к начальной, установите ее до 100%."

SetDoodadAnimationRectBJ="Воспроизвести Анимацию Не Персонажей в Регионе"
SetDoodadAnimationRectBJ="Воспроизвести ",~Animation Name," анимацию для всех предметов типа ",~Doodad Type," в квадрате ",~Rect
SetDoodadAnimationRectBJHint=

SetDoodadAnimationBJ="Воспроизвести Анимацию Не Персонажей в Радиусе"
SetDoodadAnimationBJ="Воспроизвести ",~Animation Name," анимацию для всех предметов ",~Doodad Type," в радиусе ",~Radius," центра ",~Point
SetDoodadAnimationBJHint=


// Camera actions
CameraSetupApplyForPlayer="Применить Объект Камеры (Время)"
CameraSetupApplyForPlayer="",~Apply Method," ",~Camera Object," для ",~Player," на ",~Time," секунд"
CameraSetupApplyForPlayerHint=

PanCameraToTimedLocForPlayer="Переместить Камеру (Временно)"
PanCameraToTimedLocForPlayer="Переместить Камеру для ",~Player," к ",~Point," на ",~Time," секунд"
PanCameraToTimedLocForPlayerHint=

PanCameraToTimedLocWithZForPlayer="Переместить Камеру с интерполированной высотой (Время)"
PanCameraToTimedLocWithZForPlayer="Переместить Камеру для ",~Player," на ",~Point," на высоту ",~Z," над землей на ",~Time," секунд"
PanCameraToTimedLocWithZForPlayerHint="Камера не будет погружаться под землю при перемещении по маршруту."

SmartCameraPanBJ="Переместить Камеру при необходимости (Время)"
SmartCameraPanBJ="Переместить Камеру при необходимости для ",~Player," к ",~Point," на ",~Time," секунд"
SmartCameraPanBJHint="Если камера очень далеко, она переключится, а не переместится.  Если камера очень близко, то запрос на перемещение будет пропущен."

SetCameraFieldForPlayer="Установить Поле Камеры (Время)"
SetCameraFieldForPlayer="Установить ",~Player,"'s камеру ",~Field," на ",~Value," на ",~Time," секунд"
SetCameraFieldForPlayerHint=

RotateCameraAroundLocBJ="Вращать камеру Вокруг Точки"
RotateCameraAroundLocBJ="Вращать камеру на угол ",~Angle," вокруг ",~Point," для ",~Player," в течение ",~Time," секунд"
RotateCameraAroundLocBJHint=

SetCameraTargetControllerNoZForPlayer="Прикрепить Камеру к Отряду"
SetCameraTargetControllerNoZForPlayer="Прикрепить Камеру для ",~Player," к отряду ",~Unit,", расстояние (",~X,", ",~Y,") используя ",~Rotation Source
SetCameraTargetControllerNoZForPlayerHint="Цель камеры находится на расстоянии (X, Y) от центра подошв отряда."

SetCameraOrientControllerForPlayerBJ="Закрепить ориентацию камеры отряда"
SetCameraOrientControllerForPlayerBJ="Закрепить ориентацию камеры для ",~Player," к ",~Unit,", сдвиг на (",~X,", ",~Y,")"
SetCameraOrientControllerForPlayerBJHint=

SetCinematicCameraForPlayer="Воспроизвести Запись"
SetCinematicCameraForPlayer="Воспроизвести для ",~Player," из ",~Camera File," "
SetCinematicCameraForPlayerHint=

StopCameraForPlayerBJ="Остановить Камеру"
StopCameraForPlayerBJ="Остановить камеру ",~Player
StopCameraForPlayerBJHint=

ResetToGameCameraForPlayer="Сбросить камеру игры"
ResetToGameCameraForPlayer="Сбросить камеру для ",~Player," в стандартный вид на ",~Time," секунд"
ResetToGameCameraForPlayerHint=

CameraSetSmoothingFactorBJ="Изменить Сглаживающий фактор камеры"
CameraSetSmoothingFactorBJ="Изменить сглаживающий фактор камеры на ",~Factor
CameraSetSmoothingFactorBJHint=

CameraResetSmoothingFactorBJ="Сбросить Сглаживающий фактор камеры"
CameraResetSmoothingFactorBJ="Сбросить сглаживающий фактор камеры"
CameraResetSmoothingFactorBJHint=

CameraSetSourceNoiseForPlayer="Повернуть по Горизонтали"
CameraSetSourceNoiseForPlayer="Повернуть камеру по Горизонтали для ",~Player," с увеличением ",~Magnitude," и скоростью ",~Velocity
CameraSetSourceNoiseForPlayerHint="Будет поворачивать камеру до тех пор, пока не вызовут событие 'Камера - Сбросить Игровую Камеру' или 'Камера - Прекратить Поворот Камеры'."

CameraSetTargetNoiseForPlayer="Вращать Цель Камеры"
CameraSetTargetNoiseForPlayer="Вращать Цель Камеры  для ",~Player," с увеличением ",~Magnitude," и скоростью ",~Velocity
CameraSetTargetNoiseForPlayerHint="Будет поворачивать камеру до тех пор, пока не вызовут событие 'Камера - Сбросить Игровую Камеру' или 'Камера - Прекратить Поворот Камеры'."

CameraSetEQNoiseForPlayer="Трясти камеру"
CameraSetEQNoiseForPlayer="Трясти камеру для ",~Player," с увеличением ",~Magnitude
CameraSetEQNoiseForPlayerHint="Будет трясти камеру до тех пор, пока не вызовут событие 'Камера - Сбросить Игровую Камеру' или 'Камера - Прекратить Тряску/Поворот Камеры'"

CameraClearNoiseForPlayer="Прекратить Тряску/Поворот Камеры "
CameraClearNoiseForPlayer="Прекратить Тряску/Поворот Камеры для ",~Player
CameraClearNoiseForPlayerHint="Это прекращает действие  'Камера - Вращать Камеру' или 'Камеру - Трясти Камеру'."

AdjustCameraBoundsForPlayerBJ="Расширить/сузить Границы камеры"
AdjustCameraBoundsForPlayerBJ=~Расширить/сузить," границы камеры для ",~Player," на запад ",~West,", на восток ",~East,", на север ",~North,", и на юг ",~South
AdjustCameraBoundsForPlayerBJHint=

SetCameraBoundsToRectForPlayerBJ="Установить Границы камеры"
SetCameraBoundsToRectForPlayerBJ="Установить границы камеры для ",~Player," на ",~Region
SetCameraBoundsToRectForPlayerBJHint="Это фиксирует камеру на определенном регионе. Изменение границы камеры не изменит масштаба камеры.  Приметь это нужно только когда камера обращена на север."

SetCameraQuickPositionLocForPlayer="Установить Точку пробела"
SetCameraQuickPositionLocForPlayer="Установить a Точку пробела для ",~Player," в ",~Point
SetCameraQuickPositionLocForPlayerHint="Точка пробела это место, в которое перемещается камера, когда игрок нажимает пробел."


// Cinematic actions
TransmissionFromUnitWithNameBJ="Передача от Отряда"
TransmissionFromUnitWithNameBJ="Послать передачу ",~Player Group," от ",~Unit," по имени ",~Name,": Воспроизвести ",~Sound," и показать ",~Message,".  Изменить продолжительность: ",~Method," ",~Time," секунд и ",~Wait/Don't Wait
TransmissionFromUnitWithNameBJHint="Длительность 'Без звука'  5 секунд."

TransmissionFromUnitTypeWithNameBJ="Передача от Отряда-Типа"
TransmissionFromUnitTypeWithNameBJ="Послать передачу ",~Player Group," от ",~Player," ",~Unit-Type," по имени ",~Name," в ",~Point,": Воспроизвести ",~Sound," и показать ",~Message,".  Изменить продолжительность: ",~Method," ",~Time," секунд и ",~Wait/Don't Wait
TransmissionFromUnitTypeWithNameBJHint="Длительность 'Без звука'  5 секунд."

ForceCinematicSubtitlesBJ="Показывать Титры Принудительно"
ForceCinematicSubtitlesBJ="Показывать Титры Принудительно ",~On/Off
ForceCinematicSubtitlesBJHint="Будет показывать субтитры на экране даже в том случае, если они отключены в настройках."

CinematicModeBJ="Режим Кинематики"
CinematicModeBJ="Режим Кинематики ",~On/Off," для  ",~Player Group
CinematicModeBJHint=

CinematicModeExBJ="Режим кинематики (Время)"
CinematicModeExBJ="Режим кинематики ",~On/Off," для ",~Player Group," на ",~Time," секунд"
CinematicModeExBJHint=

CinematicFadeBJ="Фильтр Снижения Яркости"
CinematicFadeBJ=~Fade Type," на ",~Duration," секунд с текстурой ",~Texture," и цветом (",~Red,"%, ",~Green,"%, ",~Blue,"%) с ",~Transparency,"% прозрачности"
CinematicFadeBJHint="Цвета (Красный, Зеленый, Голубой). 100% прозрачный отряд полностью невидим."

CinematicFilterGenericBJ="Дополнительный Фильтр"
CinematicFilterGenericBJ="Применить фильтр на ",~Duration," секунд используя ",~Blending Method," на текстуре ",~Texture,", начиная с цвета (",~Red,"%, ",~Green,"%, ",~Blue,"%) и ",~Transparency,"% прозрачности и заканчивая цветом (",~Red,"%, ",~Green,"%, ",~Blue,"%) и ",~Transparency,"% призрачности"
CinematicFilterGenericBJHint="Цвета (Красный, Зеленый, Голубой). 100% прозрачный отряд полностью невидим."

DisplayCineFilterBJ="Показать/Спрятать фильтр"
DisplayCineFilterBJ=~Show/Hide," фильтр"
DisplayCineFilterBJHint=

PingMinimapLocForForce="Поиск по Карте"
PingMinimapLocForForce="Показать на Карте  ",~Player Group," в ",~Point," в течение ",~Duration," секунд"
PingMinimapLocForForceHint=

PingMinimapLocForForceEx="Показать на Карте с Цветом"
PingMinimapLocForForceEx="Поиск по мини карте  ",~Player Group," в ",~Point," в течение ",~Duration," секунд, используя ",~Style," цвет поиска ("~Red,"%, ",~Green,"%, ",~Blue,"%)"
PingMinimapLocForForceExHint="Цвета (Красный, Зеленый, Голубой). Внимание, поиск всегда красный."

UnitAddIndicatorBJ="Мерцающий индикатор речи отряда"
UnitAddIndicatorBJ="Мерцающий индикатор речи отряда ",~Unit," цвета (",~Red,"%, ",~Green,"%, ",~Blue,"%) с ",~Transparency,"% прозрачности"
UnitAddIndicatorBJHint="Цвета (Красный, Зеленый, Голубой). 100% прозрачный отряд полностью невидим."

DestructableAddIndicatorBJ="Мерцающий индикатор речи для Разрушаемых"
DestructableAddIndicatorBJ="Мерцающий индикатор речи ",~Destructible," цвета (",~Red,"%, ",~Green,"%, ",~Blue,"%) с ",~Transparency,"% прозрачности"
DestructableAddIndicatorBJHint="Цвета (Красный, Зеленый, Голубой). 100% прозрачный отряд полностью невидим."

ItemAddIndicatorBJ="Мерцающий индикатор речи для предмета"
ItemAddIndicatorBJ="Мерцающий индикатор речи для ",~Item," цвета (",~Red,"%, ",~Green,"%, ",~Blue,"%) с ",~Transparency,"% прозрачности"
ItemAddIndicatorBJHint="Цвета (Красный, Зеленый, Голубой). 100% прозрачный отряд полностью невидим."

ClearTextMessagesBJ="Очистить Текст Сообщения"
ClearTextMessagesBJ="Очистить Текст Сообщения для ",~Player Group
ClearTextMessagesBJHint=

ShowInterfaceForceOff="Включение режима Почтового Ящика"
ShowInterfaceForceOff="Включение режима Почтового Ящика (скрыть интерфейс) для ",~Player Group,": выключение через ",~Duration," секунд"
ShowInterfaceForceOffHint="Включение камеры в режима Почтового Ящика, скрывает интерфейс пользователя."

ShowInterfaceForceOn="Режим Почтового ящика выключен"
ShowInterfaceForceOn="Выключение ящика (показывает интерфейс) для ",~Player Group,": включение через ",~Duration," секунд"
ShowInterfaceForceOnHint="Включает камеру в нормальный режим, показывая интерфейс игры."

SetUserControlForceOff="Отключить используемые клавиши"
SetUserControlForceOff="Отключить используемые клавиши для ",~Player Group
SetUserControlForceOffHint=

SetUserControlForceOn="Включить используемые клавиши"
SetUserControlForceOn="Включить используемые клавиши для ",~Player Group
SetUserControlForceOnHint=

EnableOcclusionBJ="Включить/Выключить Преграды"
EnableOcclusionBJ=~Включить/Отключить," преграды для ",~Player Group
EnableOcclusionBJHint="Когда этот режим включен, деревья, которые заслоняют отрядлы, будут видны."

EnableWorldFogBoundaryBJ="Включить/Выключить Обрезку краев"
EnableWorldFogBoundaryBJ=~Включить/Отключить," Обрезку краев для ",~Player Group
EnableWorldFogBoundaryBJHint=


// Countdown Timer actions
StartTimerBJ="Запустить Таймер"
StartTimerBJ="Запустить ",~Timer," как ",~One-Shot/Repeating," таймер, который зазвонит через ",~Time," секунд"
StartTimerBJHint=

PauseTimerBJ="Остановить"
PauseTimerBJ=~Pause/Resume," ",~Timer
PauseTimerBJHint=

CreateTimerDialogBJ="Создать окно таймера"
CreateTimerDialogBJ="Создать окно таймера  для ",~Timer," с названием ",~Title
CreateTimerDialogBJHint="Окна таймера нельзя показывать при инициализации Карты."

DestroyTimerDialogBJ="Уничтожить Окно Таймера"
DestroyTimerDialogBJ="Уничтожить ",~Timer Window
DestroyTimerDialogBJHint=

TimerDialogDisplayForPlayerBJ="Скрыть/Показать Окно Таймера для игрока"
TimerDialogDisplayForPlayerBJ=~Show/Hide," ",~Timer Window," для ",~Player
TimerDialogDisplayForPlayerBJHint="Окна таймера нельзя показывать при инициализации Карты."

TimerDialogDisplayBJ="Скрыть/Показать Окно Таймера"
TimerDialogDisplayBJ=~Show/Hide," ",~Timer Window
TimerDialogDisplayBJHint="Окна таймера нельзя показывать при инициализации Карты."

TimerDialogSetTitleBJ="Изменить Название Окна Таймера"
TimerDialogSetTitleBJ="Изменить название ",~Timer Window," на ",~Title
TimerDialogSetTitleBJHint=

TimerDialogSetTitleColorBJ="Изменить Цвет Окна Таймера"
TimerDialogSetTitleColorBJ="Изменить цвет названия окна таймера ",~Timer Window," на (",~Red,"%, ",~Green,"%, ",~Blue,"%) с ",~Transparency,"% прозрачностью"
TimerDialogSetTitleColorBJHint="Цвета (Красный, Зеленый, Голубой). 100% прозрачный отряд полностью невидим."

TimerDialogSetTimeColorBJ="Изменить Цвет Времени в Окне Таймера"
TimerDialogSetTimeColorBJ="Изменить цвет времени ",~Timer Window," на (",~Red,"%, ",~Green,"%, ",~Blue,"%) с ",~Transparency,"% прозрачности"
TimerDialogSetTimeColorBJHint="Цвета (Красный, Зеленый, Голубой). 100% прозрачный отряд полностью невидим."

//TimerDialogSetSpeedBJ="Установить Скорость Окна Таймера "
//TimerDialogSetSpeedBJ="Установить скорость ",~Timer Window," в ",~Factor," раз больше или меньше нормальной"
//TimerDialogSetSpeedBJHint=


// Destructable actions
CreateDestructableLoc="Создать"
CreateDestructableLoc="Создать ",~Destructible-Type," в ",~Point," с лицом ",~Direction," с масштабом ",~Scale," и вариацией ",~Variation
CreateDestructableLocHint="Угол поворота должен быть от 0 - восток до 90 север.  Используйте 'Последний Созданный Объект', чтобы обратиться к Объекту."

CreateDeadDestructableLocBJ="Создать (Мертвого)"
CreateDeadDestructableLocBJ="Создать мертвого ",~Destructible-Type," в ",~Point," в направлении ",~Direction," с масштабом ",~Scale," и вариацией ",~Variation
CreateDeadDestructableLocBJHint="Угол поворота должен быть от 0 - восток до 90 север.  Используйте 'Последний Созданный Объект', чтобы обратиться к Объекту."

KillDestructable="Убить"
KillDestructable="Убить ",~Destructible
KillDestructableHint=

RemoveDestructable="Удалить"
RemoveDestructable="Удалить ",~Destructible
RemoveDestructableHint=

DestructableRestoreLife="Возродить"
DestructableRestoreLife="Возродить ",~Destructible," с ",~Value," жизни и ",~Show/Hide," анимацию рождения"
DestructableRestoreLifeHint=

ShowDestructableBJ="Скрыть/Показать"
ShowDestructableBJ=~Show/Hide," ",~Destructible
ShowDestructableBJHint="Скрытые объекты не показываются, но влияют на видимость и прохождение."

SetDestructableLifePercentBJ="Установить Жизнь (В процентах)"
SetDestructableLifePercentBJ="Установить жизнь ",~Destructible," до ",~Percent,"%"
SetDestructableLifePercentBJHint=

SetDestructableLife="Установить Жизнь (Значение)"
SetDestructableLife="Установить жизнь ",~Destructible," в ",~Value
SetDestructableLifeHint=

SetDestructableMaxLifeBJ="Установить Макс Жизнь"
SetDestructableMaxLifeBJ="Установить макс жизнь ",~Destructible," до ",~Value
SetDestructableMaxLifeBJHint=

ModifyGateBJ="Открыть/Закрыть/Уничтожить Ворота"
ModifyGateBJ=~Open/Close/Уничтожить," ",~Gate
ModifyGateBJHint=

ChangeElevatorWalls="Открыть/Закрыть Подъемные Стены"
ChangeElevatorWalls=~Open/Close," ",~Walls," ",~Elevator
ChangeElevatorWallsHint=

ChangeElevatorHeight="Установить Высоту Подъема"
ChangeElevatorHeight="Установить высоту  ",~Elevator," до ",~Height
ChangeElevatorHeightHint=

SetDestructableInvulnerableBJ="Сделать Уязвимым/Неуязвимым"
SetDestructableInvulnerableBJ="Сделать ",~Destructible," ",~Invulnerable/Vulnerable
SetDestructableInvulnerableBJHint=

SetDestructableOccluderHeight="Установить высоту преграды"
SetDestructableOccluderHeight="Установить высоту преграды ",~Destructible," равной ",~Height
SetDestructableOccluderHeightHint=

EnumDestructablesInRectAllMultiple="Выбрать все разрушаемое в регионе и произвести множественные действия"
EnumDestructablesInRectAllMultiple="Выбрать все разрушаемое в ",~Region," и произвести (Действия)"
EnumDestructablesInRectAllMultipleHint="Используйте 'Выбранное разрушаемое' для ссылки на каждый разрушаемый объект при его выборе. Работает для всего разрушаемого в регионе, включая мертвых разрушаемых. Действия ожидания не используются в этой функции. Добавьте действия к этой функции на главном экране."

EnumDestructablesInCircleBJMultiple="Выбрать все разрушаемое в круге и произвести множественные действия"
EnumDestructablesInCircleBJMultiple="Выбрать все разрушаемое в радиусе ",~Radius," ",~Point," и произвести (Действия)"
EnumDestructablesInCircleBJMultipleHint="Используйте 'Выбранное разрушаемое' для ссылки на каждый разрушаемый объект при его выборе. Работает для всего разрушаемого в регионе, включая мертвых разрушаемых. Действия ожидания не используются в этой функции. Добавьте действия к этой функции на главном экране."

EnumDestructablesInRectAll="Выбрать все разрушаемое в регионе и произвести действие"
EnumDestructablesInRectAll="Выбрать все разрушаемое в ",~Region," и произвести ",~Action
EnumDestructablesInRectAllHint="Используйте 'Выбранное разрушаемое' для ссылки на каждый разрушаемый объект при его выборе. Работает для всего разрушаемого в регионе, включая мертвых разрушаемых. Действия ожидания не используются в этой функции."

EnumDestructablesInCircleBJ="Выбрать все разрушаемое в круге и произвести действие"
EnumDestructablesInCircleBJ="Выбрать все разрушаемое в радиусе ",~Radius," ",~Point," и произвести ",~Action
EnumDestructablesInCircleBJHint="Используйте 'Выбранное разрушаемое' для ссылки на каждый разрушаемый объект при его выборе. Работает для всего разрушаемого в регионе, включая мертвых разрушаемых. Действия ожидания не используются в этой функции."


// Dialog actions
DialogDisplayBJ="Скрыть/Показать"
DialogDisplayBJ=~Show/Hide," ",~Dialog," для ",~Player
DialogDisplayBJHint="Диалоги не могут отображать при инициализации карты."

DialogSetMessageBJ="Смена названия"
DialogSetMessageBJ="Смена названия ",~Dialog," на ",~Title
DialogSetMessageBJHint=

DialogAddButtonBJ="Создать кнопку диалога"
DialogAddButtonBJ="Создать кнопку диалога для ",~Dialog," с отметкой ",~Text
DialogAddButtonBJHint=

DialogClearBJ="Очистить"
DialogClearBJ="Очистить ",~Dialog
DialogClearBJHint="Стирает название и все кнопки для указанного диалога."


// Environment actions
AddWeatherEffectSaveLast="Создать погодный эффект"
AddWeatherEffectSaveLast="Создать в ",~Region," погодный эффект ",~Weather Id
AddWeatherEffectSaveLastHint=

EnableWeatherEffect="Включить/Выключить погодный эффект"
EnableWeatherEffect="Переключить ",~Weather Effect," ",~On/Off
EnableWeatherEffectHint="Вы можете создавать погодные эффекты через действие 'Окружение - Создать погодный эффект'."

RemoveWeatherEffectBJ="Удалить погодный эффект"
RemoveWeatherEffectBJ="Удалить ",~Weather Effect
RemoveWeatherEffectBJHint=

TerrainDeformationCraterBJ="Создать деформацию местности: Кратер"
TerrainDeformationCraterBJ="Создать на ",~Duration," секунд ",~Type," деформацию-кратер в ",~Point," с радиусом ",~Radius," и глубиной ",~Depth
TerrainDeformationCraterBJHint="Используйте 'Последняя созданная деформация местности' для ссылки на эту деформацию местности. Глубина может быть отрицательной для выпуклостей. Постоянные деформации не сохраняются в сохраненных файлах игры."

TerrainDeformationRippleBJ="Создать деформацию местности: Рябь"
TerrainDeformationRippleBJ="Создать на ",~Duration," секунд ",~Type," деформацию рябь в ",~Point," с начальным радиусом ",~Radius,", конечным радиусом ",~Radius,", и глубиной ",~Depth,", используя ",~Time," второй волны и интервал ",~Distance," между волнами"
TerrainDeformationRippleBJHint="Используйте 'Последняя созданная деформация местности' для ссылки на эту деформацию местности."

TerrainDeformationWaveBJ="Создать деформацию местности: Волна"
TerrainDeformationWaveBJ="Создать на ",~Duration," секунд деформацию-волну от ",~Source," до ",~Target," с радиусом ",~Radius,", глубиной ",~Depth," и ",~Delay," секунд задержкой между волнами"
TerrainDeformationWaveBJHint="Используйте 'Последняя созданная деформация местности' для ссылки на эту деформацию местности. Глубина может быть отрицательной для выпуклостей."

TerrainDeformationRandomBJ="Создать деформацию местности: Случайная"
TerrainDeformationRandomBJ="Создать на ",~Duration," секунд случайную деформацию в ",~Point," с радиусом ",~Radius,", используя глубины между ",~Minimum," и ",~Maximum,", с обновлением каждые ",~Update Interval," секунд"
TerrainDeformationRandomBJHint="Используйте 'Последняя созданная деформация местности' для ссылки на эту деформацию местности."

TerrainDeformationStopBJ="Прекратить деформацию местности"
TerrainDeformationStopBJ="Прекратить ",~Terrain Deformation," на ",~Duration," секунд"
TerrainDeformationStopBJHint="Деформация будет плавно сведена до нуля на указанное время."

TerrainDeformStopAll="Прекратить все деформации местности"
TerrainDeformStopAll="Мгновенно прекратить все активные деформации местности"
TerrainDeformStopAllHint="В том числе все деформации местности, косвенно вызванные заклинаниями или способностями."

SetWaterDeforms="Деформация Воды Включить/Выкючить"
SetWaterDeforms="Деформация воды ",~On/Off
SetWaterDeformsHint="When this is turned on, terrain deformations will also apply to any water above the terrain.  This does not work with permanent deformations."

SetTerrainTypeBJ="Изменить Тип Земли"
SetTerrainTypeBJ="Изменить тип земли ",~Location," на ",~Terrain Type," используя вариацию ",~Variation," в регионе размером ",~Area," и формой ",~Shape
SetTerrainTypeBJHint="Используйте значение вариации - 1, чтобы установить случайную вариацию."

SetTerrainPathableBJ="Преобразование Маршрута Местности Включить/Выкючить"
SetTerrainPathableBJ="Установить маршрут ",~Location," тип ",~Pathing,", который ",~On/Off
SetTerrainPathableBJHint="Turning pathing on causes the pathing cell to become pathable to the given type.  For example, turning 'Buildability' on makes the pathing cell buildable.  This only affects pathing restrictions caused by terrain (not doodads, units, etc.)."

SetWaterBaseColorBJ="Установить цвет закраски воды"
SetWaterBaseColorBJ="Изменить цвет закраски воды на (",~Red,"%, ",~Green,"%, ",~Blue,"%) с ",~Transparency,"% прозрачностью"
SetWaterBaseColorBJHint="Цвет указывается в формате (Красный, Зеленый, Синий). На 100% прозрачная вода - невидимая вода."

SetSkyModel="Установить небо"
SetSkyModel="Установить небо как ",~Sky
SetSkyModelHint=

SetTerrainFogExBJ="Установить туман"
SetTerrainFogExBJ="Установить туман стиля ",~Style,", z-начало ",~Z-Start,", z-конец ",~Z-End,", плотности ",~Density," и цвета (",~Red,"%, ",~Green,"%, ",~Blue,"%)"
SetTerrainFogExBJHint="Цвет указывается в формате (Красный, Зеленый, Синий)."

ResetTerrainFogBJ="Сброс тумана"
ResetTerrainFogBJ="Сброс тумана до значений по умолчанию"
ResetTerrainFogBJHint=

SetBlightRectBJ="Создать/Удалить пораженный болезнью регион"
SetBlightRectBJ=~Create/Remove," Болезнь растений для ",~Player," в ",~Region
SetBlightRectBJHint=

SetBlightRadiusLocBJ="Создать/Удалить пораженный болезнью круг"
SetBlightRadiusLocBJ=~Create/Remove," Болезнь растений для ",~Player," от ",~Point," с радиусом ",~Radius
SetBlightRadiusLocBJHint=


// Text Tag actions
CreateTextTagLocBJ="Создать плавающий текст в точке"
CreateTextTagLocBJ="Создать плавающий текст, гласящий ",~Message," в ",~Point," с Z смещением ",~Z,", используя размер шрифта ",~Size,", цвет (",~Red,"%, ",~Green,"%, ",~Blue,"%) и ",~Transparency,"% прозрачность"
CreateTextTagLocBJHint=

CreateTextTagUnitBJ="Создать плавающий текст над юнитом"
CreateTextTagUnitBJ="Создать плавающий текст, гласящий ",~Message," над ",~Unit," с Z смещением ",~Z,", используя размер шрифта ",~Size,", цвет (",~Red,"%, ",~Green,"%, ",~Blue,"%) и ",~Transparency,"% прозрачность"
CreateTextTagUnitBJHint="Плавающий текст, созданный таким образом, не передвигается вместе с юнитом."

DestroyTextTagBJ="Уничтожить"
DestroyTextTagBJ="Уничтожить ",~Floating Text
DestroyTextTagBJHint=

ShowTextTagForceBJ="Скрыть/Показать"
ShowTextTagForceBJ=~Show/Hide," ",~Floating Text," для ",~Player Group
ShowTextTagForceBJHint=

SetTextTagVelocityBJ="Установить скорость"
SetTextTagVelocityBJ="Установить скорость ",~Floating Text," как ",~Speed," под углом ",~Angle," градусов"
SetTextTagVelocityBJHint="Вы можете точно устанавливать скорость плавающего текста один раз при его первом создании.  Угол задается в градусах, где 0 отвечает за восток, а 90 - север."

SetTextTagColorBJ="Изменить цвет"
SetTextTagColorBJ="Изменить цвет ",~Floating Text," на (",~Red,"%, ",~Green,"%, ",~Blue,"%) с ",~Transparency,"% прозрачностью"
SetTextTagColorBJHint="Цвет указывается в формате (Красный, Зеленый, Синий)."

SetTextTagPosBJ="На Положение Предмета"
SetTextTagPosBJ="На положение предмета ",~Floating Text," на ",~Point," с высотой ",~Z
SetTextTagPosBJHint=

SetTextTagPosUnitBJ="На Положение Юнита"
SetTextTagPosUnitBJ="На положение юнита ",~Floating Text," на ",~Unit," с высотой ",~Z
SetTextTagPosUnitBJHint=

SetTextTagTextBJ="Изменить Текст"
SetTextTagTextBJ="Изменить текст ",~Floating Text," на ",~Message," размером ",~Size
SetTextTagTextBJHint=

SetTextTagSuspendedBJ="Остановка/Продоление"
SetTextTagSuspendedBJ="Изменить ",~Floating Text,": ",~Включить/Отключить," приостановку"
SetTextTagSuspendedBJHint=

SetTextTagPermanentBJ="Постоянный/Временный"
SetTextTagPermanentBJ="Изменить ",~Floating Text,": ",~Включить/Отключить," постоянство"
SetTextTagPermanentBJHint=

SetTextTagLifespanBJ="Изменить Распределение Существования"
SetTextTagLifespanBJ="Изменить распределение существования ",~Floating Text," на ",~Time," секунд"
SetTextTagLifespanBJHint="Не влияет на постоянный плавающий текст."

SetTextTagFadepointBJ="Изменить Время Затухания"
SetTextTagFadepointBJ="Изменить время затухания ",~Floating Text," на ",~Time," секунд"
SetTextTagFadepointBJHint="Не влияет на постоянный плавающий текст."

SetTextTagAgeBJ="Изменить Время"
SetTextTagAgeBJ="Изменить Время ",~Floating Text," на ",~Time," секунд"
SetTextTagAgeBJHint="Не влияет на постоянный плавающий текст."


// Game actions
DisplayTextToForce="Текстовое сообщение (время автоматически)"
DisplayTextToForce="Показывать ",~Player Group," текст: ",~Text
DisplayTextToForceHint="Текст показывается определенное время, автоматически изменяемое в зависимости от длины текста."

DisplayTimedTextToForce="Текстовое сообщение (время задается)"
DisplayTimedTextToForce="Показывать ",~Player Group," в течение ",~Time," секунд текст: ",~Text
DisplayTimedTextToForceHint=

PauseGameOn="Пауза игры"
PauseGameOn="Приостановить игру"
PauseGameOnHint=

PauseGameOff="Снять паузу игры"
PauseGameOff="Продолжить игру"
PauseGameOffHint=

SetGameSpeed="Установить скорость игры"
SetGameSpeed="Установить скорость игры ",~Speed
SetGameSpeedHint="Вы можете блокировать скорость игры при помощи действия 'Игра - Блокировка скорости игры'."

LockGameSpeedBJ="Блокировка скорости игры"
LockGameSpeedBJ="Блокирует скорость игры"
LockGameSpeedBJHint="Блокирует возможность изменения скорости игры. Даже триггеры не изменяют скорость игры, когда она блокирована."

UnlockGameSpeedBJ="Разблокировка скорости игры"
UnlockGameSpeedBJ="Разблокирует скорость игры"
UnlockGameSpeedBJHint="Включает возможность изменять скорость игры после использования действия 'Игра - Блокировка скорости игры'."

SetMapFlag="Определить флаг карты"
SetMapFlag="Определить ",~Map Flag," как ",~On/Off
SetMapFlagHint=

SetTimeOfDay="Установить время дня"
SetTimeOfDay="Установить время дня как ",~Time
SetTimeOfDayHint="Игровой день 24 часа.  Шесть утра это  6.00, а шесть вечера 18.00."

SetTimeOfDayScalePercentBJ="Установить скорость времени дня"
SetTimeOfDayScalePercentBJ="Установить скорость времени дня ",~Percent,"% от скорости по умолчанию"
SetTimeOfDayScalePercentBJHint="Выберите 100% для возврата нормальной скорости."

UseTimeOfDayBJ="Цикл День/Ночь Включение/Выключение"
UseTimeOfDayBJ="Переключение цикла день/ночь ",~On/Off
UseTimeOfDayBJHint=

ShareEverythingWithTeam="Делить обзор и полный контроль юнитами с командой"
ShareEverythingWithTeam="Предоставить права обзора и полного контроля юнитами игрока ",~Player," его/ее союзникам"
ShareEverythingWithTeamHint="Два игрока считаются союзниками, если они заключили друг с другом союз."

MakeUnitsPassiveForPlayer="Отдать юниты нейтральной жертве"
MakeUnitsPassiveForPlayer="Отдать все юниты игрока ",~Player," игроку-нейтральной жертве"
MakeUnitsPassiveForPlayerHint="По умолчанию, игрок Нейтральная Жертва считает всех других игроков союзниками, хотя все другие принимают его за врага."

SetNextLevelBJ="Установить следующий уровень"
SetNextLevelBJ="Установить следующий уровень ",~Level
SetNextLevelBJHint="Определяет уровень для начала игры после завершения текущей игры."

CustomVictoryBJ="Победа"
CustomVictoryBJ="Победа ",~Player," (",~Show/Skip," диалоги, ",~Show/Skip," счет)"
CustomVictoryBJHint=

CustomDefeatBJ="Поражение"
CustomDefeatBJ="Поражение ",~Player," с сообщением: ",~Message
CustomDefeatBJHint=

LoadGameBJ="Загрузить игру"
LoadGameBJ="Загрузить ",~Filename," (",~Show/Skip," счет)"
LoadGameBJHint="Это действие работает только для карт, подписанных Blizzard."

SaveAndLoadGameBJ="Сохранить игру и загрузить игру"
SaveAndLoadGameBJ="Сохранить игру как ",~Filename," и загрузить ",~Filename," (",~Show/Skip," счет)"
SaveAndLoadGameBJHint="Это действие работает только для карт, подписанных Blizzard."

SaveAndChangeLevelBJ="Сохранить игру и изменить уровень"
SaveAndChangeLevelBJ="Сохранить игру как ",~Filename," и изменить уровень на ",~Filename," (",~Show/Skip," счет)"
SaveAndChangeLevelBJHint="Это действие работает только для карт, подписанных Blizzard."

RenameSaveDirectoryBJ="Переименовать папку сохранения игр"
RenameSaveDirectoryBJ="Переименовать ",~Folder," папку сохранения игр на ",~Folder
RenameSaveDirectoryBJHint="Это действие работает только для карт, подписанных Blizzard."

RemoveSaveDirectoryBJ="Удалить папку сохранения игр"
RemoveSaveDirectoryBJ="Удалить ",~Folder," папку сохранения игр"
RemoveSaveDirectoryBJHint="Это действие работает только для карт, подписанных Blizzard.  Удаляется указанная папка сохранения игр и все ее содержимое."

CopySaveGameBJ="Копировать сохраненную игру"
CopySaveGameBJ="Создать копию файла ",~Filename," сохраненной игры и назвать ее ",~Filename
CopySaveGameBJHint="Это действие работает только для карт, подписанных Blizzard."

SetCampaignMenuRaceBJ="Определить экран кампании"
SetCampaignMenuRaceBJ="Определить кампанию как ",~Campaign
SetCampaignMenuRaceBJHint=

SetMissionAvailableBJ="Включить/Выключить миссию"
SetMissionAvailableBJ=~Включить/Отключить," ",~Mission
SetMissionAvailableBJHint=

SetCampaignAvailableBJ="Включить/Выключить кампанию"
SetCampaignAvailableBJ=~Включить/Отключить," ",~Campaign
SetCampaignAvailableBJHint=

SetCinematicAvailableBJ="Включить/Выключить кинематику"
SetCinematicAvailableBJ=~Включить/Отключить," ",~Cinematic
SetCinematicAvailableBJHint=

ShowCustomCampaignButton="Показать/Спрятать кнопку своей кампании"
ShowCustomCampaignButton=~Show/Hide," кнопку своей кампании ",~Number
ShowCustomCampaignButtonHint=

SetAllyColorFilterState="Установить цветовой фильтр союзников"
SetAllyColorFilterState="Установить цветовой фильтр союзников как ",~State
SetAllyColorFilterStateHint="Значение 0 выключает фильтрацию.  Значение 1 включает фильтрацию для миникарты.  Значение 2 включает фильтрацию для миникарты и обзора игры."

SetCreepCampFilterState="Показать/Скрыть лагеря на Миникарте"
SetCreepCampFilterState=~Show/Hide," лагеря на миникарте"
SetCreepCampFilterStateHint=

EnableMinimapFilterButtons="Включить/Отключить Кнопки Миникарты"
EnableMinimapFilterButtons=~Включить/Отключить," кнопки цвета союзников ",~Включить/Отключить," кнопки отображения лагерей"
EnableMinimapFilterButtonsHint=

EnableSelect="Включить/Отключить Возможность Выбора"
EnableSelect=~Включить/Отключить," возможность выбора (",~Включить/Отключить," круги выбора)"
EnableSelectHint="Objects can still be selected and deselected via trigger actions.  Disabling selection prevents drag-selection as well.  Selection circles are only displayed if selection is enabled."

EnableDragSelect="Включить/Отключить Возможность Мульти-Выбора"
EnableDragSelect=~Включить/Отключить," возможность мульти-выбора (",~Включить/Отключить," прямоугольное выделение)"
EnableDragSelectHint=

EnablePreSelect="Включить/Отключить Предварительный Просмотр"
EnablePreSelect=~Включить/Отключить," возможность предварительного просмотра (",~Включить/Отключить," круги выбора, состояние здоровья, и информацию об объекте)"
EnablePreSelectHint=

ForceUIKeyBJ="Принудительно клавиша интерфейса"
ForceUIKeyBJ="Заставить ",~Player," нажимать клавишу ",~Key
ForceUIKeyBJHint=

ForceUICancelBJ="Принудительно отмена интерфейса"
ForceUICancelBJ="Заставить ",~Player," нажать Escape/Отмена"
ForceUICancelBJHint=

Preload="Предзагрузка файла"
Preload="Предзагрузить ",~Filename
PreloadHint=

PreloadEnd="Начало предзагрузки"
PreloadEnd="Начать предзагрузку с временем простоя ",~Time," секунд"
PreloadEndHint=

Preloader="Предзагрузка пакета"
Preloader="Предзагрузка всех файлов, перечисленных в ",~Filename
PreloaderHint=


// Game Cache actions
InitGameCacheBJ="Создать кэш игры"
InitGameCacheBJ="Создать кэш игры из ",~Filename
InitGameCacheBJHint="Кэш игры позволяет вам сохранять данные между картами или между играми на одной карте.  Если указанный файл не существует, он не создается."

SaveGameCacheBJ="Сохранить кэш игры"
SaveGameCacheBJ="Сохранить ",~Game Cache
SaveGameCacheBJHint="Сохраняет кэш игры, используя то же имя файла, из которого он был создан."

StoreUnitBJ="Сохранить юнит"
StoreUnitBJ="Сохранить ",~Unit," как ",~Label," из ",~Category," в ",~Game Cache
StoreUnitBJHint="Используйте действия 'Кэш игры - Восстановить юнит' для загрузки этого юнита из кэша."

StoreRealBJ="Сохранить вещественное"
StoreRealBJ="Сохранить ",~Value," как ",~Label," из ",~Category," в ",~Game Cache
StoreRealBJHint="Используйте функцию 'Кэш игры - Загрузить вещественное значение' для загрузки этого значения из кэша."

StoreIntegerBJ="Сохранить целое"
StoreIntegerBJ="Сохранить ",~Value," как ",~Label," из ",~Category," в ",~Game Cache
StoreIntegerBJHint="Используйте функцию 'Кэш игры - Загрузить целое значение' для загрузки этого значения из кэша."

StoreBooleanBJ="Сохранить булево"
StoreBooleanBJ="Сохранить ",~Value," как ",~Label," из ",~Category," в ",~Game Cache
StoreBooleanBJHint="Используйте функцию 'Кэш игры - Загрузить булево значение' для загрузки этого значения из кэша."

StoreStringBJ="Сохранить символьное"
StoreStringBJ="Сохранить ",~Value," как ",~Label," из ",~Category," в ",~Game Cache
StoreStringBJHint="Используйте функцию 'Кэш игры - Загрузить символьное значение' для загрузки этого значения из кэша."

RestoreUnitLocFacingAngleBJ="Восстановить угол поворота юнита"
RestoreUnitLocFacingAngleBJ="Восстановить ",~Label," ",~Category," из ",~Game Cache," для ",~Player," в ",~Location," поворот ",~Angle
RestoreUnitLocFacingAngleBJHint="Используйте 'Последний восстановленный юнит' для ссылки на юнит, созданный этим действием. Если метка не будет найдена, юнит не создается, и 'Последний восстановленный юнит' получит значение 'Нет юнита'."

RestoreUnitLocFacingPointBJ="Восстановить точку поворота юнита"
RestoreUnitLocFacingPointBJ="Восстановить ",~Label," ",~Category," из ",~Game Cache," для ",~Player," в ",~Location," поворот ",~Point
RestoreUnitLocFacingPointBJHint="Используйте 'Последний восстановленный юнит' для ссылки на юнит, созданный этим действием. Если метка не будет найдена, юнит не создается, и 'Последний восстановленный юнит' получит значение 'Нет юнита'."

ReloadGameCachesFromDisk="Перезагрузить все"
ReloadGameCachesFromDisk="Перезагрузить все данные кэша игры с диска"
ReloadGameCachesFromDiskHint=

FlushGameCacheBJ="Очистить кэш игры"
FlushGameCacheBJ="Очистить ",~Game Cache
FlushGameCacheBJHint="Стирает все метки для всех категорий в кэше игры."

FlushStoredMissionBJ="Очистить категорию"
FlushStoredMissionBJ="Стирает все метки ",~Category," в ",~Game Cache
FlushStoredMissionBJHint="Стирает все метки определенной категории в кэше игры."


// Hashtable actions
InitHashtableBJ="Create Hashtable"
InitHashtableBJ="Create a hashtable"
InitHashtableBJHint="A hashtable allows you to store data."

SaveRealBJ="Save Real"
SaveRealBJ="Save ",~Value," as ",~Value," of ",~Value," in ",~Hashtable
SaveRealBJHint="Use the 'Hashtable - Load Real Value' function to load this value from a hashtable."

SaveIntegerBJ="Save Integer"
SaveIntegerBJ="Save ",~Value," as ",~Value," of ",~Value," in ",~Hashtable
SaveIntegerBJHint="Use the 'Hashtable - Load Integer Value' function to load this value from a hashtable."

SaveBooleanBJ="Save Boolean"
SaveBooleanBJ="Save ",~Value," as ",~Value," of ",~Value," in ",~Hashtable
SaveBooleanBJHint="Use the 'Hashtable - Load Boolean Value' function to load this value from a hashtable."

SaveStringBJ="Save String"
SaveStringBJ="Save ",~Value," as ",~Value," of ",~Value," in ",~Hashtable
SaveStringBJHint="Use the 'Hashtable - Load String Value' function to load this value from a hashtable."

SavePlayerHandleBJ="Save Player Handle"
SavePlayerHandleBJ="Save Handle Of",~Player," as ",~Value," of ",~Value," in ",~Hashtable
SavePlayerHandleBJHint="Use the 'Hashtable - Load Player' actions to load this player from a hashtable."

SaveWidgetHandleBJ="Save Widget Handle"
SaveWidgetHandleBJ="Save Handle Of",~Widget," as ",~Value," of ",~Value," in ",~Hashtable
SaveWidgetHandleBJHint="Use the 'Hashtable - Load Widget' actions to load this widget from a hashtable."

SaveDestructableHandleBJ="Save Destructable Handle"
SaveDestructableHandleBJ="Save Handle Of",~Destructable," as ",~Value," of ",~Value," in ",~Hashtable
SaveDestructableHandleBJHint="Use the 'Hashtable - Load Destructable' actions to load this destructable from a hashtable."

SaveItemHandleBJ="Save Item Handle"
SaveItemHandleBJ="Save Handle Of",~Item," as ",~Value," of ",~Value," in ",~Hashtable
SaveItemHandleBJHint="Use the 'Hashtable - Load Item' actions to load this item from a hashtable."

SaveUnitHandleBJ="Save Unit Handle"
SaveUnitHandleBJ="Save Handle Of",~Unit," as ",~Value," of ",~Value," in ",~Hashtable
SaveUnitHandleBJHint="Use the 'Hashtable - Load Unit' actions to load this unit from a hashtable."

SaveAbilityHandleBJ="Save Ability Handle"
SaveAbilityHandleBJ="Save Handle Of",~Ability," as ",~Value," of ",~Value," in ",~Hashtable
SaveAbilityHandleBJHint="Use the 'Hashtable - Load Ability' actions to load this ability from a hashtable."

SaveTimerHandleBJ="Save Timer Handle"
SaveTimerHandleBJ="Save Handle Of",~Timer," as ",~Value," of ",~Value," in ",~Hashtable
SaveTimerHandleBJHint="Use the 'Hashtable - Load Timer' actions to load this timer from a hashtable."

//SaveTriggerRegionHandleBJ="Save Region"
//SaveTriggerRegionHandleBJ="Save Handle Of",~Region," as ",~Value," of ",~Value," in ",~Hashtable
//SaveTriggerRegionHandleBJHint="Use the 'Hashtable - Load Region' actions to load this region from a hashtable."

SaveTriggerHandleBJ="Save Trigger Handle"
SaveTriggerHandleBJ="Save Handle Of",~Trigger," as ",~Value," of ",~Value," in ",~Hashtable
SaveTriggerHandleBJHint="Use the 'Hashtable - Load Trigger' actions to load this trigger from a hashtable."

SaveTriggerConditionHandleBJ="Save Triggercondition Handle"
SaveTriggerConditionHandleBJ="Save Handle Of",~Triggercondition," as ",~Value," of ",~Value," in ",~Hashtable
SaveTriggerConditionHandleBJHint="Use the 'Hashtable - Load Triggercondition' actions to load this triggercondition from a hashtable."

SaveTriggerActionHandleBJ="Save Triggeraction Handle"
SaveTriggerActionHandleBJ="Save Handle Of",~Triggeraction," as ",~Value," of ",~Value," in ",~Hashtable
SaveTriggerActionHandleBJHint="Use the 'Hashtable - Load Triggeraction' actions to load this triggeraction from a hashtable."

SaveTriggerEventHandleBJ="Save Eventid Handle"
SaveTriggerEventHandleBJ="Save Handle Of",~Eventid," as ",~Value," of ",~Value," in ",~Hashtable
SaveTriggerEventHandleBJHint="Use the 'Hashtable - Load Eventid' actions to load this eventid from a hashtable."

SaveForceHandleBJ="Save Force Handle"
SaveForceHandleBJ="Save Handle Of",~Force," as ",~Value," of ",~Value," in ",~Hashtable
SaveForceHandleBJHint="Use the 'Hashtable - Load Force' actions to load this force from a hashtable."

SaveGroupHandleBJ="Save Group Handle"
SaveGroupHandleBJ="Save Handle Of",~Group," as ",~Value," of ",~Value," in ",~Hashtable
SaveGroupHandleBJHint="Use the 'Hashtable - Load Group' actions to load this group from a hashtable."

SaveLocationHandleBJ="Save Location Handle"
SaveLocationHandleBJ="Save Handle Of",~Location," as ",~Value," of ",~Value," in ",~Hashtable
SaveLocationHandleBJHint="Use the 'Hashtable - Load Location' actions to load this location from a hashtable."

SaveRegionHandleBJ="Save Region Handle"
SaveRegionHandleBJ="Save Handle Of",~Region," as ",~Value," of ",~Value," in ",~Hashtable
SaveRegionHandleBJHint="Use the 'Hashtable - Load Region' actions to load this region from a hashtable."

SaveRectHandleBJ="Save Rect Handle"
SaveRectHandleBJ="Save Handle Of",~Rect," as ",~Value," of ",~Value," in ",~Hashtable
SaveRectHandleBJHint="Use the 'Hashtable - Load Rect' actions to load this rect from a hashtable."

SaveBooleanExprHandleBJ="Save Boolexpr Handle"
SaveBooleanExprHandleBJ="Save Handle Of",~Boolexpr," as ",~Value," of ",~Value," in ",~Hashtable
SaveBooleanExprHandleBJHint="Use the 'Hashtable - Load Boolexpr' actions to load this boolexpr from a hashtable."

//SaveConditionFuncHandleBJ="Save Conditionfunc Handle"
//SaveConditionFuncHandleBJ="Save Handle Of",~Conditionfunc," as ",~Value," of ",~Value," in ",~Hashtable
//SaveConditionFuncHandleBJHint="Use the 'Hashtable - Load Conditionfunc' actions to load this conditionfunc from a hashtable."

//SaveFilterFuncHandleBJ="Save Filterfunc Handle"
//SaveFilterFuncHandleBJ="Save Handle Of",~Filterfunc," as ",~Value," of ",~Value," in ",~Hashtable
//SaveFilterFuncHandleBJHint="Use the 'Hashtable - Load Filterfunc' actions to load this filterfunc from a hashtable."

SaveSoundHandleBJ="Save Sound Handle"
SaveSoundHandleBJ="Save Handle Of",~Sound," as ",~Value," of ",~Value," in ",~Hashtable
SaveSoundHandleBJHint="Use the 'Hashtable - Load Sound' actions to load this sound from a hashtable."

//SaveRaceHandleBJ="Save Race Handle"
//SaveRaceHandleBJ="Save Handle Of",~Race," as ",~Value," of ",~Value," in ",~Hashtable
//SaveRaceHandleBJHint="Use the 'Hashtable - Load Race' actions to load this race from a hashtable."

SaveEffectHandleBJ="Save Effect Handle"
SaveEffectHandleBJ="Save Handle Of",~Effect," as ",~Value," of ",~Value," in ",~Hashtable
SaveEffectHandleBJHint="Use the 'Hashtable - Load Effect' actions to load this effect from a hashtable."

SaveUnitPoolHandleBJ="Save Unitpool Handle"
SaveUnitPoolHandleBJ="Save Handle Of",~Unitpool," as ",~Value," of ",~Value," in ",~Hashtable
SaveUnitPoolHandleBJHint="Use the 'Hashtable - Load Unitpool' actions to load this unitpool from a hashtable."

SaveItemPoolHandleBJ="Save Itempool Handle"
SaveItemPoolHandleBJ="Save Handle Of",~Itempool," as ",~Value," of ",~Value," in ",~Hashtable
SaveItemPoolHandleBJHint="Use the 'Hashtable - Load Itempool' actions to load this itempool from a hashtable."

SaveQuestHandleBJ="Save Quest Handle"
SaveQuestHandleBJ="Save Handle Of",~Quest," as ",~Value," of ",~Value," in ",~Hashtable
SaveQuestHandleBJHint="Use the 'Hashtable - Load Quest' actions to load this quest from a hashtable."

SaveQuestItemHandleBJ="Save Questitem Handle"
SaveQuestItemHandleBJ="Save Handle Of",~Questitem," as ",~Value," of ",~Value," in ",~Hashtable
SaveQuestItemHandleBJHint="Use the 'Hashtable - Load Questitem' actions to load this questitem from a hashtable."

SaveDefeatConditionHandleBJ="Save Defeatcondition Handle"
SaveDefeatConditionHandleBJ="Save Handle Of",~Defeatcondition," as ",~Value," of ",~Value," in ",~Hashtable
SaveDefeatConditionHandleBJHint="Use the 'Hashtable - Load Defeatcondition' actions to load this defeatcondition from a hashtable."

SaveTimerDialogHandleBJ="Save Timerdialog Handle"
SaveTimerDialogHandleBJ="Save Handle Of",~Timerdialog," as ",~Value," of ",~Value," in ",~Hashtable
SaveTimerDialogHandleBJHint="Use the 'Hashtable - Load Timerdialog' actions to load this timerdialog from a hashtable."

SaveLeaderboardHandleBJ="Save Leaderboard Handle"
SaveLeaderboardHandleBJ="Save Handle Of",~Leaderboard," as ",~Value," of ",~Value," in ",~Hashtable
SaveLeaderboardHandleBJHint="Use the 'Hashtable - Load Leaderboard' actions to load this leaderboard from a hashtable."

SaveMultiboardHandleBJ="Save Multiboard Handle"
SaveMultiboardHandleBJ="Save Handle Of",~Multiboard," as ",~Value," of ",~Value," in ",~Hashtable
SaveMultiboardHandleBJHint="Use the 'Hashtable - Load Multiboard' actions to load this multiboard from a hashtable."

SaveMultiboardItemHandleBJ="Save Multiboarditem Handle"
SaveMultiboardItemHandleBJ="Save Handle Of",~Multiboarditem," as ",~Value," of ",~Value," in ",~Hashtable
SaveMultiboardItemHandleBJHint="Use the 'Hashtable - Load Multiboarditem' actions to load this multiboarditem from a hashtable."

SaveTrackableHandleBJ="Save Trackable Handle"
SaveTrackableHandleBJ="Save Handle Of",~Trackable," as ",~Value," of ",~Value," in ",~Hashtable
SaveTrackableHandleBJHint="Use the 'Hashtable - Load Trackable' actions to load this trackable from a hashtable."

SaveGameCacheHandleBJ="Save Gamecache Handle"
SaveGameCacheHandleBJ="Save Handle Of",~Gamecache," as ",~Value," of ",~Value," in ",~Hashtable
SaveGameCacheHandleBJHint="Use the 'Hashtable - Load Gamecache' actions to load this gamecache from a hashtable."

SaveDialogHandleBJ="Save Dialog Handle"
SaveDialogHandleBJ="Save Handle Of",~Dialog," as ",~Value," of ",~Value," in ",~Hashtable
SaveDialogHandleBJHint="Use the 'Hashtable - Load Dialog' actions to load this dialog from a hashtable."

SaveButtonHandleBJ="Save Button Handle"
SaveButtonHandleBJ="Save Handle Of",~Button," as ",~Value," of ",~Value," in ",~Hashtable
SaveButtonHandleBJHint="Use the 'Hashtable - Load Button' actions to load this button from a hashtable."

//SaveVersionHandleBJ="Save Version Handle"
//SaveVersionHandleBJ="Save Handle Of",~Version," as ",~Value," of ",~Value," in ",~Hashtable
//SaveVersionHandleBJHint="Use the 'Hashtable - Load Version' actions to load this version from a hashtable."

//SaveItemTypeHandleBJ="Save Itemtype Handle"
//SaveItemTypeHandleBJ="Save Handle Of",~Itemtype," as ",~Value," of ",~Value," in ",~Hashtable
//SaveItemTypeHandleBJHint="Use the 'Hashtable - Load Itemtype' actions to load this itemtype from a hashtable."

SaveTextTagHandleBJ="Save Texttag Handle"
SaveTextTagHandleBJ="Save Handle Of",~Texttag," as ",~Value," of ",~Value," in ",~Hashtable
SaveTextTagHandleBJHint="Use the 'Hashtable - Load Texttag' actions to load this texttag from a hashtable."

SaveLightningHandleBJ="Save Lightning Handle"
SaveLightningHandleBJ="Save Handle Of",~Lightning," as ",~Value," of ",~Value," in ",~Hashtable
SaveLightningHandleBJHint="Use the 'Hashtable - Load Lightning' actions to load this lightning from a hashtable."

SaveImageHandleBJ="Save Image Handle"
SaveImageHandleBJ="Save Handle Of",~Image," as ",~Value," of ",~Value," in ",~Hashtable
SaveImageHandleBJHint="Use the 'Hashtable - Load Image' actions to load this image from a hashtable."

SaveUbersplatHandleBJ="Save Ubersplat Handle"
SaveUbersplatHandleBJ="Save Handle Of",~Ubersplat," as ",~Value," of ",~Value," in ",~Hashtable
SaveUbersplatHandleBJHint="Use the 'Hashtable - Load Ubersplat' actions to load this ubersplat from a hashtable."

SaveFogStateHandleBJ="Save Fogstate Handle"
SaveFogStateHandleBJ="Save Handle Of",~Fogstate," as ",~Value," of ",~Value," in ",~Hashtable
SaveFogStateHandleBJHint="Use the 'Hashtable - Load Fogstate' actions to load this fogstate from a hashtable."

SaveFogModifierHandleBJ="Save Fogmodifier Handle"
SaveFogModifierHandleBJ="Save Handle Of",~Fogmodifier," as ",~Value," of ",~Value," in ",~Hashtable
SaveFogModifierHandleBJHint="Use the 'Hashtable - Load Fogmodifier' actions to load this fogmodifier from a hashtable."

FlushParentHashtableBJ="Clear Parent Hashtable"
FlushParentHashtableBJ="Clear ",~Hashtable
FlushParentHashtableBJHint="Clears all parent and child hashtables."

FlushChildHashtableBJ="Clear Child Hashtable"
FlushChildHashtableBJ="Clear all child hashtables of child ",~Value," in ",~Hashtable
FlushChildHashtableBJHint="Clears all childen of a specific parent in a hashtable."


// Hero actions
SelectHeroSkill="Учить навык"
SelectHeroSkill="Учить навык для ",~Hero,": ",~Skill
SelectHeroSkillHint="Работает, если Герой имеет не менее одного неиспользованного пункта навыка."

SetHeroLevel="Установить уровень"
SetHeroLevel="Установить ",~Hero," Уровень героя как ",~Level,", ",~Show/Hide," графику смены уровней"
SetHeroLevelHint=

SetHeroXP="Установить опыт"
SetHeroXP="Установить опыт ",~Hero," на ",~Quantity,", ",~Show/Hide," графику смены уровней"
SetHeroXPHint=

AddHeroXPSwapped="Добавить опыт"
AddHeroXPSwapped="Добавить ",~Quantity," опыта герою ",~Hero,", ",~Show/Hide," графику смены уровней"
AddHeroXPSwappedHint=

SuspendHeroXPBJ="Включить/Выключить получение опыта"
SuspendHeroXPBJ=~Включить/Отключить," получение опыта для ",~Hero
SuspendHeroXPBJHint=

SetPlayerHandicapXPBJ="Установить параметры опыта"
SetPlayerHandicapXPBJ="Заставить Героев",~Player," получать ",~Percent,"% опыта от будущих убийств"
SetPlayerHandicapXPBJHint=

ReviveHeroLoc="Оживить (Мгновенно)"
ReviveHeroLoc="Мгновенно оживить ",~Hero," в ",~Point,", ",~Show/Hide," графику оживления"
ReviveHeroLocHint="Оживляет погибшего Героя в определенной точке карты, даже если игрок не имеет алтаря.  Вы можете оживлять Героя отдавая приказ 'Оживить' соответствующему алтарю, выбирая героя, которого хотите оживить."

ModifyHeroStat="Изменить атрибут героя"
ModifyHeroStat="Изменить ",~Attribute," героя ",~Hero,": ",~Modify," ",~Value
ModifyHeroStatHint=

ModifyHeroSkillPoints="Изменить пункты опыта героя"
ModifyHeroSkillPoints="Изменить неиспользованные пункты опыта ",~Hero,": ",~Modify," ",~Value," пунктов"
ModifyHeroSkillPointsHint=

SetReservedLocalHeroButtons="Зарезервировать кнопки героя"
SetReservedLocalHeroButtons="Зарезервировать ",~Number," кнопки Героя для локального игрока"
SetReservedLocalHeroButtonsHint="Кнопки, зарезервированные этим действием, не используются Героями, управляемыми через совместный контроль юнитами."

UnitAddItemSwapped="Дать предмет герою"
UnitAddItemSwapped="Дать ",~Item," герою ",~Hero
UnitAddItemSwappedHint=

UnitAddItemByIdSwapped="Создать предмет для героя"
UnitAddItemByIdSwapped="Создать ",~Item-Type," и отдать его ",~Hero
UnitAddItemByIdSwappedHint=

UnitRemoveItemSwapped="Выбросить предмет героя"
UnitRemoveItemSwapped="Выбросить ",~Item," героя ",~Hero
UnitRemoveItemSwappedHint="Предмет забирается у героя и помещается на землю рядом с ногами героя."

UnitRemoveItemFromSlotSwapped="Выбросить предмет из инвентаря героя"
UnitRemoveItemFromSlotSwapped="Выбросить предмет из слота ",~Index," героя ",~Hero
UnitRemoveItemFromSlotSwappedHint="Если предмет существует в указанном слоте, он забирается у героя и помещается на землю рядом с ногами героя."

UnitUseItemTarget="Использовать предмет на юните"
UnitUseItemTarget="Приказать ",~Hero," использовать ",~Item," на ",~Unit
UnitUseItemTargetHint=

UnitUseItemPointLoc="Использовать предмет в точке"
UnitUseItemPointLoc="Приказать ",~Hero," использовать ",~Item," в ",~Point
UnitUseItemPointLocHint=

UnitUseItemDestructable="Использовать предмет на разрушаемом"
UnitUseItemDestructable="Приказать ",~Hero," использовать ",~Item," на ",~Destructible
UnitUseItemDestructableHint=

UnitUseItem="Использовать предмет"
UnitUseItem="Приказать ",~Hero," использовать ",~Item
UnitUseItemHint=


// Item actions
CreateItemLoc="Создать"
CreateItemLoc="Создать ",~Item," в ",~Point
CreateItemLocHint=

RemoveItem="Удалить"
RemoveItem="Удалить ",~Item
RemoveItemHint=

SetItemVisibleBJ="Показать/Спрятать предмет"
SetItemVisibleBJ=~Show/Hide," ",~Item
SetItemVisibleBJHint="Прячет предметы на местности.  Не влияет на предметы у других юнитов."

SetItemPositionLoc="Передвинуть (мгновенно)"
SetItemPositionLoc="Передвинуть ",~Item," в ",~Point
SetItemPositionLocHint=

SetItemLifeBJ="Определить жизнь"
SetItemLifeBJ="Определить жизнь ",~Item," как ",~Value
SetItemLifeBJHint=

SetItemCharges="Установить Количество Зарядов"
SetItemCharges="Установить Количество Зарядов для ",~Item," в ",~Charges
SetItemChargesHint="Use a value of zero to give the item unlimited charges."

SetItemInvulnerableBJ="Сделать Уязвимым/Неуязвимым"
SetItemInvulnerableBJ="Сделать ",~Item," ",~Invulnerable/Vulnerable
SetItemInvulnerableBJHint=

SetItemPawnable="Сделать закладным"
SetItemPawnable="Сделать ",~Item," ",~Pawnable/Unpawnable
SetItemPawnableHint="Закладной товар может быть продан у торговцев товаром."

SetItemDroppableBJ="Сделать невыбрасываемым"
SetItemDroppableBJ="Сделать ",~Item," ",~Droppable/Undroppable
SetItemDroppableBJHint="Невыбрасываемый предмет не может быть удален из инвентаря героя после того, как был подобран."

SetItemDropOnDeathBJ="Предмет выбрасывается после смерти героев"
SetItemDropOnDeathBJ="Заставить ",~Item," ",~Drop from/Stay with," героев после смерти"
SetItemDropOnDeathBJHint=

SetItemPlayerBJ="Сменить владельца"
SetItemPlayerBJ="Сменить владельца ",~Item," на ",~Player," и ",~Change/Retain Color
SetItemPlayerBJHint="Не все предметы могут изменять цвет."

SetItemUserData="Установить Особую Цену"
SetItemUserData="Установить особую цену для ",~Item," в размере ",~Index
SetItemUserDataHint="Установленные цены используются только в триггерах и являются целыми величинами."

EnumItemsInRectBJMultiple="Выбрать каждый предмет в регион и произвести множественные действия"
EnumItemsInRectBJMultiple="Выбрать каждый предмет в ",~Region," и произвести (Действия)"
EnumItemsInRectBJMultipleHint="Используйте 'Выбранный предмет' для ссылки на каждый предмет при его выборе. Работает для всех предметов в регионе, включая скрытые предметы. В этой функции не используются действия ожидания. Добавьте действия в эту функцию на главном дисплее."

EnumItemsInRectBJ="Выбрать каждый предмет в регионе и произвести действие"
EnumItemsInRectBJ="Выбрать каждый предмет в ",~Region," и произвести ",~Action
EnumItemsInRectBJHint="Используйте 'Выбранный предмет' для ссылки на каждый предмет при его выборе. В этой функции не используются действия ожидания."

// Image actions
CreateImageBJ="Создать Рисунок"
CreateImageBJ="Создать рисунок ",~Image," размером ",~Size," в ",~Point," с Z = ",~Z," используй тип рисунка ",~Type
CreateImageBJHint="Use 'Image - Change Render Always State' to toggle display of this image.  By default, images are not rendered.  The point specified is used as the bottom-left corner of the image.  Images need an alpha channel in order to be displayed properly."

DestroyImage="Удалить Рисунок"
DestroyImage="Удалить ",~Image
DestroyImageHint=

ShowImageBJ="Скрыть/Показать Рисунок"
ShowImageBJ=~Show/Hide,"Скрыть/Показать ",~Image
ShowImageBJHint=

SetImageConstantHeight="Измерить Высоту Рисунка"
SetImageConstantHeight="Измерить высоту ",~Image,", который ",~Включить/Отключить," нна ",~Height
SetImageConstantHeightHint=

SetImagePositionBJ="Изменить Позицию Рисунка"
SetImagePositionBJ="Изменить позицию ",~Image," на ",~Position," с Z = ",~Z
SetImagePositionBJHint="The point specified is used as the bottom-left corner of the image."

SetImageColorBJ="Изменить Цвет Рисунка"
SetImageColorBJ="Изменить Цвет ",~Image," на (",~Red,"%, ",~Green,"%, ",~Blue,"%) с ",~Transparency,"% прозрачностью"
SetImageColorBJHint="The color values are (Red, Green, Blue).  A 100% transparent color is completely invisible."

SetImageRender="Изменить Отображение"
SetImageRender="Изменить ",~Image,": ",~Включить/Отключить,"  отображение"
SetImageRenderHint=

SetImageRenderAlways="Изменить Навсегда Отображение"
SetImageRenderAlways="Изменить ",~Image,": ",~Включить/Отключить," навсегда отображение"
SetImageRenderAlwaysHint=

SetImageAboveWater="Изменить Рисунок Над Водой"
SetImageAboveWater="Изменить ",~Image,": ",~Включить/Отключить," над водой, ",~Включить/Отключить," прозрачность от воды"
SetImageAboveWaterHint=

SetImageType="Изменить Тип Рисунка"
SetImageType="Изменить тип ",~Image," на ",~Type
SetImageTypeHint=


// Leaderboard actions
CreateLeaderboardBJ="Создать"
CreateLeaderboardBJ="Создать доску лидеров для ",~Player Group," с названием ",~Title
CreateLeaderboardBJHint="Доски лидеров не могут изображаться при инициализации карты. Если название не указано, строка названия не выводится."

DestroyLeaderboardBJ="Уничтожить"
DestroyLeaderboardBJ="Убрать ",~Leaderboard
DestroyLeaderboardBJHint=

LeaderboardSortItemsBJ="Сортировать"
LeaderboardSortItemsBJ="Сортировать ",~Leaderboard," по ",~Field," в ",~Ascending/Descending," порядке"
LeaderboardSortItemsBJHint=

LeaderboardDisplayBJ="Скрыть/Показать"
LeaderboardDisplayBJ=~Show/Hide," ",~Leaderboard
LeaderboardDisplayBJHint="Доски лидеров не могут изображаться при инициализации карты."

LeaderboardSetLabelBJ="Смена названия"
LeaderboardSetLabelBJ="Сменить название ",~Leaderboard," на ",~Title
LeaderboardSetLabelBJHint=

LeaderboardSetLabelColorBJ="Сменить цвета меток"
LeaderboardSetLabelColorBJ="Изменить цвета всех меток для ",~Leaderboard," на (",~Red,"%, ",~Green,"%, ",~Blue,"%) с ",~Transparency,"% прозрачностью"
LeaderboardSetLabelColorBJHint="Цвета (Красный, Зеленый, Голубой). 100% прозрачный отряд полностью невидим."

LeaderboardSetValueColorBJ="Сменить цвета значений"
LeaderboardSetValueColorBJ="Изменить цвет всех значений для ",~Leaderboard," на (",~Red,"%, ",~Green,"%, ",~Blue,"%) с ",~Transparency,"% прозрачностью"
LeaderboardSetValueColorBJHint="Цвета (Красный, Зеленый, Голубой). 100% прозрачный отряд полностью невидим."

LeaderboardSetStyleBJ="Сменить стиль"
LeaderboardSetStyleBJ="Изменить стиль отображения для ",~Leaderboard," на ",~Show/Hide," название, ",~Show/Hide," метки, ",~Show/Hide," значения и ",~Show/Hide," иконки"
LeaderboardSetStyleBJHint=

LeaderboardAddItemBJ="Добавить игрока"
LeaderboardAddItemBJ="Добавить ",~Player," в ",~Leaderboard," с меткой ",~Label," и значением ",~Value
LeaderboardAddItemBJHint=

LeaderboardRemovePlayerItemBJ="Удалить игрока"
LeaderboardRemovePlayerItemBJ="Удалить ",~Player," из ",~Leaderboard
LeaderboardRemovePlayerItemBJHint=

LeaderboardSetPlayerItemLabelBJ="Изменить метку игрока"
LeaderboardSetPlayerItemLabelBJ="Изменить метку для ",~Player," в ",~Leaderboard," на ",~Label
LeaderboardSetPlayerItemLabelBJHint=

LeaderboardSetPlayerItemLabelColorBJ="Изменить цвет метки игрока"
LeaderboardSetPlayerItemLabelColorBJ="Изменить цвет метки для ",~Player," в ",~Leaderboard," на (",~Red,"%, ",~Green,"%, ",~Blue,"%) с ",~Transparency,"% прозрачностью"
LeaderboardSetPlayerItemLabelColorBJHint="Цвета (Красный, Зеленый, Голубой). 100% прозрачный отряд полностью невидим."

LeaderboardSetPlayerItemValueBJ="Изменить значение игрока"
LeaderboardSetPlayerItemValueBJ="Изменить значение для ",~Player," в ",~Leaderboard," на ",~Value
LeaderboardSetPlayerItemValueBJHint=

LeaderboardSetPlayerItemValueColorBJ="Изменить цвет значения игрока"
LeaderboardSetPlayerItemValueColorBJ="Изменить цвет значения для игрока ",~Player," в ",~Leaderboard," на (",~Red,"%, ",~Green,"%, ",~Blue,"%) с ",~Transparency,"% прозрачностью"
LeaderboardSetPlayerItemValueColorBJHint="Цвета (Красный, Зеленый, Голубой). 100% прозрачночти для полной невидимости"

LeaderboardSetPlayerItemStyleBJ="Изменить стиль игрока"
LeaderboardSetPlayerItemStyleBJ="Изменить стиль отображения для ",~Player," в ",~Leaderboard," на ",~Show/Hide," метку, ",~Show/Hide," значение и ",~Show/Hide," иконку"
LeaderboardSetPlayerItemStyleBJHint=


// Lightning actions
AddLightningLoc="Создать Эффект Молнию"
AddLightningLoc="Создать ",~Type," молнию от ",~Point," до ",~Point
AddLightningLocHint=

DestroyLightningBJ="Убрать Эффект Молнии"
DestroyLightningBJ="Убрать ",~Lightning
DestroyLightningBJHint=

MoveLightningLoc="Переместить Эффект Молнии"
MoveLightningLoc="Переместить ",~Lightning," от ",~Point," до ",~Point
MoveLightningLocHint=

SetLightningColorBJ="Изенить Цвет Эффекта Молнии"
SetLightningColorBJ="Изенить цвет ",~Lightning," на (",~Red," ",~Green," ",~Blue,") с ",~Alpha," видимостью"
SetLightningColorBJHint="The color values are (Red, Green, Blue).  Color and alpha values are expected in the range of 0 to 1.  A lightning effect with 0 alpha is completely invisible."


// Melee Game actions
MeleeStartingVisibility="Использовать время дня рукопашной"
MeleeStartingVisibility="Использовать время дня рукопашной (для всех игроков)"
MeleeStartingVisibilityHint=

MeleeStartingHeroLimit="Лимиты героев"
MeleeStartingHeroLimit="Лимитировать героев до 1 на тип героя (для всех игроков)"
MeleeStartingHeroLimitHint=

MeleeGrantHeroItems="Стартовые предметы героя"
MeleeGrantHeroItems="Дать подготовленным героям свиток Портал Города (для всех игроков)"
MeleeGrantHeroItemsHint=

MeleeStartingResources="Установить стартовые ресурсы"
MeleeStartingResources="Установить стартовые ресурсы (для всех игроков)"
MeleeStartingResourcesHint=

MeleeClearExcessUnits="Удалить лишние юниты"
MeleeClearExcessUnits="Удалить крипы и живых существ с использованных стартовых позиций (для всех игроков)"
MeleeClearExcessUnitsHint="Удаляет все Нейтральные Враждебные юниты и Нейтральные Пассивные юниты не здания в радиусе 1024 вокруг каждой использованной стартовой позиции."

MeleeStartingUnits="Создать стартовые юниты"
MeleeStartingUnits="Создать стартовые юниты (для всех игроков)"
MeleeStartingUnitsHint=

MeleeStartingAI="Запустить ИИ"
MeleeStartingAI="Запустить ИИ-скрипты рукопашной (для всех игроков)"
MeleeStartingAIHint="Игроки должны иметь стартовые юниты и ресурсы до запуска этого действия."

MeleeInitVictoryDefeat="Условия Победы/Поражения"
MeleeInitVictoryDefeat="Ввести условия победы/поражения (для всех игроков)"
MeleeInitVictoryDefeatHint="Игроки должны иметь стартовые юниты перед выполнением этого действия."

MeleeStartingUnitsForPlayer="Создать стартовые юниты для игрока"
MeleeStartingUnitsForPlayer="Создать ",~Race," стартовые юниты для ",~Player," в ",~Point," (",~Include/Exclude," героев)"
MeleeStartingUnitsForPlayerHint="Это действие создает те же стартовые юниты, что создаются для игр рукопашной."

// Multiboard actions
CreateMultiboardBJ="Создать Мультиборд"
CreateMultiboardBJ="Создать мультиборд с ",~Columns," колонками и ",~Rows," рядами, под названием ",~Title
CreateMultiboardBJHint="Multiboards cannot be displayed at map initialization."

DestroyMultiboardBJ="Удалить"
DestroyMultiboardBJ="Удалить ",~Multiboard
DestroyMultiboardBJHint=

MultiboardDisplayBJ="Показать/Спрятать"
MultiboardDisplayBJ=~Show/Hide," ",~Multiboard
MultiboardDisplayBJHint="Multiboards cannot be displayed at map initialization."

MultiboardAllowDisplayBJ="Показать/Спрятать все Мультибоарды"
MultiboardAllowDisplayBJ=~Show/Hide," все Мультибоарды"
MultiboardAllowDisplayBJHint=

MultiboardMinimizeBJ="Свернуть/Развернуть"
MultiboardMinimizeBJ=~Minimize/Maximize," ",~Multiboard
MultiboardMinimizeBJHint="A minimized multiboard will only display the title."

MultiboardClear="Очистить"
MultiboardClear="Очистить ",~Multiboard
MultiboardClearHint="This will remove all rows and columns from the multiboard."

MultiboardSetTitleText="Сменить Имя Мультибоарды"
MultiboardSetTitleText="Сменить имя мультибоарды на ",~Multiboard," to ",~Title
MultiboardSetTitleTextHint=

MultiboardSetTitleTextColorBJ="Сменить Цвет Имени Мультибоарда"
MultiboardSetTitleTextColorBJ="Сменить цвет имени мультибоарда ",~Multiboard," на (",~Red,"%, ",~Green,"%, ",~Blue,"%) с ",~Transparency,"% прозрачностью"
MultiboardSetTitleTextColorBJHint="The color values are (Red, Green, Blue).  A 100% transparent color is completely invisible."

MultiboardSetRowCount="Число Рядов"
MultiboardSetRowCount="Изменить число рядов для ",~Multiboard," на ",~Rows
MultiboardSetRowCountHint=

MultiboardSetColumnCount="Число Колонок"
MultiboardSetColumnCount="Изменить число колонок для ",~Multiboard," на ",~Columns
MultiboardSetColumnCountHint=

MultiboardSetItemStyleBJ="Стиль Отображения Ячейки"
MultiboardSetItemStyleBJ="Установить стиль отображения для,  ",~Multiboard," для ячейки в колонке ",~Column,", в ряду ",~Row," на ",~Show/Hide," текст и ",~Show/Hide,"изображения"
MultiboardSetItemStyleBJHint="Использование значение колонки ноля, чтобы затронуть все колонки. Используйте значение ряда ноля, чтобы затронуть все ряды."

MultiboardSetItemValueBJ="Текст Ячейки"
MultiboardSetItemValueBJ="Установить текст для,  ",~Multiboard," для ячейки в колонке ",~Column,", в ряду ",~Row," на ",~Text
MultiboardSetItemValueBJHint="Использование значение колонки ноля, чтобы затронуть все колонки. Используйте значение ряда ноля, чтобы затронуть все ряды."

MultiboardSetItemColorBJ="Цвет Ячейки"
MultiboardSetItemColorBJ="Установить цвет для,  ",~Multiboard," для ячейки в колонке ",~Column,", в ряду ",~Row," на ( ",~Red,"% ",~Green,"% ",~Blue," %) с ",~Transparency," прозрачность %"
MultiboardSetItemColorBJHint="Использование значение колонки ноля, чтобы затронуть все колонки. Используйте значение ряда ноля, чтобы затронуть все ряды. Цветные значения (Красный, Зелены, Синие). 100%-ый прозрачный цвет полностью невидим."

MultiboardSetItemWidthBJ="Ширина Ячейки"
MultiboardSetItemWidthBJ="Установить ширину для,  ",~Multiboard," для ячейки в колонке ",~Column,", в ряду ",~Row," на ",~Width," % полной ширины экрана"
MultiboardSetItemWidthBJHint=

MultiboardSetItemIconBJ="Иконка Ячейки"
MultiboardSetItemIconBJ="Установить изображение для,  ",~Multiboard," для ячейки в колонке ",~Column,", в ряду ",~Row," на ",~Icon File
MultiboardSetItemIconBJHint=


// Neutral Building actions
AddResourceAmountBJ="Добавить золота в золотую шахту"
AddResourceAmountBJ="Добавить ",~Quantity," золота в ",~Gold Mine
AddResourceAmountBJHint="Используйте отрицательное значение для уменьшения."

SetResourceAmount="Определить ресурсы золотой шахты"
SetResourceAmount="Определить ",~Gold Mine," как ",~Quantity," золота"
SetResourceAmountHint=

BlightGoldMineForPlayer="Поместить существ в золотую шахту (мгновенно)"
BlightGoldMineForPlayer="Поместить существ в ",~Gold Mine," для ",~Player
BlightGoldMineForPlayerHint="Золотая шахта заменяется на равную по ресурсам Золотую шахту с существами."

WaygateActivateBJ="Включить/Выключить ворота пути"
WaygateActivateBJ=~Включить/Отключить," ",~Way Gate
WaygateActivateBJHint=

WaygateSetDestinationLocBJ="Определить место назначение ворот пути"
WaygateSetDestinationLocBJ="Определить для ",~Way Gate," место назначения ",~Target
WaygateSetDestinationLocBJHint=

SetAltMinimapIcon="Сменить специальную иконку миникарты"
SetAltMinimapIcon="Сменить специальную иконку миникарты на ",~Image
SetAltMinimapIconHint="Картинка, используемая для этого действия, должна быть точно 16x16 пикселей."

UnitSetUsesAltIconBJ="Включить/выключить специальную иконку миникарты"
UnitSetUsesAltIconBJ="Переключить специальную иконку миникарты ",~On/Off," для ",~Unit
UnitSetUsesAltIconBJHint="Используйте действие 'Нейтральное здание - Сменить специальную иконку миникарты' управления отображаемой иконкой."

AddItemToStockBJ="Добавить тип предмета (На рынок)"
AddItemToStockBJ="Добавить ",~Item-Type," на ",~Marketplace," с ",~Count," в запасе и максимальным запасом ",~Max
AddItemToStockBJHint="Влияет лишь на здание, которое имеет способность 'Продать предметы'."

AddItemToAllStock="Добавить тип предмета (На все рынки)"
AddItemToAllStock="Добавить ",~Item-Type," на все рынки с ",~Count," в запасе и максимальным запасом ",~Max
AddItemToAllStockHint="Влияет на все здания, которые имеют способность 'Продать предметы'."

AddUnitToStockBJ="Добавить тип юнита (На рынок)"
AddUnitToStockBJ="Добавить ",~Unit-Type," на ",~Marketplace," с ",~Count," в запасе и максимальным запасом ",~Max
AddUnitToStockBJHint="Влияет лишь на здания, которые имеют способность 'Продать юниты'."

AddUnitToAllStock="Добавить тип юнита (На все рынки)"
AddUnitToAllStock="Добавить ",~Unit-Type," на все рынки с ",~Count," в запасе и максимальным запасом ",~Max
AddUnitToAllStockHint="Влияет на все здания, которые имеют способность 'Продать юниты'."

RemoveItemFromStockBJ="Удалить тип предмета (с рынка)"
RemoveItemFromStockBJ="Удалить ",~Item-Type," с ",~Marketplace
RemoveItemFromStockBJHint="Влияет лишь на здание, которое имеет способность 'Продать предметы'."

RemoveItemFromAllStock="Удалить тип предмета (со всех рынков)"
RemoveItemFromAllStock="Удалить ",~Item-Type," со всех рынков"
RemoveItemFromAllStockHint="Влияет на все здания, которые имеют способность 'Продать предметы'."

RemoveUnitFromStockBJ="Удалить тип юнита (с рынка)"
RemoveUnitFromStockBJ="Удалить ",~Unit-Type," с ",~Marketplace
RemoveUnitFromStockBJHint="Влияет лишь на здания, которые имеют способность 'Продать юниты'."

RemoveUnitFromAllStock="Удалить тип юнита (со всех рынков)"
RemoveUnitFromAllStock="Удалить ",~Unit-Type," со всех рынков"
RemoveUnitFromAllStockHint="Влияет на все здания, которые имеют способность 'Продать юниты'."

SetItemTypeSlots="Ограничить слоты предметов (на рынке)"
SetItemTypeSlots="Ограничить ",~Marketplace," до ",~Quantity," слотов предметов"
SetItemTypeSlotsHint="Влияет лишь на здание, которое имеет способность 'Продать предметы'."

SetAllItemTypeSlots="Ограничить слоты предметов (на всех рынках)"
SetAllItemTypeSlots="Ограничить все рынки до ",~Quantity," слотов предметов"
SetAllItemTypeSlotsHint="Влияет на все здания, которые имеют способность 'Продать предметы'."

SetUnitTypeSlots="Ограничить слоты юнитов (на рынке)"
SetUnitTypeSlots="Ограничить ",~Marketplace," до ",~Quantity," слотов юнитов"
SetUnitTypeSlotsHint="Влияет лишь на здания, которые имеют способность 'Продать юниты'."

SetAllUnitTypeSlots="Ограничить слоты юнитов (на всех рынках)"
SetAllUnitTypeSlots="Ограничить все рынки до ",~Quantity," слотов юнитов"
SetAllUnitTypeSlotsHint="Влияет на все здания, которые имеют способность 'Продать юниты'."


// Player actions
SetPlayerState="Установить свойство"
SetPlayerState="Установить ",~Player," ",~Property," как ",~Value
SetPlayerStateHint=

AdjustPlayerStateBJ="Добавить свойство"
AdjustPlayerStateBJ="Добавить ",~Value," к ",~Player," ",~Property
AdjustPlayerStateBJHint="Используйте отрицательное значение для уменьшения."

SetPlayerFlagBJ="Включить/выключить флаг игрока"
SetPlayerFlagBJ="Переключить ",~Player Flag," ",~On/Off," для ",~Player
SetPlayerFlagBJHint=

SetPlayerTaxRateBJ="Налог От Доходов Одного Игрока В Пользу Другого (Такса)"
SetPlayerTaxRateBJ="Установить налог в ",~Rate,"% от добычи ",~Resource," игроком ",~Player," в пользу ",~Player
SetPlayerTaxRateBJHint="Проследить за реальной добычей ресурсов можно через процедуры обработки Очков Игрока."

EnableCreepSleepBJ="Включить/выключить сон для всех крипов"
EnableCreepSleepBJ=~Включить/Отключить," сон для всех крипов"
EnableCreepSleepBJHint="Влияет на ночной сон, а не на магический сон."

SetPlayerAllianceStateBJ="Заключить союз"
SetPlayerAllianceStateBJ="Заставить ",~Player," считать ",~Player," как ",~Alliance Setting
SetPlayerAllianceStateBJHint="Заметьте, что слоты нейтральных игроков не могут разделять их видение."

SetPlayerAllianceBJ="Определить аспекты союза"
SetPlayerAllianceBJ="Для ",~Player,", переключить ",~Alliance Type," ",~On/Off," в отношении ",~Player
SetPlayerAllianceBJHint="Модифицирует один аспект статуса альянса игрока, оставляя остальные без изменения.  Заметьте, что слоты нейтральных игроков не могут разделять их видение."

SetPlayerAbilityAvailableBJ="Включить/Выключить способность"
SetPlayerAbilityAvailableBJ=~Включить/Отключить," ",~Ability," для ",~Player
SetPlayerAbilityAvailableBJHint=

SetPlayerUnitAvailableBJ="Установить доступность Подготовки/Строительства юнита"
SetPlayerUnitAvailableBJ="Сделать ",~Unit-Type," ",~Available/Unavailable," для подготовки/строительства игроком ",~Player
SetPlayerUnitAvailableBJHint="Определяет, может ли тип юнита быть подготовлен или построен игроком."

SetPlayerUnitMaxAllowed="Ограничить подготовку типа юнита"
SetPlayerUnitMaxAllowed="Ограничить подготовку ",~Unit-Type," до ",~Limit," для ",~Player
SetPlayerUnitMaxAllowedHint="Лимит -1 разрешает неограниченную подготовку этого типа юнита. Лимит 0 делает этот тип юнита недоступным для подготовки."

SetPlayerMaxHeroesAllowed="Ограничить подготовку героев"
SetPlayerMaxHeroesAllowed="Ограничить подготовку героев до ",~Limit," для ",~Player
SetPlayerMaxHeroesAllowedHint="Лимит -1 разрешает неограниченную подготовку героев. Лимит 0 делает героев недоступными для подготовки."

SetPlayerTechResearchedSwap="Установить текущий уровень исследования"
SetPlayerTechResearchedSwap="Установить текущий уровень исследования ",~Tech," для ",~Level," для ",~Player
SetPlayerTechResearchedSwapHint="Используйте 0 или 1 для простой технологии или 0..3 для модернизации в три стадии. Технология не может быть не выучена через это действие."

SetPlayerTechMaxAllowedSwap="Установить максимальный уровень исследования"
SetPlayerTechMaxAllowedSwap="Установить максимальный уровень исследования ",~Tech," для ",~Level," для ",~Player
SetPlayerTechMaxAllowedSwapHint="Используйте 0 или 1 для простой технологии или 0..3 для модернизации в три стадии."

SetPlayerColorBJ="Изменить цвет"
SetPlayerColorBJ="Изменить цвет ",~Player," на ",~Color,", ",~Changing/Retaining color," существующих юнитов"
SetPlayerColorBJHint=

SetPlayerHandicapBJ="Установить гандикап"
SetPlayerHandicapBJ="Установить ",~Player," гандикап как ",~Percent,"%"
SetPlayerHandicapBJHint="Гандикапы влияют на максимальную жизнь всех юнитов, которыми игрок владеет или создал. Герои менее восприимчивы к гандикапам, чем юниты не-Герои."

SetPlayerOnScoreScreenBJ="Показать/спрятать экран счета"
SetPlayerOnScoreScreenBJ=~Show/Hide," ",~Player," на экране счета после игры"
SetPlayerOnScoreScreenBJHint=

SetPlayerName="Установить имя"
SetPlayerName="Установить имя ",~Player," как ",~Name
SetPlayerNameHint=


// Player Group actions
ForForceMultiple="Выбрать каждого игрока в группе игроков и произвести множественные действия"
ForForceMultiple="Выбрать каждого игрока в ",~Player Group," и произвести (Действия)"
ForForceMultipleHint="Используйте 'Выбранный игрок' для ссылки на каждого игрока при его/ее выборе. Действия ожидания не используются в этой функции. Добавьте действия к этой функции на главном экране."

ForForce="Выбрать каждого игрока в группе игроков и произвести действие"
ForForce="Выбрать каждого игрока в ",~Player Group," и произвести ",~Action
ForForceHint="Используйте 'Выбранный игрок' для ссылки на каждого игрока при его/ее выборе. Действия ожидания не используются в этой функции."

ForceAddPlayerSimple="Добавить игрока"
ForceAddPlayerSimple="Добавить ",~Player," в ",~Player Group
ForceAddPlayerSimpleHint="Добавляет игрока в переменную Группы игроков.  Не влияет на самого игрока."

ForceRemovePlayerSimple="Удалить игрока"
ForceRemovePlayerSimple="Удалить ",~Player," из ",~Player Group
ForceRemovePlayerSimpleHint="Удаляет игрока из переменной Группы игроков.  Не влияет на самого игрока."

ForceClear="Очистить"
ForceClear="Удалить всех игроков из ",~Player Group
ForceClearHint="Удаляет всех игроков из переменной Группы игроков.  Не влияет на самих игроков."

SetForceAllianceStateBJ="Заключить союз"
SetForceAllianceStateBJ="Заставить ",~Player," считать ",~Player," как ",~Alliance Setting
SetForceAllianceStateBJHint="Заметьте, что слоты нейтральных игроков не могут разделять их видение."


// Quest actions
QuestMessageBJ="Сообщение Поисков"
QuestMessageBJ="Показать ",~Player Group," ",~Quest Message Type," сообщение: ",~Message
QuestMessageBJHint=

CreateQuestBJ="Создать Поиски"
CreateQuestBJ="Создать ",~Quest Type," Поиски с названием ",~Title," и описанием ",~Description,", используя путь иконки ",~Icon Path
CreateQuestBJHint=

DestroyQuestBJ="Удалить Поиски"
DestroyQuestBJ="Удалить ",~Quest
DestroyQuestBJHint="Удаленные поиски исчезают из журнала поисков."

QuestSetEnabledBJ="Включить/Выключить Поиски"
QuestSetEnabledBJ=~Включить/Отключить," ",~Quest
QuestSetEnabledBJHint="Отключенные поиски не отображаются в журнале поисков."

QuestSetCompletedBJ="Пометить Поиски как завершенные"
QuestSetCompletedBJ="Пометить ",~Quest," как ",~Completed/Incomplete
QuestSetCompletedBJHint=

QuestSetFailedBJ="Пометить поиски как неудачные"
QuestSetFailedBJ="Пометить ",~Quest," как ",~Failed/Not Failed
QuestSetFailedBJHint=

QuestSetDiscoveredBJ="Пометить поиски как результативные"
QuestSetDiscoveredBJ="Пометить ",~Quest," как ",~Discovered/Undiscovered
QuestSetDiscoveredBJHint=

QuestSetTitleBJ="Сменить название поисков"
QuestSetTitleBJ="Сменить название ",~Quest," на ",~Title
QuestSetTitleBJHint=

QuestSetDescriptionBJ="Сменить описание поисков"
QuestSetDescriptionBJ="Сменить описание ",~Quest," на ",~Description
QuestSetDescriptionBJHint=

CreateQuestItemBJ="Создать требование по поискам"
CreateQuestItemBJ="Создать требование по поискам для ",~Quest," с описанием ",~Description
CreateQuestItemBJHint=

QuestItemSetCompletedBJ="Пометить требование по поискам как выполненное"
QuestItemSetCompletedBJ="Пометить ",~Quest Requirement," как ",~Completed/Incomplete
QuestItemSetCompletedBJHint=

QuestItemSetDescriptionBJ="Изменить описание требования по поискам"
QuestItemSetDescriptionBJ="Изменить описание ",~Quest Requirement," на ",~Description
QuestItemSetDescriptionBJHint=

CreateDefeatConditionBJ="Создать условие поражения"
CreateDefeatConditionBJ="Создать условие поражения с описанием ",~Description
CreateDefeatConditionBJHint="Условия поражения отображаются для каждых поисков."

DestroyDefeatConditionBJ="Удалить условие поражения"
DestroyDefeatConditionBJ="Удалить ",~Defeat Condition
DestroyDefeatConditionBJHint="Удаленные условия поражения не отображаются в журнале поисков."

DefeatConditionSetDescriptionBJ="Изменить описание условия поражения"
DefeatConditionSetDescriptionBJ="Изменить описание ",~Defeat Condition," на ",~Description
DefeatConditionSetDescriptionBJHint=

FlashQuestDialogButtonBJ="Показать диалоговую кнопку поисков"
FlashQuestDialogButtonBJ="Показать диалоговую кнопку поисков"
FlashQuestDialogButtonBJHint=


// Region actions
MoveRectToLoc="Передвижение"
MoveRectToLoc="Центрировать ",~Region," по ",~Point
MoveRectToLocHint="Не имеет эффекта, если указанный регион не является переменной."


// Selection actions
ClearSelectionForPlayer="Очистить выбор для игрока"
ClearSelectionForPlayer="Очистить выбор для ",~Player
ClearSelectionForPlayerHint="Заставляет игрока отменить выбор всех юнитов."

SelectGroupForPlayerBJ="Выбрать группу юнитов для игрока"
SelectGroupForPlayerBJ="Выбрать ",~Unit Group," для ",~Player
SelectGroupForPlayerBJHint="Заставляет игрока отменить выбор всех юнитов и выбрать до 12 юнитов из каждой группы юнитов."

SelectUnitForPlayerSingle="Выбрать юнит для игрока"
SelectUnitForPlayerSingle="Выбрать ",~Unit," для ",~Player
SelectUnitForPlayerSingleHint="Заставляет игрока отменить выбор всех юнитов и выбрать лишь этот юнит."

SelectUnitAddForPlayer="Добавить юнит к выбору для игрока"
SelectUnitAddForPlayer="Добавить ",~Unit," к выбору для ",~Player
SelectUnitAddForPlayerHint="Заставляет игрока выбрать этот юнит в дополнение ко всем уже выбранным ранее."

SelectUnitRemoveForPlayer="Удалить юнит из выбора для игрока"
SelectUnitRemoveForPlayer="Удалить ",~Unit," из выбора для ",~Player
SelectUnitRemoveForPlayerHint="Заставляет игрока отменить выбор этого юнита, сохраняя при этом произведенный ранее выбор."

ClearSelection="Очистить"
ClearSelection="Очистить выбор"
ClearSelectionHint="Снять выбор всех юнитов."

SelectGroupBJ="Выбрать группу юнитов"
SelectGroupBJ="Выбрать ",~Unit Group
SelectGroupBJHint="Отменяет выбор всех юнитов и выбирает до 12 юнитов из этой группы юнитов."

SelectUnitSingle="Выбрать юнит"
SelectUnitSingle="Выбрать ",~Unit
SelectUnitSingleHint="Отменяет выбор всех юнитов и выбирает лишь этот юнит."

SelectUnitAdd="Добавить юнит"
SelectUnitAdd="Добавить ",~Unit," к выбранному"
SelectUnitAddHint="Выбирает этот юнит в дополнение ко всему уже выбранному ранее."

SelectUnitRemove="Удалить юнит"
SelectUnitRemove="Удалить ",~Unit," из выбора"
SelectUnitRemoveHint="Снимает выбор этого юнита, сохраняя выбор всех остальных выбранных юнитов."


// Sound actions
PlaySoundBJ="Играть звук"
PlaySoundBJ="Играть ",~Sound
PlaySoundBJHint="Звуки не могут воспроизводиться при инициализации карты. Используйте Звуковой Редактор для создания звуковых переменных. Для воспроизведения 3D-звуков требуется позиционирование."

PlaySoundAtPointBJ="Играть звук в точке"
PlaySoundAtPointBJ="Играть ",~3D Sound," на ",~Volume,"% громкости, расположенный в ",~Point," с Z смещением ",~Z
PlaySoundAtPointBJHint="Звуки не могут воспроизводиться при инициализации карты. Данная функция касается лишь звуков, имеющих флажок '3D-звук', поставленный в Звуковом Редакторе."

PlaySoundOnUnitBJ="Играть звук на юните"
PlaySoundOnUnitBJ="Играть ",~3D Sound," на ",~Volume,"% громкости, приложенный к ",~Unit
PlaySoundOnUnitBJHint="Звуки не могут воспроизводиться при инициализации карты. Данная функция касается лишь звуков, имеющих флажок '3D-звук', поставленный в Звуковом Редакторе."

PlaySoundFromOffsetBJ="Играть звук не с начала"
PlaySoundFromOffsetBJ="Играть ",~Sound," на ",~Volume,"% громкости, пропуская первые ",~Offset," секунд"
PlaySoundFromOffsetBJHint="Звуки не могут воспроизводиться при инициализации карты. Эта функция не подходит для 3D-звуков."

StopSoundBJ="Остановить звук"
StopSoundBJ="Остановить ",~Sound," ",~After Fading/Immediately
StopSoundBJHint=

KillSoundWhenDoneBJ="Удалить звук"
KillSoundWhenDoneBJ="Удалить",~Sound
KillSoundWhenDoneBJHint="Если звук все еще играет, он будет удален при завершении воспроизведения."

SetSoundVolumeBJ="Установить громкость звука"
SetSoundVolumeBJ="Установить громкость ",~Sound," как ",~Volume,"%"
SetSoundVolumeBJHint=

SetSoundOffsetBJ="Перейти не к началу звука"
SetSoundOffsetBJ="Перейти к ",~Offset," секунд от начала ",~Sound
SetSoundOffsetBJHint="Применять нужно лишь на звуках, которые сейчас воспроизводятся.  Не следует использовать на 3D-звуках."

SetSoundDistanceCutoffBJ="Установить дистанцию среза звука"
SetSoundDistanceCutoffBJ="Установить дистанцию среза ",~Sound," как ",~Distance
SetSoundDistanceCutoffBJHint=

SetSoundPitchBJ="Установить высоту звука"
SetSoundPitchBJ="Установить высоту ",~Sound," как ",~Pitch
SetSoundPitchBJHint=

AttachSoundToUnitBJ="Прикрепить 3D-звук к юниту"
AttachSoundToUnitBJ="Прикрепить ",~3D Sound," к ",~Unit
AttachSoundToUnitBJHint="Применять необходимо лишь к звукам, на которых в Звуковом Редакторе был поставлен флажок '3D-звук'."

SetSoundPositionLocBJ="Установить позицию 3D-звука"
SetSoundPositionLocBJ="Установить позицию ",~3D Sound," как ",~Point," с Z смещением ",~Z
SetSoundPositionLocBJHint="Применять необходимо лишь к звукам, на которых в Звуковом Редакторе был поставлен флажок '3D-звук'."

SetSoundDistances="Установить дистанции 3D-звука"
SetSoundDistances="Установить ",~3D Sound," дистанции как ",~Distance," минимум и ",~Distance," максимум"
SetSoundDistancesHint="Применять необходимо лишь к звукам, на которых в Звуковом Редакторе был поставлен флажок '3D-звук'."

SetStackedSoundBJ="Добавить/Удалить 3D-звук через регион"
SetStackedSoundBJ=~Add/Remove," ",~3D Sound," через ",~Region
SetStackedSoundBJHint="Применять необходимо лишь к звукам, на которых в Звуковом Редакторе был поставлен флажок '3D-звук'."

SetAmbientDaySound="Использовать дневную тему окружения"
SetAmbientDaySound="Использовать ",~Theme," дневную тему окружения"
SetAmbientDaySoundHint=

SetAmbientNightSound="Использовать ночную тему окружения"
SetAmbientNightSound="Использовать ",~Theme," ночную тему окружения"
SetAmbientNightSoundHint=

EnableDawnDusk="Включить/Выключить звуки рассвета и заката"
EnableDawnDusk=~Включить/Отключить," звуки рассвета и заката"
EnableDawnDuskHint=

SetMapMusicIndexedBJ="Установить музыкальный список (Используя определенную начальную песню)"
SetMapMusicIndexedBJ="Установить музыкальный список как ",~Music,", начиная с песни ",~Index
SetMapMusicIndexedBJHint="Устанавливает список музыки для использования в конце текущей песни.  Играющая в текущий момент музыка не останавливается."

SetMapMusicRandomBJ="Определить музыкальный список (Используя случайную начальную песню)"
SetMapMusicRandomBJ="Установить музыкальный список как ",~Music,", начиная со случайной песни"
SetMapMusicRandomBJHint="Устанавливает список музыки для использования в конце текущей песни.  Играющая в текущий момент музыка не останавливается."

ClearMapMusicBJ="Очистить музыкальный список"
ClearMapMusicBJ="Очистить музыкальный список"
ClearMapMusicBJHint="Очистка музыкального списка приведет к остановке музыки после конца играющей сейчас музыки."

PlayMusicBJ="Играть музыку"
PlayMusicBJ="Играть ",~Music
PlayMusicBJHint=

PlayMusicExBJ="Играть музыку не с начала"
PlayMusicExBJ="Воспроизводить ",~Music,", пропуская первые ",~Offset," секунд и плавно увеличивая громкость через ",~Fade Time," секунд"
PlayMusicExBJHint=

PlayThematicMusicBJ="Играть музыкальную тему"
PlayThematicMusicBJ="Играть ",~Music Theme
PlayThematicMusicBJHint="Музыкальная тема будет проиграна один раз, затем возобновляется музыка игры."

PlayThematicMusicExBJ="Играть музыкальную тему не с начала"
PlayThematicMusicExBJ="Играть ",~Music Theme,", пропуская первые ",~Offset," секунд"
PlayThematicMusicExBJHint="Музыкальная тема будет проиграна один раз, затем возобновляется музыка игры."

EndThematicMusicBJ="Остановить музыкальную тему"
EndThematicMusicBJ="Остановить играющую сейчас музыкальную тему"
EndThematicMusicBJHint=

StopMusicBJ="Остановить музыку"
StopMusicBJ="Остановить музыку ",~After Fading/Immediately
StopMusicBJHint=

ResumeMusicBJ="Возобновить музыку"
ResumeMusicBJ="Возобновить музыку"
ResumeMusicBJHint=

SetMusicVolumeBJ="Установить громкость музыки"
SetMusicVolumeBJ="Установить громкость музыки ",~Volume,"%"
SetMusicVolumeBJHint=

SetMusicOffsetBJ="Перейти не к началу музыки"
SetMusicOffsetBJ="Перейти к ",~Offset," секунд от начала текущей музыки"
SetMusicOffsetBJHint=

SetThematicMusicOffsetBJ="Перейти не к началу музыкальной темы"
SetThematicMusicOffsetBJ="Перейти к ",~Offset," секунд с начала текущей музыкальной темы"
SetThematicMusicOffsetBJHint=

VolumeGroupSetVolumeBJ="Установить канал громкости"
VolumeGroupSetVolumeBJ="Установить ",~Volume Channel," как ",~Volume,"%"
VolumeGroupSetVolumeBJHint=

SetCineModeVolumeGroupsBJ="Установить все каналы громкости для кинематики"
SetCineModeVolumeGroupsBJ="Настроить все каналы громкости для кинематики"
SetCineModeVolumeGroupsBJHint="Используются те же настройки канала громкости как и в действии 'Кинематика - Режим кинематики'."

SetSpeechVolumeGroupsBJ="Установить все каналы громкости для речи"
SetSpeechVolumeGroupsBJ="Настроить все каналы громкости для речи"
SetSpeechVolumeGroupsBJHint=

VolumeGroupResetBJ="Сбросить все каналы громкости"
VolumeGroupResetBJ="Сбросить все каналы громкости до 100%"
VolumeGroupResetBJHint=


// Special Effect actions
AddSpecialEffectLocBJ="Создать специальный эффект в точке"
AddSpecialEffectLocBJ="Создать специальный эффект в ",~Point," используя ",~Model File
AddSpecialEffectLocBJHint=

AddSpecialEffectTargetUnitBJ="Создать специальный эффект на юните"
AddSpecialEffectTargetUnitBJ="Создать специальный эффект, прикрепленный к ",~Attachment Point," ",~Unit," используя ",~Model File
AddSpecialEffectTargetUnitBJHint="overhead - над головой, head - на голове, chest - грудь, hand - рука, weapon - оружие, origin - возле ног, foot - нога, *left, *right"

DestroyEffectBJ="Удалить специальный эффект"
DestroyEffectBJ="Удалить ",~Special Effect
DestroyEffectBJHint=


// Trigger actions
DisableTrigger="Выключить"
DisableTrigger="Выключить ",~Trigger
DisableTriggerHint="Не прерывает существующие задания триггера, но предотвращает будущие задания."

EnableTrigger="Включить"
EnableTrigger="Включить ",~Trigger
EnableTriggerHint="Заставляет триггер вновь работать."

ConditionalTriggerExecute="Запустить (Проверяя условия)"
ConditionalTriggerExecute="Запустить ",~Trigger," (проверяя условия)"
ConditionalTriggerExecuteHint="Запускает действия триггера, если его условия истинны."

TriggerExecute="Запустить (Игнорируя условия)"
TriggerExecute="Запустить ",~Trigger," (игнорируя условия)"
TriggerExecuteHint="Запускает действия триггера, игнорируя при этом события и условия."

QueuedTriggerAddBJ="Добавить в очередь триггера"
QueuedTriggerAddBJ="Добавить ",~Trigger," в очередь триггера (",~Checking/Ignoring," условия)"
QueuedTriggerAddBJHint="Триггеры, добавленные в очередь триггера, обрабатываются по одному за раз.  Добавляемые таким образом триггеры должны удалять себя, используя 'Триггер - Удалить из очереди'."

QueuedTriggerRemoveBJ="Удалить из очереди триггера"
QueuedTriggerRemoveBJ="Удалить ",~Trigger," из очереди триггера"
QueuedTriggerRemoveBJHint="Если триггер уже запущен через очередь триггера, его удаление позволит запуститься следующему триггеру в очереди триггера, но не остановит функционирование самого триггера."

QueuedTriggerClearBJ="Очистить очередь триггера"
QueuedTriggerClearBJ="Очистить очередь триггера"
QueuedTriggerClearBJHint="Произойдет удаление всех триггеров из очереди триггера."

QueuedTriggerClearInactiveBJ="Очистить очередь триггера от ожидающих триггеров"
QueuedTriggerClearInactiveBJ="Убрать все ожидающие триггеры из очереди триггера"
QueuedTriggerClearInactiveBJHint="Произойдет удаление всех ожидающих триггеров из очереди триггера.  Если триггер в данный момент находится в очереди, он будет удален."

AddTriggerEvent="Добавить новое событие"
AddTriggerEvent="Добавить к ",~Trigger," событие ",~Event
AddTriggerEventHint=


// Unit actions
CreateNUnitsAtLoc="Создать юниты через угол поворота"
CreateNUnitsAtLoc="Создать ",~Number," ",~Unit," для ",~Player," в ",~Point," поворот на ",~Direction," градусов"
CreateNUnitsAtLocHint="Угол поворота вводится в градусах, где 0 является востоком, а 90 - севером.  Используйте 'Последнюю созданную группу юнитов' для ссылки на эти созданные юниты. 'Последний созданный юнит' отсылает к последнему из этих юнитов."

CreateNUnitsAtLocFacingLocBJ="Создать юниты через направление"
CreateNUnitsAtLocFacingLocBJ="Создать ",~Number," ",~Unit," для ",~Player," в ",~Point," лицом к ",~Point
CreateNUnitsAtLocFacingLocBJHint="Используйте 'Последнюю созданную группу юнитов' для ссылки на эти созданные юниты. 'Последний созданный юнит' отсылает к последнему из этих юнитов."

CreateCorpseLocBJ="Создать труп"
CreateCorpseLocBJ="Создать ",~Unit," труп для ",~Player," в ",~Point
CreateCorpseLocBJHint="Не все юниты имеют формы трупов. Используйте 'Последний созданный юнит' для ссылки на этот юнит."

CreatePermanentCorpseLocBJ="Создать постоянный труп"
CreatePermanentCorpseLocBJ="Создать постоянный ",~Style," ",~Unit," труп для ",~Player," в ",~Point," в направлении ",~Direction," градусов"
CreatePermanentCorpseLocBJHint="Трупы из плоти будут часто казаться скелетными в первые 8 секунд своего существования."

KillUnit="Убить"
KillUnit="Убить ",~Unit
KillUnitHint=

RemoveUnit="Удалить"
RemoveUnit="Удалить ",~Unit," из игры"
RemoveUnitHint="Не оставляет трупов. Если применить на герое, этого героя нельзя воскресить."

ExplodeUnitBJ="Взорвать"
ExplodeUnitBJ="Взорвать ",~Unit
ExplodeUnitBJHint=

ReplaceUnitBJ="Заменить"
ReplaceUnitBJ="Заменить ",~Unit," на ",~Unit-Type," используя ",~Property Usage," жизнь и ману"
ReplaceUnitBJHint="Используйте 'Последний созданный юнит' для ссылки на замененный юнит. Все переменные, ссылающиеся на старый юнит, надо будет обновить. Замена Золотой шахты с существами обычно приводит к появлению обычной Золотой Шахты в дополнение к юниту-замене."

ShowUnitHide="Спрятать"
ShowUnitHide="Спрятать ",~Unit
ShowUnitHideHint="Используйте 'Показать юнит' чтобы увидеть юнит. Скрытые юниты не видны в очередях 'Юниты в регионе'."

ShowUnitShow="Показать"
ShowUnitShow="Показать ",~Unit
ShowUnitShowHint="Используйте 'Спрятать юнит' чтобы спрятать юнит. Спрятанные юниты не видны в очередях 'Юниты в регионе'."

SetUnitColor="Изменить цвет"
SetUnitColor="Изменить цвет ",~Unit," на ",~Color
SetUnitColorHint="Изменение цвета юнита не изменяет владельца юнита."

SetUnitOwner="Сменить владельца"
SetUnitOwner="Изменить владельца ",~Unit," на ",~Player," и ",~Change/Retain Color
SetUnitOwnerHint=

UnitShareVisionBJ="Общий обзор"
UnitShareVisionBJ=~Grant/Deny," общий обзор ",~Unit," игроку ",~Player
UnitShareVisionBJHint="Заметьте, что слоты нейтральных игроков не могут разделять их видение."

SetUnitPositionLoc="Двигать юнит (мгновенно)"
SetUnitPositionLoc="Двигать ",~Unit," мгновенно к ",~Point
SetUnitPositionLocHint=

SetUnitPositionLocFacingBJ="Двигать юнит и повернуть (мгновенно)"
SetUnitPositionLocFacingBJ="Двигать ",~Unit," мгновенно к ",~Point,", в направлении ",~Direction," градусов"
SetUnitPositionLocFacingBJHint="Значение угла задается в градусах, где 0 является востоком, а 90 - севером."

SetUnitPositionLocFacingLocBJ="Двигать юнит и повернуть к точке (мгновенно)"
SetUnitPositionLocFacingLocBJ="Двигать ",~Unit," мгновенно к ",~Point,", лицом к ",~Point
SetUnitPositionLocFacingLocBJHint=

SetUnitRallyPoint="Установить Току Сбора"
SetUnitRallyPoint="Установить току сбора для ",~Unit," в ",~Point
SetUnitRallyPointHint=

SetUnitRallyUnit="Установить Току Сбора За Юнитом"
SetUnitRallyUnit="Установить току сбора для ",~Unit," за ",~Unit
SetUnitRallyUnitHint=

SetUnitRallyDestructable="Установить Току Сбора К Разрушаемому Объекту"
SetUnitRallyDestructable="Установить Току Сбора для ",~Unit," к ",~Destructible
SetUnitRallyDestructableHint=

SetUnitLifePercentBJ="Установить Жизнь (В процентах)"
SetUnitLifePercentBJ="Установить жизнь ",~Unit," как ",~Percent,"%"
SetUnitLifePercentBJHint=

SetUnitManaPercentBJ="Установить ману (процент)"
SetUnitManaPercentBJ="Установить ману ",~Unit," как ",~Percent,"%"
SetUnitManaPercentBJHint=

SetUnitLifeBJ="Установить Жизнь (Значение)"
SetUnitLifeBJ="Установить жизнь ",~Unit," как ",~Value
SetUnitLifeBJHint=

SetUnitManaBJ="Установить ману (значение)"
SetUnitManaBJ="Установить ману ",~Unit," как ",~Value
SetUnitManaBJHint=

SetUnitInvulnerable="Сделать Уязвимым/Неуязвимым"
SetUnitInvulnerable="Сделать ",~Unit," ",~Invulnerable/Vulnerable
SetUnitInvulnerableHint=

PauseUnitBJ="Пауза/Снять паузу"
PauseUnitBJ=~Pause/Unpause," ",~Unit
PauseUnitBJHint="Приостановленный юнит не выполняет приказов, но помнит их и продолжает их выполнение после снятия паузы."

PauseAllUnitsBJ="Пауза/Снять паузу всех юнитов"
PauseAllUnitsBJ=~Pause/Unpause," всех юнитов"
PauseAllUnitsBJHint="Приостановленный юнит не выполняет приказов, но помнит их и продолжает их выполнение после снятия паузы. Это действие влияет лишь на юниты, существующие, когда действие запущено."

UnitPauseTimedLifeBJ="Таймер истечения Паузы/Снятия паузы"
UnitPauseTimedLifeBJ=~Pause/Unpause," таймер истечения для ",~Unit
UnitPauseTimedLifeBJHint="Лишь призванные юниты имеют таймеры истечения."

UnitApplyTimedLifeBJ="Добавить таймер истечения"
UnitApplyTimedLifeBJ="Добавить ",~Duration," секунд ",~Buff Type," таймер истечения юниту ",~Unit
UnitApplyTimedLifeBJHint=

SetUnitExplodedBJ="Заставить юнит взрываться при смерти"
SetUnitExplodedBJ="Заставить ",~Unit," ",~Explode/Die Normally," при смерти"
SetUnitExplodedBJHint=

UnitSuspendDecayBJ="Приостановить разложение трупа"
UnitSuspendDecayBJ=~Suspend/Resume," разложение трупа для ",~Unit
UnitSuspendDecayBJHint="Работает лишь на трупах, и только после того, как закончится анимация смерти юнита."

UnitResetCooldown="Сбросить охлаждения способностей"
UnitResetCooldown="Сбросить охлаждения способностей для ",~Unit
UnitResetCooldownHint="Делает все способности юнита доступными для повторного использования практически немедленно."

UnitSetConstructionProgress="Определить процесс строительства зданий"
UnitSetConstructionProgress="Определить ",~Building," процесс строительства ",~Progress,"%"
UnitSetConstructionProgressHint="Используется только лишь на зданиях, которые сейчас строятся."

UnitSetUpgradeProgress="Определить процесс обновления зданий"
UnitSetUpgradeProgress="Определить ",~Building," процесс обновления ",~Progress,"%"
UnitSetUpgradeProgressHint="Используется только лишь на зданиях, которые сейчас обновляются.  Не оказывает влияния на исследовательские обновления."

UnitAddSleepPerm="Заставить юнит заснуть"
UnitAddSleepPerm="Заставить ",~Unit," ",~Sleep/Remain Awake," когда все спокойно"
UnitAddSleepPermHint="Юниты игрока 1 и до 12 никогда не спят."

UnitSetCanSleepBJ="Заставить юнит спать ночью"
UnitSetCanSleepBJ="Заставить ",~Unit," ",~Sleep/Remain Awake," когда все спокойно ночью"
UnitSetCanSleepBJHint="Юниты игрока 1 и до 12 никогда не спят."

UnitWakeUpBJ="Разбудить"
UnitWakeUpBJ="Разбудить ",~Unit
UnitWakeUpBJHint="Влияет на ночной сон, а не на магический сон."

UnitGenerateAlarms="Включение Сигнала Тревоги Вкл/Выкл"
UnitGenerateAlarms="Включение Сигнала Тревоги для ",~Unit," ",~On/Off
UnitGenerateAlarmsHint="Это оказывает воздействие только на здания."

RescueUnitBJ="Спасти Юнит"
RescueUnitBJ="Спасти ",~Unit," для ",~Player," и ",~Change/Retain Color
RescueUnitBJHint=

MakeUnitRescuableToForceBJ="Сделать Спасаемым"
MakeUnitRescuableToForceBJ="Сделать ",~Unit," ",~Rescuable/Unrescuable," ",~Player Group
MakeUnitRescuableToForceBJHint=

SetUnitRescueRange="Установить Радиус Спасения"
SetUnitRescueRange="Ограничить события спасения для ",~Unit," до радиуса ",~Range
SetUnitRescueRangeHint="Сделать юнита спасаемым, воспользуйтесь 'Юнит - Сделать Спасаемым' или установить владельца юнита на положение 'Спасаемый'."

SetRescueUnitColorChangeBJ="Установить Поведение при Спасении для Юнитов"
SetRescueUnitColorChangeBJ="Сделать Юнитов ",~Change/Retain Color," при спасении"
SetRescueUnitColorChangeBJHint="По умолчанию, юниты, принадлежащие 'Спасаемым' игрокам не изменяют свой цвет при спасении. Это действие не оказывает влияние на юнитов, которые уже были спасены."

SetRescueBuildingColorChangeBJ="Установить Поведение При Спасении Для Зданий"
SetRescueBuildingColorChangeBJ="Сделать здания ",~Change/Retain Color," при спасении"
SetRescueBuildingColorChangeBJHint="По умолчанию, здания, принадлежащие 'Спасаемым' игрокам, не изменяют свой цвет при спасении. Это действие не оказывает влияние на здания, которые уже были спасены."

SetUnitUseFoodBJ="Разрешить/Запретить Использование Снабжения"
SetUnitUseFoodBJ=~Включить/Отключить," использование снабжения для ",~Unit
SetUnitUseFoodBJHint=

SetUnitFacingToFaceUnitTimed="Сделать Так, чтобы Юнит Стоял Лицом к Юниту"
SetUnitFacingToFaceUnitTimed="Сделать ",~Unit," повернуться лицом к ",~Unit," в течении ",~Time," секунд"
SetUnitFacingToFaceUnitTimedHint="Заставить юнита повернуться лицом к другому юниту. Эта функция действует только, когда исходный юнит в данный момент не перемещается."

SetUnitFacingToFaceLocTimed="Заставить Юнита Повернуться Лицом к Точке"
SetUnitFacingToFaceLocTimed="Заставить ",~Unit," повернуться лицом к ",~Point," в течении ",~Time," секунд"
SetUnitFacingToFaceLocTimedHint="Заставить юнита повернуться лицом к точке. Эта функция действует только, когда исходный юнит в данный момент не перемещается."

SetUnitFacingTimed="Заставить Юнита Повернуться Под Углом"
SetUnitFacingTimed="Заставить ",~Unit," повернуться под углом ",~Angle," в течении ",~Time," секунд"
SetUnitFacingTimedHint="Заставить юнита повернуться под указанным углом, значение угла вводится в градусах, со значением 0 на восток. Эта функция действует только, когда исходный юнит в данный момент не перемещается."

SetUnitMoveSpeed="Установить Скорость Передвижения"
SetUnitMoveSpeed="Установить ",~Unit," скорость передвижения на ",~Speed
SetUnitMoveSpeedHint="Общая скорость передвижения областью от 150 до 300."

SetUnitPathing="Установить Столкновения Вкл/Выкл"
SetUnitPathing="Установить столкновения для ",~Unit," ",~On/Off
SetUnitPathingHint="Юниты с запрещенными столкновениями игнорируют препятствия, но все равно принимают за препятствия друг друга."

SetUnitAcquireRangeBJ="Установить Область Завоевания"
SetUnitAcquireRangeBJ="Установить ",~Unit," область завоевания на ",~Range
SetUnitAcquireRangeBJHint="Область завоевания юнита - это расстояние, на котором юнит получает цели для атаки."

SetUnitUserData="Установить Обычное Значение"
SetUnitUserData="Установить обычное значение для ",~Unit," на ",~Index
SetUnitUserDataHint="Обычные значения используются только в триггерах, и может использоваться для хранения любой целочисленной величины."

UnitRemoveBuffsBJ="Удалить Смягчение Ударов"
UnitRemoveBuffsBJ="Удалить ",~Buff Type," смягчение ударов у ",~Unit
UnitRemoveBuffsBJHint=

UnitRemoveBuffsExBJ="Удалить Смягчение Ударов по Типу"
UnitRemoveBuffsExBJ="Удалить ",~Buff Type," смягчение ударов, учитывая ",~Buff Resist," для ",~Unit," (",~Include/Exclude," таймеры окончания срока, ",~Include/Exclude," ауры)"
UnitRemoveBuffsExBJHint=

UnitRemoveBuffBJ="Удалить Волшебство"
UnitRemoveBuffBJ="Удалить ",~Buff," волшебство у ",~Unit
UnitRemoveBuffBJHint=

UnitAddAbilityBJ="Добавить Способность"
UnitAddAbilityBJ="Добавить ",~Ability," для ",~Unit
UnitAddAbilityBJHint=

UnitRemoveAbilityBJ="Удалить Способность"
UnitRemoveAbilityBJ="Удалить ",~Ability," у ",~Unit
UnitRemoveAbilityBJHint="В большинстве случаев, удаление способности таким способом действует постоянно."

UnitAddTypeBJ="Добавить Классификацию"
UnitAddTypeBJ="Добавить классификацию ",~Classification," для ",~Unit
UnitAddTypeBJHint="Информация об обновлении юнита не будет отображаться, пока юнит не будет повторно выбран."

UnitRemoveTypeBJ="Отменить Классификацию"
UnitRemoveTypeBJ="Отменить ",~Classification," для ",~Unit
UnitRemoveTypeBJHint="Информация об обновлении юнита не будет отображаться, пока юнит не будет повторно выбран."

IssueTargetOrder="Результат Приказа При Наведении На Цель - Юнит"
IssueTargetOrder="Приказать ",~Unit," ",~Order," ",~Unit
IssueTargetOrderHint=

IssuePointOrderLoc="Результат Приказа при Наведении На Цель - Точку"
IssuePointOrderLoc="Приказать ",~Unit," ",~Order," ",~Point
IssuePointOrderLocHint=

IssueTargetDestructableOrder="Результат Приказа При Наведении на Разрушаемого"
IssueTargetDestructableOrder="Приказать ",~Unit," ",~Order," ",~Destructible
IssueTargetDestructableOrderHint=

IssueTargetItemOrder="Результат Order Targeting An Item"
IssueTargetItemOrder="Order ",~Unit," to ",~Order," ",~Item
IssueTargetItemOrderHint=

IssueImmediateOrder="Результат Приказа Без Цели"
IssueImmediateOrder="Приказать ",~Unit," ",~Order
IssueImmediateOrderHint=

IssueBuildOrderByIdLocBJ="Результат Приказа Постройки"
IssueBuildOrderByIdLocBJ="Приказать ",~Unit," построить ",~Unit-Type," на ",~Point
IssueBuildOrderByIdLocBJHint=

IssueTrainOrderByIdBJ="Результат Приказа Обучения/Усовершенствования"
IssueTrainOrderByIdBJ="Приказать ",~Unit," обучить/усовершенствовать в ",~Unit-Type
IssueTrainOrderByIdBJHint="Этим действием можно воспользоваться для того, чтобы приказать юниту усовершенствоваться. Городской Зал, к примеру, может быть усовершенствован в случае приказа обучить Охрану."

IssueUpgradeOrderByIdBJ="Результат Приказа Исследования"
IssueUpgradeOrderByIdBJ="Приказать ",~Unit," исследовать ",~Tech-Type
IssueUpgradeOrderByIdBJHint="Усовершенствования оружия и брони могут быть исследованы несколько раз при помощи действия этого триггера."

UnitDropItemPointLoc="Результат Сбрасывания Предмета"
UnitDropItemPointLoc=~Unit," бросил ",~Item," в ",~Point
UnitDropItemPointLocHint=

UnitDropItemSlotBJ="Результат Перекладывания Предмета"
UnitDropItemSlotBJ=~Unit," переместил ",~Item," в ячейку № ",~Index
UnitDropItemSlotBJHint="This only works if the unit is already carrying the item.  If an item exists in the slot, the items will be swapped."

UnitDropItemTargetBJ="Результат Передачи Предмета "
UnitDropItemTargetBJ=~Unit," отдал ",~Item," юниту - ",~Unit
UnitDropItemTargetBJHint=

UnitDamagePointLoc="Атака В Радиусе"
UnitDamagePointLoc="Приказать ",~Unit," атаковать зону в течение ",~Seconds," секунд(ы) в радиусе ",~Size," от ",~Location,", принося ",~Amount," вреда, тип атаки - ",~AttackType,", тип поражения - ",~DamageType
UnitDamagePointLocHint="This does not interrupt the unit's orders.  The source unit gets credit for kills resulting from this damage."

UnitDamageTargetBJ="Атака Цели"
UnitDamageTargetBJ="Приказать ",~Unit," атаковать ",~Target,", принося ",~Amount," вреда, тип атаки - ",~AttackType,", тип поражения ",~DamageType
UnitDamageTargetBJHint="This does not interrupt the unit's orders.  The source unit gets credit for kills resulting from this damage."

DecUnitAbilityLevelSwapped="Снижение Уровня Способности Боевой Единицы"
DecUnitAbilityLevelSwapped="Снизить уровень способности ",~Ability," для ",~Unit
DecUnitAbilityLevelSwappedHint="Если у боевой единицы нет способности, настоящий триггер игнорируется."

IncUnitAbilityLevelSwapped="Увеличение Уровня Способности Боевой Единицы"
IncUnitAbilityLevelSwapped="Увеличить уровень способности ",~Ability," для ",~Unit
IncUnitAbilityLevelSwappedHint="Если у боевой единицы нет способности, настоящий триггер игнорируется."

SetUnitAbilityLevelSwapped="Установить Уровень Способности Боевой Единицы"
SetUnitAbilityLevelSwapped="Установить уровень способности ",~Ability," для ",~Unit," на ",~Level
SetUnitAbilityLevelSwappedHint="Если у боевой единицы нет способности, настоящий триггер игнорируется."

// Unit Group actions
ForGroupMultiple="Выбрать Каждого Юнита В Группе Юнитов И Сделать Множество Действий"
ForGroupMultiple="Выбрать каждого юнита в ",~Unit Group," и сделать (Действия)"
ForGroupMultipleHint="Пользуйтесь 'Выбранным Юнитом' для обращения к каждому выбранному юниту. Этот триггер действует на каждого юнита в группе, включая погибших юнитов. Действия ожидания не должны использоваться в рамках этой функции. Добавляйте действия к этой функции на основном экране."

ForGroup="Выбрать Каждого Юнита В Группе Юнитов И Совершить Действие"
ForGroup="Выбрать каждого юнита в ",~Unit Group," и совершить ",~Action
ForGroupHint="Пользуйтесь 'Выбранным Юнитом' для обращения к каждому выбранному юниту. Этот триггер действует на каждого юнита в группе, включая погибших юнитов. Действия ожидания не должны использоваться в рамках этой функции."

GroupAddUnitSimple="Добавить юнит"
GroupAddUnitSimple="Добавить ",~Unit," к ",~Unit Group
GroupAddUnitSimpleHint="Эта функция добавляет юнита к переменной Группы Юнитов. Это не оказывает воздействия на самого юнита."

GroupAddGroup="Добавить Группу Юнитов"
GroupAddGroup="Добавить всех юнитов из ",~Unit Group," к ",~Unit Group
GroupAddGroupHint="Эта функция добавляет всех юнитов к переменной Группы Юнитов.  Это не оказывает воздействия на самих юнитов."

GroupRemoveUnitSimple="Удалить юнит"
GroupRemoveUnitSimple="Удалить ",~Unit," из ",~Unit Group
GroupRemoveUnitSimpleHint="Эта функция удаляет юнита из переменной Группы Юнитов. Это не оказывает воздействия на самого юнита."

GroupRemoveGroup="Удалить Группу Юнитов"
GroupRemoveGroup="Удалить всех юнитов ",~Unit Group," из ",~Unit Group
GroupRemoveGroupHint="Эта функция удаляет всех юнитов группы юнитов из переменной Группы Юнитов. Это не оказывает воздействия на самих юнитов."

GroupClear="Очистить"
GroupClear="Удалить всех юнитов из ",~Unit Group
GroupClearHint="Эта функция удаляет всех юнитов из переменной Группы Юнитов. Это не оказывает воздействия на самих юнитов."

GroupTargetOrder="Результат Приказа При Наведении На Цель - Юнит"
GroupTargetOrder="Приказать ",~Unit Group," ",~Order," ",~Unit
GroupTargetOrderHint="Эта функция отдаст приказ максимум 12 юнитам из указанной группы юнитов. Просим заметить, приказы, отданные при помощи 'Щелчка Правой Клавиши Мыши' не всегда функционируют, как при приказаниях юнитам в игре."

GroupPointOrderLoc="Результат Приказа при Наведении На Цель - Точку"
GroupPointOrderLoc="Приказать группе ",~Unit Group," ",~Order," ",~Point
GroupPointOrderLocHint="Эта функция отдаст приказ максимум 12 юнитам из указанной группы юнитов."

GroupTargetDestructableOrder="Результат Приказа При Наведении на Разрушаемого"
GroupTargetDestructableOrder="Приказать группе ",~Unit Group," ",~Order," ",~Destructible
GroupTargetDestructableOrderHint="Эта функция отдаст приказ максимум 12 юнитам из указанной группы юнитов."

GroupTargetItemOrder="Результат Order Targeting An Item"
GroupTargetItemOrder="Order ",~Unit Group," to ",~Order," ",~Item
GroupTargetItemOrderHint="This will issue an order to at most 12 units from the specified unit group."

GroupImmediateOrder="Результат Приказа Без Цели"
GroupImmediateOrder="Приказать группе ",~Unit Group," ",~Order
GroupImmediateOrderHint="Эта функция отдаст приказ максимум 12 юнитам из указанной группы юнитов."

GroupTrainOrderByIdBJ="Результат Приказа Обучения"
GroupTrainOrderByIdBJ="Приказать ",~Unit Group," обучить ",~Unit-Type
GroupTrainOrderByIdBJHint="Этим действием также можно пользоваться для приказания юниту усовершенствоваться. Городской Зал, к примеру, может быть усовершенствован в случае приказа обучить Охрану. Эта функция отдаст приказ максимум 12 юнитам из указанной группы юнитов."

// Ubersplat actions
CreateUbersplatBJ="Создать"
CreateUbersplatBJ="Создать ",~Location," тип ",~Type," с цветом (",~Red,"%, ",~Green,"%, ",~Blue,"%) и ",~Transparency,"% прозрачностью (",~Включить/Отключить," остановка, ",~Enble/Disable," пропуск)"
CreateUbersplatBJHint="Цвета (Красный, Зеленый, Голубой). 100% прозрачночти для полной невидимости."

DestroyUbersplat="Разрушить"
DestroyUbersplat="Разрушить ",~Ubersplat
DestroyUbersplatHint=

ResetUbersplat="Сбросить"
ResetUbersplat="Сбросить ",~Ubersplat
ResetUbersplatHint=

FinishUbersplat="Закончить"
FinishUbersplat="Закончить ",~Ubersplat
FinishUbersplatHint=

ShowUbersplatBJ="Показать/Скрыть"
ShowUbersplatBJ=~Show/Hide," ",~Ubersplat
ShowUbersplatBJHint=

SetUbersplatRender="Изменить Отображение"
SetUbersplatRender="Изменить ",~Ubersplat,": ",~Включить/Отключить," отображение"
SetUbersplatRenderHint=

SetUbersplatRenderAlways="Изменить Отображение Навсегда"
SetUbersplatRenderAlways="Изменить ",~Ubersplat,": ",~Включить/Отключить," отображение навсегда"
SetUbersplatRenderAlwaysHint=


// Visibility actions
FogEnableOn="Разрешить Туман Войны"
FogEnableOn="Разрешить туман войны"
FogEnableOnHint=

FogEnableOff="Запретить Туман Войны"
FogEnableOff="Запретить туман войны"
FogEnableOffHint=

FogMaskEnableOn="Разрешить Черную Маску"
FogMaskEnableOn="Разрешить черную маску"
FogMaskEnableOnHint=

FogMaskEnableOff="Запретить Черную Маску"
FogMaskEnableOff="Запретить черную маску"
FogMaskEnableOffHint=

CreateFogModifierRectBJ="Создать Область Модификатора Видимости"
CreateFogModifierRectBJ="Создать первоначально ",~Enabled/Disabled," модификатор видимости для ",~Player," излучающий ",~Visibility State," на ",~Region
CreateFogModifierRectBJHint=

CreateFogModifierRadiusLocBJ="Создать Круг Модификатора Видимости"
CreateFogModifierRadiusLocBJ="Создать первоначально ",~Enabled/Disabled," модификатор видимости для ",~Player," излучающий ",~Visibility State," от ",~Point," радиусом ",~Radius
CreateFogModifierRadiusLocBJHint=

FogModifierStart="Разрешить Модификатор Видимости"
FogModifierStart="Разрешить ",~Visibility Modifier
FogModifierStartHint=

FogModifierStop="Запретить Модификатор Видимости"
FogModifierStop="Запретить ",~Visibility Modifier
FogModifierStopHint=

DestroyFogModifier="Уничтожить Модификатор Видимости"
DestroyFogModifier="Уничтожить ",~Visibility Modifier
DestroyFogModifierHint=


// Obsolete actions
//AddPerfLogLabel="** AddPerfLogLabel **"
//AddPerfLogLabel="** AddPerfLogLabel(",~Label,") **"
//AddPerfLogLabelHint="** Это предназначено только для отладки - уничтожьте до корабля. **"

//Cheat="** Обман **"
//Cheat="** Обман(",~Label,") **"
//CheatHint="** Это предназначено только для отладки - уничтожьте до корабля. **"



//***************************************************************************
[TriggerCallStrings]

// returns boolean
IsDestructableAliveBJ="Разрушаемый Жив"
IsDestructableAliveBJ=~Destructible," жив"
IsDestructableAliveBJHint=

IsDestructableDeadBJ="Разрушаемый Мертв"
IsDestructableDeadBJ=~Destructible," мертв"
IsDestructableDeadBJHint=

IsDestructableInvulnerableBJ="Разрушаемый Неуязвим"
IsDestructableInvulnerableBJ=~Destructible," неуязвим"
IsDestructableInvulnerableBJHint=

IsPointBlightedBJ="Point Is Blighted"
IsPointBlightedBJ=~Point," is blighted"
IsPointBlightedBJHint=

IsTerrainPathableBJ="Terrain Pathing Is Off"
IsTerrainPathableBJ="Terrain pathing at ",~Location," of type ",~Pathing Type," is off"
IsTerrainPathableBJHint="Terrain pathing is off if it is not pathable to the given pathing type.  For example, 'Buildability' is off if the pathing cell is unbuildable.  Use 'Environment - Turn Terrain Pathing On/Off' to change terrain pathing."

IsMapFlagSet="Установка Флага Карты"
IsMapFlagSet=~Map Flag," установлен"
IsMapFlagSetHint=

IsCustomCampaignButtonVisibile="Кнопка Обычной Кампании Видима"
IsCustomCampaignButtonVisibile="Кнопка обычной кампании ",~Number," видима"
IsCustomCampaignButtonVisibileHint=

GetCreepCampFilterState="Отображение Лагеря"
GetCreepCampFilterState="Отображать лагеря нейтральных на миникарте"
GetCreepCampFilterStateHint=

SaveGameExists="Сохраненная Игра Существует"
SaveGameExists="Сохраненная игра ",~Filename," существует"
SaveGameExistsHint="Эта функция действует только для карт с подписью компании Blizzard."

GetStoredBooleanBJ="Загрузить Логическую Величину"
GetStoredBooleanBJ="Загрузить ",~Label," ",~Category," из ",~Game Cache
GetStoredBooleanBJHint="Если метка не найдена, эта функция возвращает значение Ложь."

HaveStoredValue="Величина Кэша Существует"
HaveStoredValue=~Label," сохранена как ",~Type," ",~Category," в ",~Game Cache
HaveStoredValueHint=

HaveSavedValue="Hashtable Value Exists"
HaveSavedValue=~Value," is stored as a ",~Type," of ",~Value," in ",~Hashtable
HaveSavedValueHint=

UnitHasItem="У Героя Есть Предмет"
UnitHasItem=~Hero," обладает ",~Item
UnitHasItemHint=

UnitHasItemOfTypeBJ="У Героя Есть Предмет Типа"
UnitHasItemOfTypeBJ=~Hero," обладает предметом типа ",~Item-Type
UnitHasItemOfTypeBJHint=

IsSuspendedXP="Опыт Для Героя Запрещен"
IsSuspendedXP="Опыт запрещен для ",~Hero
IsSuspendedXPHint="Пользуйтесь действием 'Герой - Разрешить/Запретить Опыт' для запрещения опыта Героя."

CheckItemStatus="Проверка Состояния Предмета"
CheckItemStatus=~Item," имеет состояние ",~Status
CheckItemStatusHint=

CheckItemcodeStatus="Проверка Состояния Типа Предмета"
CheckItemcodeStatus=~Item-Type," имеет состояние ",~Status
CheckItemcodeStatusHint=

IsItemHiddenBJ="Предмет Скрыт"
IsItemHiddenBJ=~Item," скрыт"
IsItemHiddenBJHint="Предметы, содержащиеся у юнитов, считаются скрытыми."

IsItemOwned="У Предмета Появился Владелец"
IsItemOwned=~Item," получил владельца"
IsItemOwnedHint="Любой предмет в инвентаре юнита считается приобретенным, даже если его владелец погиб."

RectContainsItem="Предмет В Области"
RectContainsItem=~Item," находится в области ",~Region
RectContainsItemHint="Приобретенному предмету не положено находиться в каких угодно областях."

IsItemInvulnerable="Предмет Неуязвим"
IsItemInvulnerable=~Item," неуязвим"
IsItemInvulnerableHint=

LeaderboardHasPlayerItemBJ="Игрок Помещен На Доску Лидеров"
LeaderboardHasPlayerItemBJ=~Leaderboard," содержит ",~Player
LeaderboardHasPlayerItemBJHint=

IsMultiboardDisplayed="Multiboard Is Showing"
IsMultiboardDisplayed=~Multiboard," is showing"
IsMultiboardDisplayedHint=

IsMultiboardMinimized="Multiboard Is Minimized"
IsMultiboardMinimized=~Multiboard," is minimized"
IsMultiboardMinimizedHint=

WaygateIsActiveBJ="Путеводные Врата Разрешены"
WaygateIsActiveBJ=~Way Gate," разрешены"
WaygateIsActiveBJHint=

IsPlayerFlagSetBJ="Флаг Игрока Включен"
IsPlayerFlagSetBJ=~Player Flag," включен для ",~Player
IsPlayerFlagSetBJHint=

IsPlayerAlly="Игрок - Союзник Игрока"
IsPlayerAlly=~Player," - союзник игрока ",~Player
IsPlayerAllyHint=

IsPlayerEnemy="Игрок - Враг Игрока"
IsPlayerEnemy=~Player," - враг ",~Player
IsPlayerEnemyHint=

GetPlayerAlliance="Игрок В Союзе С Игроком"
GetPlayerAlliance=~Player," дает ",~Player," ",~Alliance Type
GetPlayerAllianceHint=

IsPlayerInForce="Игрок В Группе Игроков"
IsPlayerInForce=~Player," в ",~Player Group
IsPlayerInForceHint=

IsQuestItemCompleted="Требование Квеста Выполнено"
IsQuestItemCompleted=~Quest Requirement," выполнено"
IsQuestItemCompletedHint=

IsQuestEnabled="Квест Разрешен"
IsQuestEnabled=~Quest," разрешен"
IsQuestEnabledHint=

IsQuestCompleted="Квест Выполнен"
IsQuestCompleted=~Quest," выполнен"
IsQuestCompletedHint=

IsQuestFailed="Квест Провален"
IsQuestFailed=~Quest," провален"
IsQuestFailedHint=

IsQuestDiscovered="Квест Обнаружен"
IsQuestDiscovered=~Quest," обнаружен"
IsQuestDiscoveredHint=

IsQuestRequired="Необходим Квест"
IsQuestRequired=~Quest," необходим"
IsQuestRequiredHint=

RectContainsLoc="Область Содержит Точку"
RectContainsLoc=~Region," содержит ",~Point
RectContainsLocHint=

IsTriggerEnabled="Триггер Включен"
IsTriggerEnabled=~Trigger," включен"
IsTriggerEnabledHint=

TriggerEvaluate="Условия Вычисления Триггера"
TriggerEvaluate="Вычислить ",~Trigger," условия"
TriggerEvaluateHint=

IsTriggerQueuedBJ="Триггер Помещен В Очередь"
IsTriggerQueuedBJ=~Trigger," помещен в очередь"
IsTriggerQueuedBJHint="Пользуйтесь 'Триггер - Добавить К Очереди Триггеров' и 'Триггер - Удалить Из Очереди Триггеров' для управления очередью триггеров."

IsTriggerQueueEmptyBJ="Очередь Триггеров Пуста"
IsTriggerQueueEmptyBJ="Очередь Тригеров Пуста"
IsTriggerQueueEmptyBJHint="Пользуйтесь 'Триггер - Добавить К Очереди Триггеров' и 'Триггер - Удалить Из Очереди Триггеров' для управления очередью триггеров."

IsUnitType="Проверка Классификации Юнита"
IsUnitType=~Unit," типа ",~Type
IsUnitTypeHint=

IsUnitIdType="Проверка Классификации Типа Юнита"
IsUnitIdType=~Unit-Type," типа ",~Type
IsUnitIdTypeHint=

IsUnitInGroup="Юнит В Группе Юнитов"
IsUnitInGroup=~Unit," в ",~Unit Group
IsUnitInGroupHint=

RectContainsUnit="Юнит В Области"
RectContainsUnit=~Region," содержит ",~Unit
RectContainsUnitHint=

IsUnitAliveBJ="Юнит Жив"
IsUnitAliveBJ=~Unit," жив"
IsUnitAliveBJHint=

IsUnitDeadBJ="Юнит Мертв"
IsUnitDeadBJ=~Unit," мертв"
IsUnitDeadBJHint=

IsUnitPausedBJ="Юнит Приостановлен"
IsUnitPausedBJ=~Unit," приостановлен"
IsUnitPausedBJHint=

IsUnitHiddenBJ="Юнит Скрыт"
IsUnitHiddenBJ=~Unit," скрыт"
IsUnitHiddenBJHint="Юнит может быть скрыт при помощи действия триггера 'Юнит - Скрыть', или поместив юнита в транспорт, Драгоценный Камень Души, алтарь, и тому подобное."

IsUnitIllusionBJ="Юнит - Иллюзия"
IsUnitIllusionBJ=~Unit," - иллюзия"
IsUnitIllusionBJHint=

UnitCanSleepPerm="Юнит Спит"
UnitCanSleepPerm=~Unit," спит здоровым сном"
UnitCanSleepPermHint="Юниты игрока 1 и до 12 никогда не спят."

UnitCanSleepBJ="Юнит Спит Ночью"
UnitCanSleepBJ=~Unit," спит здоровым сном ночью"
UnitCanSleepBJHint="Юниты игрока 1 и до 12 никогда не спят."

UnitIsSleepingBJ="Юнит Спит "
UnitIsSleepingBJ=~Unit," спит"
UnitIsSleepingBJHint="Юниты игрока 1 и до 12 никогда не спят."

DoesUnitGenerateAlarms="Юнит Поднимает Тревогу"
DoesUnitGenerateAlarms=~Unit," поднимает тревогу"
DoesUnitGenerateAlarmsHint=

IsUnitLoadedBJ="Юнита Транспортируют"
IsUnitLoadedBJ=~Unit," транспортируется"
IsUnitLoadedBJHint=

IsUnitInTransportBJ="Юнит Находится В Транспорте"
IsUnitInTransportBJ=~Unit," загружен в ",~Transport
IsUnitInTransportBJHint=

IsUnitSelected="Юнит Выбран Игроком"
IsUnitSelected=~Unit," выбран ",~Player
IsUnitSelectedHint=

IsUnitAlly="Юнит Принадлежит Союзнику Игрока"
IsUnitAlly=~Unit," принадлежит союзнику ",~Player
IsUnitAllyHint=

IsUnitEnemy="Юнит Принадлежит Врагу Игрока"
IsUnitEnemy=~Unit," принадлежит врагу ",~Player
IsUnitEnemyHint=

UnitHasBuffBJ="Юнит Имеет Специальное Волшебство"
UnitHasBuffBJ=~Unit," имеет специальное ",~Buff
UnitHasBuffBJHint=

IsUnitGroupEmptyBJ="Группа Юнитов Пуста"
IsUnitGroupEmptyBJ=~Unit Group," пуста"
IsUnitGroupEmptyBJHint="Это истинно, когда группа юнитов не содержит юнитов."

IsUnitGroupInRectBJ="Юниты Из Группы Юнитов Находятся В Области"
IsUnitGroupInRectBJ="Все юниты из ",~Unit Group," находятся в ",~Region
IsUnitGroupInRectBJHint="Это истинно, если абсолютно все юниты из группы юнитов находятся в заданной области."

IsUnitGroupDeadBJ="Юниты Из Группы Юнитов Мертвы"
IsUnitGroupDeadBJ="Все юниты из группы ",~Unit Group," погибли"
IsUnitGroupDeadBJHint="Это истинно, если абсолютно все юниты из группы юнитов погибли."

IsFogEnabled="Туман Войны Разрешен"
IsFogEnabled="Туман войны разрешен"
IsFogEnabledHint=

IsFogMaskEnabled="Черная Маска Разрешена"
IsFogMaskEnabled="Черная маска разрешена"
IsFogMaskEnabledHint=

IsUnitVisible="Юнит Видимый Для Игрока"
IsUnitVisible=~Unit," видим для ",~Player
IsUnitVisibleHint=

IsUnitInvisible="Юнит Невидим Для Игрока"
IsUnitInvisible=~Unit," невидим для ",~Player
IsUnitInvisibleHint=

IsUnitFogged="Юнит В Тумане Для Игрока"
IsUnitFogged=~Unit," в тумане для ",~Player
IsUnitFoggedHint=

IsUnitMasked="Юнит Замаскирован Для Игрока"
IsUnitMasked=~Unit," замаскирован для ",~Player
IsUnitMaskedHint=

IsLocationVisibleToPlayer="Точка Видима Для Игрока"
IsLocationVisibleToPlayer=~Point," видима для ",~Player
IsLocationVisibleToPlayerHint=

IsLocationFoggedToPlayer="Точка В Тумане Для Игрока"
IsLocationFoggedToPlayer=~Point," в тумане для ",~Player
IsLocationFoggedToPlayerHint=

IsLocationMaskedToPlayer="Точка Замаскирована Для Игрока"
IsLocationMaskedToPlayer=~Point," замаскирована для ",~Player
IsLocationMaskedToPlayerHint=


// returns integer
OperatorInt="Арифметика"
OperatorInt=~Value," ",~Operator," ",~Value
OperatorIntHint=

GetForLoopIndexA="Для Цикла Целой А"
GetForLoopIndexA="Целая А"
GetForLoopIndexAHint=

GetForLoopIndexB="Для Цикла Целой B"
GetForLoopIndexB="Целая B"
GetForLoopIndexBHint=

StringLength="Длина Строки"
StringLength="Длина ",~String
StringLengthHint=

R2I="Вещественное, как Целое число"
R2I="Целое число (",~Real,")"
R2RHint=

S2I="Строка, как Целое число"
S2I="Целое число (",~String,")"
S2IHint=

GetElevatorHeight="Высота Подъемника"
GetElevatorHeight="Высота ",~Elevator
GetElevatorHeightHint="Высоту подъемника можно изменять при использовании действия 'Разрушаемый - Установить Высоту Подъемника'."

GetTerrainCliffLevelBJ="Уровень Местности Скалы"
GetTerrainCliffLevelBJ="Уровень местности скалы ",~Location
GetTerrainCliffLevelBJHint="Значения уровня скалы начинаются с нуля."

GetTerrainVarianceBJ="Изминение Ландшавата"
GetTerrainVarianceBJ="Изминение ландшавата в ",~Location
GetTerrainVarianceBJHint=

GetLearnedSkillLevel="Достигнутый Уровень Навыка"
GetLearnedSkillLevel="Достигнутый уровень навыка"
GetLearnedSkillLevelHint=

GetPlayers="Количество Игроков"
GetPlayers="Количество игроков"
GetPlayersHint=

GetTeams="Количество Команд"
GetTeams="Количество команд"
GetTeamsHint=

GetAllyColorFilterState="Установка Фильтра Цвета Союзников"
GetAllyColorFilterState="Установка фильтра цвета союзника"
GetAllyColorFilterStateHint="Значение 0 указывает на то, что фильтрование запрещено. Значение 1 указывает на то, что фильтрование разрешено только для миникарты. Значение 2 указывает на то, что фильтрование разрешено для миникарты и для обзора игры."

GetTournamentFinishNowRule="Конец Турнира"
GetTournamentFinishNowRule="Конец турнира"
GetTournamentFinishNowRuleHint="Если значение равно 1 - Ничьей быть не может."

GetTournamentScore="Очки Мелли Турнира"
GetTournamentScore="Очки Мелли Турнира для ",~Player
GetTournamentScoreHint="Возвращает очки Мелли игрока."

GetStoredIntegerBJ="Загрузить Целое Значение"
GetStoredIntegerBJ="Загрузить ",~Label," ",~Category," из ",~Game Cache
GetStoredIntegerBJHint="Если метка не найдена, эта функция возвращает значение 0."

GetHeroLevel="Уровень Героя"
GetHeroLevel="Уровень героя ",~Hero
GetHeroLevelHint=

GetHeroXP="Опыт Героя"
GetHeroXP="Опыт героя ",~Hero
GetHeroXPHint=

GetHeroStatBJ="Свойство Героя"
GetHeroStatBJ=~Attribute," ",~Hero," (",~Include/Exclude," бонусы)"
GetHeroStatBJHint=

GetHeroSkillPoints="Не потраченные Очки Навыков"
GetHeroSkillPoints="Не потраченные очки навыков ",~Hero
GetHeroSkillPointsHint=

GetItemLevel="Уровень Предмета"
GetItemLevel="Уровень предмета ",~Item
GetItemLevelHint=

GetItemCharges="Число Зарядов Предмета"
GetItemCharges="Число Зарядов ",~Item
GetItemChargesHint="Беззарядовые предметы возвратят ноль."

GetItemUserData="Особая Цена Предмета"
GetItemUserData="Особая Цена ",~Item
GetItemUserDataHint="Используйте 'Предмет - Установить Особую Цену' для установки особой цены."

LeaderboardGetPlayerIndexBJ="Положение Доски Лидеров"
LeaderboardGetPlayerIndexBJ="Положение ",~Player," на ",~Leaderboard
LeaderboardGetPlayerIndexBJHint=

GetRandomInt="Случайное Число"
GetRandomInt="Случайное целое число в диапазоне между ",~Minimum," и ",~Maximum
GetRandomIntHint=

IMinBJ="Минимум"
IMinBJ="Min(",~Value 1,", ",~Value 2,")"
IMinBJHint=

IMaxBJ="Максимум"
IMaxBJ="Max(",~Value 1,", ",~Value 2,")"
IMaxBJHint=

IAbsBJ="Модуль"
IAbsBJ="Abs(",~Value,")"
IAbsBJHint="Вычисляет абсолютную величину числа."

ISignBJ="Знак"
ISignBJ="Sign(",~Value,")"
ISignBJHint="Вычисляет знак числа. Значение отрицательного числа составляет -1. Значение неотрицательного числа - 1."

ModuloInteger="По модулю"
ModuloInteger=~Dividend," mod ",~Divisor
ModuloIntegerHint="Вычисляет остаток от деления.  Пример: 12 mod 5 = 2."

MultiboardGetRowCount="Row Count"
MultiboardGetRowCount="Number of rows in ",~Multiboard
MultiboardGetRowCountHint=

MultiboardGetColumnCount="Column Count"
MultiboardGetColumnCount="Number of columns in ",~Multiboard
MultiboardGetColumnCountHint=

GetResourceAmount="Осталось Золота"
GetResourceAmount="Количество ресурсов помещено в ",~Gold Mine
GetResourceAmountHint="Это предназначено для использования с Шахтами с Золотом."

GetPlayerState="Свойство Игрока"
GetPlayerState=~Player," ",~Property
GetPlayerStateHint=

GetPlayerTaxRateBJ="Налог Игрока"
GetPlayerTaxRateBJ="Налог ",~Resource," от ",~Player," к ",~Player
GetPlayerTaxRateBJHint="Налоговая ставка от 0 до 100."

GetPlayerScore="Очки Игрока"
GetPlayerScore=~Player," ",~Score
GetPlayerScoreHint=

GetConvertedPlayerId="Номер Игрока"
GetConvertedPlayerId="Номер игрока ",~Player
GetConvertedPlayerIdHint="Номера игроков варьируются от 1 до 16."

GetPlayerStructureCount="Подсчет Сооружений"
GetPlayerStructureCount="Подсчет сооружений управляется ",~Player," (",~Include/Exclude," неполные структуры)"
GetPlayerStructureCountHint=

GetPlayerUnitCount="Подсчет Неструктурных Юнитов"
GetPlayerUnitCount="Подсчет неструктурных юнитов управляется ",~Player," (",~Include/Exclude," неполные юниты)"
GetPlayerUnitCountHint=

GetPlayerTechCountSimple="Текущий Уровень Исследования"
GetPlayerTechCountSimple="Текущий уровень исследования ",~Tech," для ",~Player
GetPlayerTechCountSimpleHint="Возвращает значение 0 или 1 для простых технологий, или 0..3 для трехуровневых усовершенствования."

GetPlayerTechMaxAllowedSwap="Максимальный Уровень Исследования"
GetPlayerTechMaxAllowedSwap="Максимальный уровень исследования ",~Tech," для ",~Player
GetPlayerTechMaxAllowedSwapHint="Возвращает значение 0 или 1 для простых технологий, или 0..3 для трехуровневых усовершенствования."

GetPlayerTeam="Команда Игрока"
GetPlayerTeam="Номер команды игрока ",~Player
GetPlayerTeamHint=

CountPlayersInForceBJ="Подсчет Игроков в Группе Игроков"
CountPlayersInForceBJ="Количество игроков в группе ",~Player Group
CountPlayersInForceBJHint=

CountUnitsInGroup="Подсчет Юнитов В Группе Юнитов"
CountUnitsInGroup="Количество юнитов в группе юнитов ",~Unit Group
CountUnitsInGroupHint=

CountLivingPlayerUnitsOfTypeId="Подсчет Живых Юнитов, Принадлежащих Игроку"
CountLivingPlayerUnitsOfTypeId="Количество живых юнитов ",~Unit-Type,", принадлежащих игроку ",~Player
CountLivingPlayerUnitsOfTypeIdHint=

GetUnitFoodUsed="Снабжение, Использованное Юнитом"
GetUnitFoodUsed="Снабжение, использованное юнитом ",~Unit
GetUnitFoodUsedHint=

GetUnitFoodMade="Снабжение, Обеспеченное Юнитом"
GetUnitFoodMade="Снабжение, обеспеченное юнитом ",~Unit
GetUnitFoodMadeHint=

GetFoodUsed="Снабжение, Использованное Юнитом Типа"
GetFoodUsed="Снабжение, использованное юнитом ",~Unit-Type
GetFoodUsedHint=

GetFoodMade="Снабжение, Обеспеченное Юнитом Типа"
GetFoodMade="Снабжение, обеспеченное юнитом ",~Unit-Type
GetFoodMadeHint=

GetUnitPointValue="Точка-Значение Юнита"
GetUnitPointValue="Точка-значение юнита ",~Unit
GetUnitPointValueHint=

GetUnitPointValueByType="Точка-Значение Юнита Типа"
GetUnitPointValueByType="Точка-значение юнита ",~Unit-Type
GetUnitPointValueByTypeHint=

GetUnitUserData="Обычное Значение Юнита"
GetUnitUserData="Обычное значение юнита ",~Unit
GetUnitUserDataHint="Используйте 'Юнит - Установить Общее Значение' для установки общего значения юнита."

GetUnitLevel="Уровень Юнита"
GetUnitLevel="Уровень ",~Unit
GetUnitLevelHint="Использыется как у героев, так и у остальных юнитов."

GetUnitAbilityLevelSwapped="Уровень Способности Юнита"
GetUnitAbilityLevelSwapped="Уровень ",~Ability," у ",~Unit
GetUnitAbilityLevelSwappedHint="Если способности нет - возвращается нуль."

UnitInventoryCount="Число носимых Предметов"
UnitInventoryCount="Число носимых Предметов у ",~Unit
UnitInventoryCountHint=

UnitInventorySizeBJ="Размер Инвентаря"
UnitInventorySizeBJ="Размер Инвентаря для ",~Unit
UnitInventorySizeBJHint=

UnitCountBuffsExBJ="Подсчет Смягчений Ударов Типа"
UnitCountBuffsExBJ="Количество смягчений ударов ",~Buff Type," считается ",~Buff Resist," для  ",~Unit," (",~Include/Exclude," таймеры окончания срока, ",~Include/Exclude," ауры)"
UnitCountBuffsExBJHint=

GetTriggerEvalCount="Подсчет Вычислений Триггера"
GetTriggerEvalCount="Подсчет вычислений триггера ",~Trigger
GetTriggerEvalCountHint=

GetTriggerExecCount="Подсчет Исполнений Триггера"
GetTriggerExecCount="Подсчет исполнений триггера ",~Trigger
GetTriggerExecCountHint=

QueuedTriggerCountBJ="Подсчет Триггеров В Очереди Триггеров"
QueuedTriggerCountBJ="Количество триггеров в очереди триггеров"
QueuedTriggerCountBJHint="Пользуйтесь 'Триггер - Добавить К Очереди Триггеров' и 'Триггер - Удалить Из Очереди Триггеров' для управления очередью триггеров."


// returns real
OperatorReal="Арифметика"
OperatorReal=~Value," ",~Operator," ",~Value
OperatorRealHint=

GetLocationX="X Точки"
GetLocationX="X точки ",~Point
GetLocationXHint=

GetLocationY="Y Точки"
GetLocationY="Y точки ",~Point
GetLocationYHint=

CameraSetupGetFieldSwap="Поле Камеры Объекта Камеры"
CameraSetupGetFieldSwap=~Camera Field," объекта ",~Camera Object
CameraSetupGetFieldSwapHint=

GetCameraField="Поле Камеры Текущей Камеры"
GetCameraField=~Camera Field," текущего обзора камеры"
GetCameraFieldHint=

GetCameraTargetPositionX="Цель X Текущей Камеры"
GetCameraTargetPositionX="Цель X текущего обзора камеры"
GetCameraTargetPositionXHint=

GetCameraTargetPositionY="Цель Y Текущей Камеры"
GetCameraTargetPositionY="Цель Y текущего обзора камеры"
GetCameraTargetPositionYHint=

GetCameraTargetPositionZ="Цель Z Текущей Камеры"
GetCameraTargetPositionZ="Цель Z текущего обзора камеры"
GetCameraTargetPositionZHint=

GetCameraEyePositionX="Источник X Текущей Камеры"
GetCameraEyePositionX="Источник X текущего обзора камеры"
GetCameraEyePositionXHint=

GetCameraEyePositionY="Источник Y Текущей Камеры"
GetCameraEyePositionY="Источник Y текущего обзора камеры"
GetCameraEyePositionYHint=

GetCameraEyePositionZ="Источник Z Текущей Камеры"
GetCameraEyePositionZ="Источник Z текущего обзора камеры"
GetCameraEyePositionZHint=

GetLastTransmissionDurationBJ="Длительность Последней Передачи"
GetLastTransmissionDurationBJ="Длительность последней передачи"
GetLastTransmissionDurationBJHint="Это продолжительность, в секундах, последнего использованного действия 'Фильмы - Передача'."

I2R="Преобразовать Целое В Вещественное"
I2R="Real(",~Integer,")"
I2RHint=

S2R="Преобразовать Строку В Вещественное"
S2R="Real(",~String,")"
S2RHint=

Deg2Rad="Преобразовать Радиусы В Радианы"
Deg2Rad="Radians(",~Degrees,")"
Deg2RadHint=

Rad2Deg="Преобразовать Радианы В Градусы"
Rad2Deg="Degrees(",~Radians,")"
Rad2DegHint=

TimerGetElapsed="Истекшее Время"
TimerGetElapsed="Истекшее время для ",~Timer
TimerGetElapsedHint=

TimerGetRemaining="Оставшееся Время"
TimerGetRemaining="Оставшееся время для ",~Timer
TimerGetRemainingHint=

TimerGetTimeout="Первоначальное Время"
TimerGetTimeout="Первоначальное время для ",~Timer
TimerGetTimeoutHint=

GetDestructableLife="Жизнь"
GetDestructableLife="Текущая жизнь разрушаемого ",~Destructible
GetDestructableLifeHint="Разрушаемые теряют жизнь при атаке или при сборе урожая. Как и юниты, разрушаемые погибают, когда их жизнь доходит до 0."

GetDestructableMaxLife="Максимальная Жизнь"
GetDestructableMaxLife="Максимальная жизнь ",~Destructible
GetDestructableMaxLifeHint="Разрушаемые теряют жизнь при атаке или при сборе урожая. Как и юниты, разрушаемые погибают, когда их жизнь доходит до 0."

GetDestructableOccluderHeight="Высота Преграды"
GetDestructableOccluderHeight="Высота преграды ",~Destructible
GetDestructableOccluderHeightHint=

GetEventDamage="Полученные Повреждения"
GetEventDamage="Полученные повреждения"
GetEventDamageHint="При ответе на событие юнита 'Получение Повреждений', это относится к количеству полученных повреждений."

GetTournamentFinishSoonTimeRemaining="Оставшееся Время Турнира"
GetTournamentFinishSoonTimeRemaining="Оставшееся время турнира"
GetTournamentFinishSoonTimeRemainingHint="Кода игрок должен скоро закончить игру"

GetTimeOfDay="время дня"
GetTimeOfDay="Время суток игры"
GetTimeOfDayHint="Это время игры, а не настоящее время."

GetTimeOfDayScalePercentBJ="Скорость Времени Суток"
GetTimeOfDayScalePercentBJ="Текущая скорость времени суток"
GetTimeOfDayScalePercentBJHint="Это действие возвращает скорость времени суток в процентном соотношении от скорости времени суток по умолчанию."

GetStoredRealBJ="Загрузить Вещественное Значение"
GetStoredRealBJ="Загрузить ",~Label," ",~Category," из ",~Game Cache
GetStoredRealBJHint="Если метка не найдена, эта функция возвращает значение 0."

LoadIntegerBJ="Load Integer Value (hashtable)"
LoadIntegerBJ="Load ",~Value," of ",~Value," from ",~Hashtable
LoadIntegerBJHint="If the label is not found, this function returns 0."

LoadRealBJ="Load Real Value (hashtable)"
LoadRealBJ="Load ",~Value," of ",~Value," from ",~Hashtable
LoadRealBJHint="If the label is not found, this function returns 0."

LoadStringBJ="Load String Value (hashtable)"
LoadStringBJ="Load ",~Value," of ",~Value," from ",~Hashtable
LoadStringBJHint="If the label is not found, this function returns an empty string."

LoadBooleanBJ="Load Boolean Value (hashtable)"
LoadBooleanBJ="Load ",~Value," of ",~Value," from ",~Hashtable
LoadBooleanBJHint="If the label is not found, this function returns False."

LoadPlayerHandleBJ="Load Player Handle"
LoadPlayerHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadPlayerHandleBJHint="If the label is not found, this function returns NULL."

LoadWidgetHandleBJ="Load Widget Handle"
LoadWidgetHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadWidgetHandleBJHint="If the label is not found, this function returns NULL."

LoadDestructableHandleBJ="Load Destructable Handle"
LoadDestructableHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadDestructableHandleBJHint="If the label is not found, this function returns NULL."

LoadItemHandleBJ="Load Item Handle"
LoadItemHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadItemHandleBJHint="If the label is not found, this function returns NULL."

LoadUnitHandleBJ="Load Unit Handle"
LoadUnitHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadUnitHandleBJHint="If the label is not found, this function returns NULL."

LoadAbilityHandleBJ="Load Ability Handle"
LoadAbilityHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadAbilityHandleBJHint="If the label is not found, this function returns NULL."

LoadTimerHandleBJ="Load Timer Handle"
LoadTimerHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadTimerHandleBJHint="If the label is not found, this function returns NULL."

///LoadTriggerRegionHandleBJ="Load Region Handle"
///LoadTriggerRegionHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
///LoadTriggerRegionHandleBJHint="If the label is not found, this function returns NULL."

LoadTriggerHandleBJ="Load Trigger Handle"
LoadTriggerHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadTriggerHandleBJHint="If the label is not found, this function returns NULL."

LoadTriggerConditionHandleBJ="Load Triggercondition Handle"
LoadTriggerConditionHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadTriggerConditionHandleBJHint="If the label is not found, this function returns NULL."

LoadTriggerActionHandleBJ="Load Triggeraction Handle"
LoadTriggerActionHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadTriggerActionHandleBJHint="If the label is not found, this function returns NULL."

LoadTriggerEventHandleBJ="Load Eventid Handle"
LoadTriggerEventHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadTriggerEventHandleBJHint="If the label is not found, this function returns NULL."

LoadForceHandleBJ="Load Force Handle"
LoadForceHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadForceHandleBJHint="If the label is not found, this function returns NULL."

LoadGroupHandleBJ="Load Group Handle"
LoadGroupHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadGroupHandleBJHint="If the label is not found, this function returns NULL."

LoadLocationHandleBJ="Load Location Handle"
LoadLocationHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadLocationHandleBJHint="If the label is not found, this function returns NULL."

LoadRegionHandleBJ="Load Region Handle"
LoadRegionHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadRegionHandleBJHint="If the label is not found, this function returns NULL."

LoadRectHandleBJ="Load Rect Handle"
LoadRectHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadRectHandleBJHint="If the label is not found, this function returns NULL."

LoadBooleanExprHandleBJ="Load Boolexpr Handle"
LoadBooleanExprHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadBooleanExprHandleBJHint="If the label is not found, this function returns NULL."

//LoadConditionFuncHandleBJ="Load Conditionfunc Handle"
//LoadConditionFuncHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
//LoadConditionFuncHandleBJHint="If the label is not found, this function returns NULL."

//LoadFilterFuncHandleBJ="Load Filterfunc Handle"
//LoadFilterFuncHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
//LoadFilterFuncHandleBJHint="If the label is not found, this function returns NULL."

LoadSoundHandleBJ="Load Sound Handle"
LoadSoundHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadSoundHandleBJHint="If the label is not found, this function returns NULL."

//LoadRaceHandleBJ="Load Race Handle"
//LoadRaceHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
//LoadRaceHandleBJHint="If the label is not found, this function returns NULL."

LoadEffectHandleBJ="Load Effect Handle"
LoadEffectHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadEffectHandleBJHint="If the label is not found, this function returns NULL."

LoadUnitPoolHandleBJ="Load Unitpool Handle"
LoadUnitPoolHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadUnitPoolHandleBJHint="If the label is not found, this function returns NULL."

LoadItemPoolHandleBJ="Load Itempool Handle"
LoadItemPoolHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadItemPoolHandleBJHint="If the label is not found, this function returns NULL."

LoadQuestHandleBJ="Load Quest Handle"
LoadQuestHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadQuestHandleBJHint="If the label is not found, this function returns NULL."

LoadQuestItemHandleBJ="Load Questitem Handle"
LoadQuestItemHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadQuestItemHandleBJHint="If the label is not found, this function returns NULL."

LoadDefeatConditionHandleBJ="Load Defeatcondition Handle"
LoadDefeatConditionHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadDefeatConditionHandleBJHint="If the label is not found, this function returns NULL."

LoadTimerDialogHandleBJ="Load Timerdialog Handle"
LoadTimerDialogHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadTimerDialogHandleBJHint="If the label is not found, this function returns NULL."

LoadLeaderboardHandleBJ="Load Leaderboard Handle"
LoadLeaderboardHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadLeaderboardHandleBJHint="If the label is not found, this function returns NULL."

LoadMultiboardHandleBJ="Load Multiboard Handle"
LoadMultiboardHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadMultiboardHandleBJHint="If the label is not found, this function returns NULL."

LoadMultiboardItemHandleBJ="Load Multiboarditem Handle"
LoadMultiboardItemHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadMultiboardItemHandleBJHint="If the label is not found, this function returns NULL."

LoadTrackableHandleBJ="Load Trackable Handle"
LoadTrackableHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadTrackableHandleBJHint="If the label is not found, this function returns NULL."

LoadDialogHandleBJ="Load Dialog Handle"
LoadDialogHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadDialogHandleBJHint="If the label is not found, this function returns NULL."

LoadButtonHandleBJ="Load Button Handle"
LoadButtonHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadButtonHandleBJHint="If the label is not found, this function returns NULL."

//LoadVersionHandleBJ="Load Version Handle"
//LoadVersionHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
//LoadVersionHandleBJHint="If the label is not found, this function returns NULL."

//LoadItemTypeHandleBJ="Load Itemtype Handle"
//LoadItemTypeHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
//LoadItemTypeHandleBJHint="If the label is not found, this function returns NULL."

LoadTextTagHandleBJ="Load Texttag Handle"
LoadTextTagHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadTextTagHandleBJ="If the label is not found, this function returns NULL."

LoadLightningHandleBJ="Load Lightning Handle"
LoadLightningHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadLightningHandleBJHint="If the label is not found, this function returns NULL."

LoadImageHandleBJ="Load Image Handle"
LoadImageHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadImageHandleBJHint="If the label is not found, this function returns NULL."

LoadUbersplatHandleBJ="Load Ubersplat Handle"
LoadUbersplatHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadUbersplatHandleBJHint="If the label is not found, this function returns NULL."

LoadFogStateHandleBJ="Load Fogstate Handle"
LoadFogStateHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadFogStateHandleBJHint="If the label is not found, this function returns NULL."

LoadFogModifierHandleBJ="Load Fogmodifier Handle"
LoadFogModifierHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadFogModifierHandleBJHint="If the label is not found, this function returns NULL."

GetItemLifeBJ="Жизнь Предмета"
GetItemLifeBJ="Текущая жизни предмета ",~Item
GetItemLifeBJHint=

GetLightningColorRBJ="Красный Молния"
GetLightningColorRBJ="Красная ",~Lightning
GetLightningColorRBJHint=

GetLightningColorGBJ="Зеленая Молния"
GetLightningColorGBJ="Зеленая ",~Lightning
GetLightningColorGBJHint=

GetLightningColorBBJ="Синяя Молния"
GetLightningColorBBJ="Синяя ",~Lightning
GetLightningColorBBJHint=

GetLightningColorABJ="Прозрачность Молнии"
GetLightningColorABJ="Прозрачность ",~Lightning
GetLightningColorABJHint=

GetRandomReal="Случайное Число"
GetRandomReal="Случайное вещественное число в диапазоне ",~Minimum," до ",~Maximum
GetRandomRealHint=

GetRandomDirectionDeg="Случайный Угол"
GetRandomDirectionDeg="Случайный угол"
GetRandomDirectionDegHint="Это случайное вещественное число в диапазоне от 0 до 360, для использования в качестве угла направления юнита."

GetRandomPercentageBJ="Случайное Процентное Соотношение"
GetRandomPercentageBJ="Случайное процентное соотношение"
GetRandomPercentageBJHint="Это случайное вещественное число в диапазоне от 0 до 100 для использования в качестве процентного соотношения."

DistanceBetweenPoints="Расстояние Между Точками"
DistanceBetweenPoints="Расстояние между точками ",~Point," и ",~Point
DistanceBetweenPointsHint="Возвращает Евклидово расстояние между двумя точками, не включая высоту."

AngleBetweenPoints="Угол Между Точками"
AngleBetweenPoints="Угол от ",~Point," до ",~Point
AngleBetweenPointsHint="Возвращает угол линии от одной точки до другой."

RMinBJ="Минимум"
RMinBJ="Min(",~Value 1,", ",~Value 2,")"
RMinBJHint=

RMaxBJ="Максимум"
RMaxBJ="Max(",~Value 1,", ",~Value 2,")"
RMaxBJHint=

RAbsBJ="Модуль"
RAbsBJ="Abs(",~Value,")"
RAbsBJHint="Вычисляет абсолютную величину числа."

RSignBJ="Знак"
RSignBJ="Sign(",~Value,")"
RSignBJHint="Вычисляет знак числа. Значение отрицательного числа составляет -1. Значение неотрицательного числа - 1."

ModuloReal="По модулю"
ModuloReal=~Dividend," mod ",~Divisor
ModuloRealHint="Вычисляет остаток от деления. Пример: 9.0 mod 2.5 = 1.5."

Pow="Степень"
Pow="Power(",~Value,", ",~Power,")"
PowHint=

SquareRoot="Квадратный Корень"
SquareRoot="Square root(",~Value,")"
SquareRootHint=

SinBJ="Синус"
SinBJ="Sin(",~Angle,")"
SinBJHint="Предполагается, что значение угла будет указано в градусах."

CosBJ="Косинус"
CosBJ="Cos(",~Angle,")"
CosBJHint="Предполагается, что значение угла будет указано в градусах."

TanBJ="Тангенс"
TanBJ="Tan(",~Angle,")"
TanBJHint="Предполагается, что значение угла будет указано в градусах."

AsinBJ="Арксинус"
AsinBJ="Asin(",~Value,")"
AsinBJHint="Возвращаемый угол задан в градусах."

AcosBJ="Арккосинус"
AcosBJ="Acos(",~Value,")"
AcosBJHint="Возвращаемый угол задан в градусах."

AtanBJ="Арктангенс (От Угла)"
AtanBJ="Atan(",~Value,")"
AtanBJHint="Возвращаемый угол задан в градусах."

Atan2BJ="Арктангенс (От Треугольников)"
Atan2BJ="Atan2(",~Y,", ",~X,")"
Atan2BJHint="Возвращаемый угол задан в градусах."

GetPlayerHandicapXPBJ="Уровень опыта"
GetPlayerHandicapXPBJ=~Player," уровень опыта"
GetPlayerHandicapXPBJHint="Уровень опыта определяется в процентах, нормально - 100%."

GetPlayerHandicapBJ="Гандикап"
GetPlayerHandicapBJ=~Player," гандикап"
GetPlayerHandicapBJHint="Уровень гандикапа определяется в процентах, нормально - 100%."

GetRectCenterX="Центр X Региона"
GetRectCenterX="Центр X",~Region 
GetRectCenterXHint=

GetRectCenterY="Центр Y Региона"
GetRectCenterY="Центр Y",~Region 
GetRectCenterYHint=

GetRectMinX="Мин. X Региона"
GetRectMinX="Мин. X ",~Region 
GetRectMinXHint=

GetRectMinY="Мин. Y Региона"
GetRectMinY="Мин. Y ",~Region 
GetRectMinYHint=

GetRectMaxX="Макс. X Региона"
GetRectMaxX="Макс. X ",~Region 
GetRectMaxXHint=

GetRectMaxY="Макс. Y Региона"
GetRectMaxY="Макс. Y ",~Region 
GetRectMaxYHint=

GetRectWidthBJ="Ширина Региона"
GetRectWidthBJ="Ширина ",~Region 
GetRectWidthBJHint=

GetRectHeightBJ="Высота Региона"
GetRectHeightBJ="Высота",~Region 
GetRectHeightBJHint=

GetSoundDurationBJ="Длительность звука"
GetSoundDurationBJ="Длительность ",~Sound
GetSoundDurationBJHint="Возвращает длительность звука в секундах."

GetSoundFileDurationBJ="Длительность музыки"
GetSoundFileDurationBJ="Длительность ",~Music
GetSoundFileDurationBJHint="Возвращает длительность музыки в секундах."

GetUnitStateSwap="Собственность"
GetUnitStateSwap=~Property," у ",~Unit
GetUnitStateSwapHint=

GetUnitLifePercent="Процент Жизни"
GetUnitLifePercent="Процент Жизни у ",~Unit
GetUnitLifePercentHint=

GetUnitManaPercent="Процент маны"
GetUnitManaPercent="Процент маны у ",~Unit
GetUnitManaPercentHint=

GetUnitFacing="Угол поворота"
GetUnitFacing="Поворот ",~Unit
GetUnitFacingHint="Угол возвращается в градусах, 0 - направление на восток."

GetUnitMoveSpeed="Скорость движения (Текущая)"
GetUnitMoveSpeed="Скорость движения ",~Unit
GetUnitMoveSpeedHint="Скорость движения обычно находится между 150 и 300."

GetUnitDefaultMoveSpeed="Скорость движения (по умолчанию)"
GetUnitDefaultMoveSpeed="Скорость движения по умолчанию ",~Unit
GetUnitDefaultMoveSpeedHint="Скорость движения обычно находится между 150 и 300."

GetUnitAcquireRange="Уровень овладения (Текущий)"
GetUnitAcquireRange="Текущий уровень овладения ",~Unit
GetUnitAcquireRangeHint=

GetUnitDefaultAcquireRange="Уровень овладения (по умолчанию)"
GetUnitDefaultAcquireRange="Уровень овладения по умолчанию ",~Unit
GetUnitDefaultAcquireRangeHint=

GetUnitTurnSpeed="Скорость хода (Текущая)"
GetUnitTurnSpeed="Текущая скорость хода ",~Unit
GetUnitTurnSpeedHint="Это значение определяет скорость разворота отряда.  Скорости могут принимать значения от 0 до 1, меньшие числа символизируют меньшую скорость поворота."

GetUnitDefaultTurnSpeed="Скорость хода (По умолчанию)"
GetUnitDefaultTurnSpeed="Скорость хода по умолчанию ",~Unit
GetUnitDefaultTurnSpeedHint="Это значение определяет скорость разворота отряда.  Скорости могут принимать значения от 0 до 1, меньшие числа символизируют меньшую скорость поворота."

GetUnitPropWindowBJ="Угол соотв. Окна (Текущий)"
GetUnitPropWindowBJ="Угол соотв. окна ",~Unit
GetUnitPropWindowBJHint=

GetUnitDefaultPropWindowBJ="Угол соотв. окна (По умолчанию)"
GetUnitDefaultPropWindowBJ="Угол соотв. окна по умолчанию ",~Unit
GetUnitDefaultPropWindowBJHint=

GetUnitFlyHeight="Высота полета (Текущая)"
GetUnitFlyHeight="Текущая высота полета ",~Unit
GetUnitFlyHeightHint="Только летающие и парящие отряды могут изменять высоту полета."

GetUnitDefaultFlyHeight="Высота полета (По умолчанию)
GetUnitDefaultFlyHeight="Высота полета по умолчанию ",~Unit
GetUnitDefaultFlyHeightHint=


// returns string
OperatorString="Сцепленные строки"
OperatorString=~String 1," + ",~String 2
OperatorStringHint=

SubStringBJ="Подстрока"
SubStringBJ="Подстрока(",~String,", ",~Start,", ",~End,")"
SubStringBJHint="Пример:  Подстрока(''Grunts stink'', 2, 4) = ''run''."

GetHandleIdBJ="Get Handle ID"
GetHandleIdBJ="Key ",~Handle
GetHandleIdBJHint="Creates a key from a handle for use in the hashtable."

StringHashBJ="Get String ID"
StringHashBJ="Key ",~String
StringHashBJHint="Creates a key from a string for use in the hashtable."

I2S="Конвертировать целое число в строку"
I2S="Строка(",~Integer,")"
I2SHint=

R2S="Конвертировать действительное число в строку"
R2S="Строка(",~Real,")"
R2SHint=

R2SW="Конвертировать действительное число в форматированную строку"
R2SW="Строка(",~Real,", ",~Width,", ",~Precision,")"
R2SWHint="Примеры:  String(1.234, 7, 2) = ''   1.23''.  String(1.234, 2, 5) = ''1.23400''."

OrderId2StringBJ="Конвертировать приказ в строку"
OrderId2StringBJ="Строка(",~Order,")"
OrderId2StringBJHint="Пример строк приказа:  ''harvest'', ''move'', ''smart'', ''attack''."

UnitId2StringBJ="Конвертировать тип юнита в строку"
UnitId2StringBJ="Строка(",~Unit-Type,")"
UnitId2StringBJHint=

StringIdentity="Конвертировать внешнюю строку"
StringIdentity="Внешняя строка(",~String,")"
StringIdentityHint="Используйте это, чтобы быть уверенным, что строка сделана внешней в war3map.wts"

StringCase="Convert String Case"
StringCase="String(",~String,") as ",~Lower/Upper Case
StringCaseHint="All letters in the string will be changed to the selected case."

GetDestructableName="Destructible Name"
GetDestructableName="Name of ",~Destructible
GetDestructableNameHint=

GetEventPlayerChatString="Введенная строка чата"
GetEventPlayerChatString="Введенная строка чата"
GetEventPlayerChatStringHint=

GetEventPlayerChatStringMatched="Соответствующая строка чата"
GetEventPlayerChatStringMatched="Соответствующая строка чата"
GetEventPlayerChatStringMatchedHint=

GetSaveBasicFilename="Имя файла сохраненной игры"
GetSaveBasicFilename="Имя файла сохраненной игры"
GetSaveBasicFilenameHint="При ответе 'Игра - Сохранение игры', это значит, что имя файла сохранено."

GetAbilityName="Ability Name"
GetAbilityName="Name of ",~Ability
GetAbilityNameHint=

GetAbilityEffectBJ="Ability Effect Art Path"
GetAbilityEffectBJ="Art path of ",~Ability," ",~EffectType," (index ",~Index,")"
GetAbilityEffectBJHint="This returns the model file path of an ability's effect art."

GetAbilitySoundBJ="Ability Effect Sound Name"
GetAbilitySoundBJ="Name of ",~Ability," ",~SoundType
GetAbilitySoundBJHint=

GetStoredStringBJ="Загрузить значение строки"
GetStoredStringBJ="Загрузить ",~Label," ",~Category," из ",~Game Cache
GetStoredStringBJHint="Если метка не найдена, эта функция возвращает пустую строку."

GetHeroProperName="Hero Proper Name"
GetHeroProperName="Proper name of ",~Hero
GetHeroProperNameHint="Calling this on a hero will return his actual name (e.g. 'Granis Darkhammer' for a Paladin)."

GetItemName="Item Name"
GetItemName="Name of ",~Item
GetItemNameHint=

MultiboardGetTitleText="Multiboard Title"
MultiboardGetTitleText="Title of ",~Multiboard
MultiboardGetTitleTextHint=

GetPlayerName="Имя игрока"
GetPlayerName="Имя ",~Player
GetPlayerNameHint=

GetTriggerName="Trigger Name"
GetTriggerName="Name of the current trigger"
GetTriggerNameHint="Returns the name, as entered in the editor, of the trigger which contains this function."

GetUnitName="Название юнита"
GetUnitName="Название ",~Unit
GetUnitNameHint="Возвращает внешнее название юнита, не соответствующее названию юнитов Героев."


// returns location
GetRectCenter="Центр Региона"
GetRectCenter="Центр ",~Region
GetRectCenterHint=

GetRandomLocInRect="Случайная точка в Регионе"
GetRandomLocInRect="Случайная точка в ",~Region
GetRandomLocInRectHint=

OffsetLocation="Точка со смещением"
OffsetLocation=~Point," смещение на (",~X,", ",~Y,")"
OffsetLocationHint="Значения смещения - (X, Y)."

PolarProjectionBJ="Точка с полярным смещением"
PolarProjectionBJ=~Point," смещение на ",~Distance," по отношению к ",~Angle," градусов"
PolarProjectionBJHint=

CameraSetupGetDestPositionLoc="Цель объектива камеры"
CameraSetupGetDestPositionLoc="Цель ",~Camera Object
CameraSetupGetDestPositionLocHint=

GetCameraTargetPositionLoc="Цель текущей камеры"
GetCameraTargetPositionLoc="Цель обзора текущей камеры"
GetCameraTargetPositionLocHint=

GetCameraEyePositionLoc="Источник текущей камеры"
GetCameraEyePositionLoc="Источник обзора текущей камеры"
GetCameraEyePositionLocHint=

Location="Конвертировать Координаты точки"
Location="Точка(",~X,", ",~Y,")"
LocationHint=

GetDestructableLoc="Позиция разрушаемого"
GetDestructableLoc="Позиция ",~Destructible
GetDestructableLocHint=

GetOrderPointLoc="Целевая точка изданного приказа"
GetOrderPointLoc="Целевая точка изданного приказа"
GetOrderPointLocHint="При ответе 'Издан приказ, назначенный точке', это ссылка на цель приказа."

GetSpellTargetLoc="Целевая точка создания способности"
GetSpellTargetLoc="Целевая точка создания способности"
GetSpellTargetLocHint="Когда юнит проходит обуение и т.п."

GetItemLoc="Позиция предмета"
GetItemLoc="Позиция ",~Item
GetItemLocHint=

WaygateGetDestinationLocBJ="Назначение Путевых ворот"
WaygateGetDestinationLocBJ="Назначение ",~Way Gate
WaygateGetDestinationLocBJHint=

GetPlayerStartLocationLoc="Месторасположение старта Игрока"
GetPlayerStartLocationLoc=~Player," стартовое положение"
GetPlayerStartLocationLocHint=

GetUnitLoc="Позиция юнита"
GetUnitLoc="Позиция ",~Unit
GetUnitLocHint=

GetUnitRallyPoint="Положение Юнита"
GetUnitRallyPoint="Положение ",~Unit," "
GetUnitRallyPointHint="Если нет, то возвращается (0,0)"


// returns rect
GetCurrentCameraBoundsMapRectBJ="Пределы текущей камеры"
GetCurrentCameraBoundsMapRectBJ="Пределы текущей камеры"
GetCurrentCameraBoundsMapRectBJHint="Это зона, в которую нацеливать камеру в данный момент запрещено."

GetCameraBoundsMapRect="Начальные пределы камеры"
GetCameraBoundsMapRect="Начальные пределы камеры"
GetCameraBoundsMapRectHint="Это зона инициализации карты, в которую нацеливать камеру в данный момент запрещено."

GetPlayableMapRect="Зона игровой карты"
GetPlayableMapRect="Зона игровой карты"
GetPlayableMapRectHint="Это зона, в которой запрещены юниты. Обычно эта зона находится сразу за пределами камеры."

GetEntireMapRect="Вся карта"
GetEntireMapRect="Вся карта"
GetEntireMapRectHint="Это вся карта, включая зоны, до которых обычно не достигают юниты."

OffsetRectBJ="Смещение ширины Региона
OffsetRectBJ=~Region," смещение на (",~X,", ",~Y,")"
OffsetRectBJHint="Значения смещения - (X, Y)."

RectFromCenterSizeBJ="Конвертировать точку с размерами в Регион"
RectFromCenterSizeBJ="Регион центрирован на ",~Point," с размерами (",~Width,", ",~Height,")"
RectFromCenterSizeBJHint="Значения размеров - это (ширина, высота)."

Rect="Конвертировать координаты в Регион"
Rect="Регион(",~X1,", ",~Y1,", ",~X2,", ",~Y2,")"
RectHint="Выбрать четыре координаты (мин. X, мин. Y, макс. X, макс. Y), чтобы определить прямоугольный регион на карте."

RectFromLoc="Конвертировать точки в Регион"
RectFromLoc="Регион(",~Point 1,", ",~Point 2,")"
RectFromLocHint="Выбрать две точки, чтобы определить прямоугольный регион на карте."


// returns unit
GetLastCreatedUnit="Последний созданный юнит"
GetLastCreatedUnit="Последний созданный юнит"
GetLastCreatedUnitHint="Это последний юнит, созданный через действие триггера 'Юнит - Создать'."

GetLastRestoredUnitBJ="Последний восстановленный юнит"
GetLastRestoredUnitBJ="Последний восстановленный юнит"
GetLastRestoredUnitBJHint="Это последний юнит, восстановленный действием триггера 'Кэш игры - Восстановить юнит'."

GetLastReplacedUnitBJ="Последний замененный юнит"
GetLastReplacedUnitBJ="Последний замененный юнит"
GetLastReplacedUnitBJHint="Это последний юнит, созданный действием триггера 'Юнит - Заменить'."

GetLastHauntedGoldMine="Последняя посещенная золотая шахта"
GetLastHauntedGoldMine="Последняя посещенная золотая шахта"
GetLastHauntedGoldMineHint="Это последняя шахта, созданная действием триггера 'Нейтральное здание - Посетить золотую шахту (Немедленно)'."

GetEnumUnit="Выбранный юнит"
GetEnumUnit="Выбранный юнит"
GetEnumUnitHint="При использовании действия 'Выбрать каждый юнит...', это означает, что каждый юнит считается выбранным."

GetFilterUnit="Совпадающий юнит"
GetFilterUnit="Совпадающий юнит"
GetFilterUnitHint="Используйте для нахождения юнита, рассматриваемого для функций 'Условие совпадение юнитов'."

GroupPickRandomUnit="Случайный юнит из группы юнитов"
GroupPickRandomUnit="Случайный юнит из ",~Unit Group
GroupPickRandomUnitHint=

GetAttackedUnitBJ="Атакованный юнит"
GetAttackedUnitBJ="Атакованный юнит"
GetAttackedUnitBJHint="Отвечая на событие юнита 'Атакован', эта опция ссылается на юнит, который подвергся атаке."

GetAttacker="Атакующий юнит"
GetAttacker="Атакующий юнит"
GetAttackerHint="При ответе на событие юнита 'Атакован', ссылается на атакующий юнит."

GetBuyingUnit="Покупающий юнит"
GetBuyingUnit="Покупающий юнит"
GetBuyingUnitHint="При ответе на события юнита 'Продает юнит' или 'Продает предмет', ссылается на юнит, осуществляющий покупку."

GetCancelledStructure="Отмененная структура"
GetCancelledStructure="Отмененная структура"
GetCancelledStructureHint="При ответе на событие юнита 'Отменяет строительство', ссылается на юнит, чье строительство было отменено."

GetSpellAbilityUnit="Применяющий юнит"
GetSpellAbilityUnit="Применяющий юнит"
GetSpellAbilityUnitHint="При ответе на события юнита 'Перенаправление/Применение/т.д. способности', ссылается на юнит, применяющий эту способность."

GetConstructedStructure="Построенная структура"
GetConstructedStructure="Построенная структура"
GetConstructedStructureHint="При ответе на событие юнита 'Заканчивает Строительство', ссылается на юнит, чье строительство было завершено."

GetConstructingStructure="Сооружает структуру"
GetConstructingStructure="Сооружает структуру"
GetConstructingStructureHint="При ответе на событие юнита 'Начинает Строительство', ссылается на юнит, чье строительство было начато."

GetEventDamageSource="Источник Повреждений"
GetEventDamageSource="Источник Повреждений"
GetEventDamageSourceHint="When responding to a 'Takes Damage' unit event, this refers to the source of damage being dealt."

GetDecayingUnit="Разлагающийся юнит"
GetDecayingUnit="Разлагающийся юнит"
GetDecayingUnitHint="При ответе на событие юнита 'Разлагается', ссылается на юнит, который разлагается."

GetDyingUnit="Умирающий юнит"
GetDyingUnit="Умирающий юнит"
GetDyingUnitHint="При ответе на событие юнита 'Умирает', ссылается на юнит, который умирает."

GetEnteringUnit="Входящий юнит"
GetEnteringUnit="Входящий юнит"
GetEnteringUnitHint="При ответе на событие юнита 'Юнит входит в регион', ссылается на юнит, который входит в регион."

GetManipulatingUnit="Герой манипулирует предметом"
GetManipulatingUnit="Герой манипулирует предметом"
GetManipulatingUnitHint="При ответе на события юнита 'Использует/Приобретает/Теряет предмет', ссылается на героя, который манипулирует предметом."

GetKillingUnitBJ="Убивающий юнит"
GetKillingUnitBJ="Убивающий юнит"
GetKillingUnitBJHint="При ответе на событие юнита 'Умирает', ссылается на убийцу умирающего юнита.  В случаях, когда юнит умирает не от убивающего его другого юнита, возвращается ответ 'Нет юнита'."

GetLearningUnit="Изучающий герой"
GetLearningUnit="Изучающий герой"
GetLearningUnitHint="При ответе на событие юнита 'Изучает навык', ссылается на юнит, который изучает этот навык."

GetLeavingUnit="Выходящий юнит"
GetLeavingUnit="Выходящий юнит"
GetLeavingUnitHint="При ответе на событие юнита 'Юнит выходит из региона', ссылается на юнит, который покидает регион."

GetLevelingUnit="Повышающий уровень герой"
GetLevelingUnit="Повышающий уровень герой"
GetLevelingUnitHint="При ответе на событие юнита 'Получает уровень', ссылается на юнит, получающий уровень."

GetLoadedUnitBJ="Погружаемый юнит"
GetLoadedUnitBJ="Погружаемый юнит"
GetLoadedUnitBJHint="При ответе на событие юнита 'Загружается в транспорт', ссылается на юнит, который погружается в транспорт."

GetOrderedUnit="Получивший приказ юнит"
GetOrderedUnit="Получивший приказ юнит"
GetOrderedUnitHint="При ответе на событие юнита 'Получил приказ', ссылается на юнит, который получил данный приказ."

GetChangingUnit="Меняющий владельца юнит"
GetChangingUnit="Меняющий владельца юнит"
GetChangingUnitHint="При ответе на событие юнита 'Меняет владельца', ссылается на юнит, чье право собственности изменилось."

GetResearchingUnit="Исследующий юнит"
GetResearchingUnit="Исследующий юнит"
GetResearchingUnitHint="При ответе на события юнита 'Начинает/Отменяет/Заканчивает исследование', ссылается на юнит, производящий исследование."

GetRevivableUnit="Оживляемый герой"
GetRevivableUnit="Оживляемый герой"
GetRevivableUnitHint="При ответе на событие юнита 'Становится оживляемым', ссылается на юнит, который стал доступным для оживления."

GetRevivingUnit="Оживляющий герой"
GetRevivingUnit="Оживляющий герой"
GetRevivingUnitHint="При ответе на события юнита 'Начинает/Отменяет/Заканчивает оживление', ссылается на юнит, которого оживляют."

GetSellingUnit="Продающий юнит"
GetSellingUnit="Продающий юнит"
GetSellingUnitHint="При ответе на события юнита 'Продает юнит' или 'Продает предмет', ссылается на юнит, производящий продажу."

GetSoldUnit="Проданный юнит"
GetSoldUnit="Проданный юнит"
GetSoldUnitHint="При ответе на событие юнита 'Продает юнит', ссылается на юнит, которого продают."

GetSummonedUnit="Призванный юнит"
GetSummonedUnit="Призванный юнит"
GetSummonedUnitHint="При ответе на событие юнита 'Призывает юнит', ссылается на юнит, которого призывают."

GetSummoningUnit="Призывающий юнит"
GetSummoningUnit="Призывающий юнит"
GetSummoningUnitHint="При ответе на событие юнита 'Призывает юнит', ссылается на юнит, который осуществляет призывание юнита."

GetOrderTargetUnit="Юнит-цель отданного приказа"
GetOrderTargetUnit="Юнит-цель отданного приказа"
GetOrderTargetUnitHint="При ответе на событие юнита с юнитом-целью 'Получил приказ нацеливания на объект', ссылается на цель данного приказа."

GetSpellTargetUnit="Юнит-цель Применяемой Способности"
GetSpellTargetUnit="Юнит-цель Применяемой Способности"
GetSpellTargetUnitHint="При ответе на событие юнита с юнитом-целью 'Получил приказ нацеливания на объект', ссылается на цель данного приказа."

GetEventTargetUnit="Юнит-цель"
GetEventTargetUnit="Юнит-цель"
GetEventTargetUnitHint="При ответе на событие юнита 'Получает цель', ссылается на получаемую цель."

GetTrainedUnit="Подготовленный юнит"
GetTrainedUnit="Подготовленный юнит"
GetTrainedUnitHint="При ответе на событие юнита 'Заканчивает подготовку юнита', ссылается на юнит, который был подготовлен."

GetTransportUnitBJ="Транспортирующий юнит"
GetTransportUnitBJ="Транспортирующий юнит"
GetTransportUnitBJHint="При ответе на событие юнита 'Погружается на транспорт', ссылается на транспорт, в который был погружен этот юнит."

GetTriggerUnit="Переключающий юнит"
GetTriggerUnit="Переключающий юнит"
GetTriggerUnitHint=

GetUnitRallyUnit="Указание местоположения на Юнита"
GetUnitRallyUnit="Собрание ",~Unit," как юнит"
GetUnitRallyUnitHint="Если такого места собрания нет, то ничего не возвращается."


// returns unitcode
GetUnitTypeId="Тип юнита"
GetUnitTypeId="Тип юнита ",~Unit
GetUnitTypeIdHint=

ChooseRandomCreepBJ="Тип юнита случайного крипа"
ChooseRandomCreepBJ="Случайный уровень ",~Level," типа юнита крипа"
ChooseRandomCreepBJHint="Примените -1 для любого уровня."

ChooseRandomNPBuildingBJ="Тип юнита Случайное нейтральное здание"
ChooseRandomNPBuildingBJ="Тип юнита Случайное нейтральное здание"
ChooseRandomNPBuildingBJHint=

String2UnitIdBJ="Преобразовать строку в тип юнита"
String2UnitIdBJ="Тип юнита",~String,")"
String2UnitIdBJHint=

GetTrainedUnitType="Подготовленный тип юнита"
GetTrainedUnitType="Подготовленный тип юнита"
GetTrainedUnitTypeHint="При ответе на события юнита 'Начинает/Отменяет/Заканчивает подготовку юнита', ссылается на тип юнита того юнита, которого подготавливают."


// returns ordercode
String2OrderIdBJ="Преобразовать строку в приказ"
String2OrderIdBJ="Приказ(",~String,")"
String2OrderIdBJHint="Пример строк приказа:  ''harvest'', ''move'', ''smart'', ''attack''."

UnitId2OrderIdBJ="Преобразовать тип юнита в приказ"
UnitId2OrderIdBJ="Приказ(",~Unit-Type,")"
UnitId2OrderIdBJHint=

GetIssuedOrderIdBJ="Отданный приказ"
GetIssuedOrderIdBJ="Отданный приказ"
GetIssuedOrderIdBJHint="При ответе на событие юнита 'Получил приказ', ссылается на отданный приказ."

GetUnitCurrentOrder="Приказ Над Юнитом"
GetUnitCurrentOrder="Приказ над ",~Unit
GetUnitCurrentOrderHint=


// returns destructable
GetLastCreatedDestructable="Последнее созданное разрушаемое"
GetLastCreatedDestructable="Последнее созданное разрушаемое"
GetLastCreatedDestructableHint="Это последнее разрушаемое, созданное через триггер-действие 'Разрушаемое - Создать'."

RandomDestructableInRectSimpleBJ="Случайное разрушаемое в регионе"
RandomDestructableInRectSimpleBJ="Случайное разрушаемое в ",~Region
RandomDestructableInRectSimpleBJHint=

RandomDestructableInRectBJ="Случайное разрушаемое в регионе соответствует условию"
RandomDestructableInRectBJ="Случайное разрушаемое в ",~Region," соответствует ",~Condition
RandomDestructableInRectBJHint="Используйте 'Совпадающее Разрушаемое' для ссылки на рассматриваемое разрушаемое."

GetEnumDestructable="Выбранное разрушаемое"
GetEnumDestructable="Выбранное разрушаемое"
GetEnumDestructableHint="При использовании действия 'Выбрать все разрушаемое...', ссылается на каждое разрушаемое при его выборе."

GetFilterDestructable="Совпадающее разрушаемое"
GetFilterDestructable="Совпадающее разрушаемое"
GetFilterDestructableHint="Используйте для ссылки на разрушаемое, рассматриваемое для функций 'Случайное разрушаемое'."

GetDyingDestructable="Умирающее разрушаемое"
GetDyingDestructable="Умирающее разрушаемое"
GetDyingDestructableHint="При ответе на событие 'Разрушаемое умирает', ссылается на разрушаемое, которое умирает."

GetOrderTargetDestructable="Непрочный - цель приказа"
GetOrderTargetDestructable="Непрочный - цель приказа"
GetOrderTargetDestructableHint="Непрочный - цель приказа"

GetSpellTargetDestructable="Цель, Непрочный Из Способности, Бросаемой"
GetSpellTargetDestructable="Цель, непрочный из способности, бросаемой"
GetSpellTargetDestructableHint="Отвечая на 'Направ/Бро/и т.д. применяя способность' события Юниты с непрочной целью, это обращается к цели бросаемой способности."

GetUnitRallyDestructable="Координаты, как Непрочный"
GetUnitRallyDestructable="Координаты ",~Unit," как Непрочный"
GetUnitRallyDestructableHint="Если координаты юнита не задают непрочного, возвращается 'Нет непрочного'"


// returns destructablecode
GetDestructableTypeId="Тип разрушаемого разрушаемого"
GetDestructableTypeId="Тип разрушаемого ",~Destructible
GetDestructableTypeIdHint=


// returns item
GetLastCreatedItem="Последний созданный предмет"
GetLastCreatedItem="Последний созданный предмет"
GetLastCreatedItemHint="Это последний созданный предмет через триггер-действие 'Предмет - Создать' или 'Герой - Создать предмет для героя'."

GetLastRemovedItem="Последний брошенный предмет"
GetLastRemovedItem="Последний брошенный предмет"
GetLastRemovedItemHint="Это последний брошенный предмет через действие-триггер 'Герой - Бросить предмет'."

RandomItemInRectSimpleBJ="Случайный предмет в регионе"
RandomItemInRectSimpleBJ="Случайный предмет в ",~Region
RandomItemInRectSimpleBJHint=

RandomItemInRectBJ="Случайный предмет в регионе совпадает условию"
RandomItemInRectBJ="Случайный предмет в ",~Region," совпадает ",~Condition
RandomItemInRectBJHint="Используйте 'Совпадающий предмет' для ссылки на рассматриваемый предмет."

GetEnumItem="Подобранный предмет"
GetEnumItem="Подобранный предмет"
GetEnumItemHint="При использовании действия 'Собрать все предметы...' ссылается на каждый предмет по мере его сбора."

GetFilterItem="Совпадающий предмет"
GetFilterItem="Совпадающий предмет"
GetFilterItemHint="Используйте для ссылки на предмет, рассматривающийся для функций 'Случайный предмет'."

UnitItemInSlotBJ="Переносимый героем предмет"
UnitItemInSlotBJ="Предмет, переносимый ",~Hero," в слоте ",~Index
UnitItemInSlotBJHint=

GetItemOfTypeFromUnitBJ="Переносимый героем предмет типа"
GetItemOfTypeFromUnitBJ="Предмет, переносимый ",~Hero," типа ",~Item-Type
GetItemOfTypeFromUnitBJHint=

GetManipulatedItem="Предмет, которым манипулируют"
GetManipulatedItem="Предмет, которым манипулируют"
GetManipulatedItemHint="При ответе на события юнита 'Использует/Получает/Теряет предмет', ссылается на предмет, которым манипулируют."

GetSoldItem="Проданный предмет"
GetSoldItem="Проданный предмет"
GetSoldItemHint="При ответе на событие юнита 'Продает предмет', ссылается на продаваемый предмет."

GetOrderTargetItem="Предмет-цель отданного приказа"
GetOrderTargetItem="Предмет-цель отданного приказа"
GetOrderTargetItemHint="При ответе на событие юнита с предметом-целью 'Получил приказ нацеливания на объект', ссылается на цель данного приказа."

GetSpellTargetItem="Предмет-цель применяемой способности"
GetSpellTargetItem="Предмет-цель применяемой способности"
GetSpellTargetItemHint="Цель юнита, применяющего способность на предмете."


// returns itemtype
GetItemType="Класс предмета предмета"
GetItemType="Класс предмета ",~Item
GetItemTypeHint=


// returns itemcode
GetItemTypeId="Тип предмета предмета"
GetItemTypeId="Тип предмета ",~Item
GetItemTypeIdHint=

ChooseRandomItemBJ="Случайный тип предмета"
ChooseRandomItemBJ="Случайный уровень ",~Level," тип предмета"
ChooseRandomItemBJHint="Эта функция соответствует оригинальной системе неклассифицированных предметов с уровнями 0-10.  -1 - любой уровень."

ChooseRandomItemExBJ="Случайный тип предмета класса"
ChooseRandomItemExBJ="Случайный уровень ",~Level," ",~Class," тип предмета"
ChooseRandomItemExBJHint="Эта функция соответствует более новой системе классификации предметов с уровнями 0-8.  -1 - любой уровень."


// returns techcode
GetResearched="Тип исследованной технологии"
GetResearched="Тип исследованной технологии"
GetResearchedHint="При ответе на события юнита 'Начинает/Отменяет/Заканчивает исследование', ссылается на исследуемую технологию."


// returns abilcode
GetSpellAbilityId="Применяемая способность"
GetSpellAbilityId="Применяемая способность"
GetSpellAbilityIdHint="При ответе на события юнита 'Перенаправление/Применение/т.д. способности', ссылается на применяемую способность."


// returns heroskillcode
GetLearnedSkillBJ="Выученный героем навык"
GetLearnedSkillBJ="Выученный героем навык"
GetLearnedSkillBJHint=


// returns player
GetEnumPlayer="Выбранный игрок"
GetEnumPlayer="Выбранный игрок"
GetEnumPlayerHint="При использовании действия 'Выбрать всех игроков...', ссылается на каждого игрока при его/ее выборе."

GetFilterPlayer="Совпадающий игрок"
GetFilterPlayer="Совпадающий игрок"
GetFilterPlayerHint="Используйте для ссылки на игрока, рассматриваемого для функции 'Все игроки соответствуют условию'."

GetOwningPlayer="Владелец юнита"
GetOwningPlayer="Владелец ",~Unit
GetOwningPlayerHint=

GetItemPlayer="Владелец предмета"
GetItemPlayer="Владелец ",~Item
GetItemPlayerHint=

ForcePickRandomPlayer="Случайный игрок из группы игроков"
ForcePickRandomPlayer="Случайный игрок из ",~Player Group
ForcePickRandomPlayerHint=

ConvertedPlayer="Конвертировать индекс игрока в игрока"
ConvertedPlayer="Игрок(",~Player Index,")"
ConvertedPlayerHint="Индексы игрока заключаются в пределах от 1 до 16."

GetChangingUnitPrevOwner="Предыдущий Владелец"
GetChangingUnitPrevOwner="Предыдущий Владелец"
GetChangingUnitPrevOwnerHint="Имеет отношение к предыдущему владельцу юнита при ответе на событие 'Перемена Владельца' юнита."

GetTriggerPlayer="Игрок-Инициатор"
GetTriggerPlayer="Игрок-инициатор"
GetTriggerPlayerHint=

LeaderboardGetIndexedPlayerBJ="Игрок На Позиции"
LeaderboardGetIndexedPlayerBJ="Игрок на позиции ",~Position," ",~Leaderboard
LeaderboardGetIndexedPlayerBJHint=


// returns group
GetLastCreatedGroup="Последняя Группа Юнитов"
GetLastCreatedGroup="Последняя группа юнитов"
GetLastCreatedGroupHint="Это новый набор юнитов, созданных действием триггера 'Юнит - Создать'."

GetRandomSubGroup="Наугад Юниты N из Группы Юнитов"
GetRandomSubGroup="Наугад ",~Count," юнитов из ",~Unit Group
GetRandomSubGroupHint=

GetUnitsInRectAll="Юниты В Регионе"
GetUnitsInRectAll="Юниты в ",~Region
GetUnitsInRectAllHint=

GetUnitsInRectOfPlayer="Юниты В Регионе Игрока"
GetUnitsInRectOfPlayer="Юниты в ",~Region," принадлежащего ",~Player
GetUnitsInRectOfPlayerHint=

GetUnitsInRectMatching="Юниты В Условии Сопоставления Регионов"
GetUnitsInRectMatching="Юниты в условии сопоставления ",~Region," ",~Condition
GetUnitsInRectMatchingHint="Используйте 'Сопоставляемый Юнит' для юнита, который сравнивается."

GetUnitsInRangeOfLocAll="Юниты в Диапазоне"
GetUnitsInRangeOfLocAll="Юниты в ",~Radius," ",~Point
GetUnitsInRangeOfLocAllHint=

GetUnitsInRangeOfLocMatching="Юниты В Условии Сопоставления Диапазонов"
GetUnitsInRangeOfLocMatching="Юниты в ",~Radius," ",~Point," сопоставляемого ",~Condition
GetUnitsInRangeOfLocMatchingHint="Используйте 'Сопоставляемый Юнит' для юнита, который сравнивается."

GetUnitsOfPlayerAll="Юниты Игрока"
GetUnitsOfPlayerAll="Юниты принадлежащие ",~Player
GetUnitsOfPlayerAllHint=

GetUnitsOfPlayerAndTypeId="Типы Юнитов Принадлежащих Игроку"
GetUnitsOfPlayerAndTypeId="Типы юнитов принадлежащих ",~Player," ",~Unit-Type
GetUnitsOfPlayerAndTypeIdHint=

GetUnitsOfPlayerMatching="Юниты принадлежащие Условию Сопоставления Игрока"
GetUnitsOfPlayerMatching="Юниты принадлежащие ",~Player," сопоставительного ",~Condition
GetUnitsOfPlayerMatchingHint="Используйте 'Сопоставляемый Юнит' для юнита, который сравнивается."

GetUnitsOfTypeIdAll="Типы Юнитов"
GetUnitsOfTypeIdAll="Типы Юнитов ",~Unit-Type
GetUnitsOfTypeIdAllHint=

GetUnitsSelectedAll="Выделенные Юниты"
GetUnitsSelectedAll="Юниты выделенные ",~Player
GetUnitsSelectedAllHint="Не использовать в условиях триггера."


// returns force
GetPlayersAll="Все Игроки"
GetPlayersAll="Все игроки"
GetPlayersAllHint="Включает запасных и нейтральных игроков."

GetPlayersByMapControl="Все Контролируемые Игроки"
GetPlayersByMapControl="Все игроки под контролем ",~Control Type," игрока"
GetPlayersByMapControlHint=

GetPlayersMatching="Все Игроки - Условие Сопоставления"
GetPlayersMatching="Все игроки - сопоставительное ",~Condition
GetPlayersMatchingHint="Используйте 'Сопоставляемый Игрок' для игрока, который сравнивается.  Включает запасных и нейтральных игроков."

GetPlayersAllies="Союзники Игрока"
GetPlayersAllies="Все союзники ",~Player
GetPlayersAlliesHint="Все союзники указанного игрока, включая его самого/ее."

GetPlayersEnemies="Противники"
GetPlayersEnemies="Все противники ",~Player
GetPlayersEnemiesHint="Все противники указанного игрока."

GetForceOfPlayer="Конвертировать Игрока В Группу Игроков"
GetForceOfPlayer="Группа Игроков(",~Player,")"
GetForceOfPlayerHint=


// returns race
GetPlayerRace="Раса Игрока"
GetPlayerRace="Раса ",~Player
GetPlayerRaceHint=

GetUnitRace="Раса Юнита"
GetUnitRace="Раса ",~Unit
GetUnitRaceHint=


// returns camerasetup	
GetCurrentCameraSetup="Текущая Камера"
GetCurrentCameraSetup="Текущая камера"
GetCurrentCameraSetupHint=


// returns fogmodifier
GetLastCreatedFogModifier="Последний Модификатор Видимости"
GetLastCreatedFogModifier="Последний модификатор видимости"
GetLastCreatedFogModifierHint="Это последний модификатор видимости, созданный действием триггера 'Видимость - Создать Модификатор'."


// returns trigger
GetTriggeringTrigger="Этот Триггер"
GetTriggeringTrigger="Этот триггер"
GetTriggeringTriggerHint=


// returns gamedifficulty
GetGameDifficulty="Уровень Сложности"
GetGameDifficulty="Уровень сложности"
GetGameDifficultyHint=


// returns aidifficulty
GetAIDifficulty="Интерфейс Атаки Игрока"
GetAIDifficulty="Интерфейс Атаки ",~Player
GetAIDifficultyHint=


// returns gamespeed
GetGameSpeed="Скорость Текущей Игры"
GetGameSpeed="Скорость текущей игры"
GetGameSpeedHint=


// returns mapcontrol
GetPlayerController="Контроллер Игрока"
GetPlayerController=~Player," контроллер"
GetPlayerControllerHint=


// returns playercolor
GetPlayerColor="Цвет Игрока"
GetPlayerColor="Цвет ",~Player
GetPlayerColorHint=


// returns playerslotstate
GetPlayerSlotState="Статус Слота Игрока"
GetPlayerSlotState=~Player," статус слота"
GetPlayerSlotStateHint=


// returns effect
GetLastCreatedEffectBJ="Последний Спец Эффект"
GetLastCreatedEffectBJ="Последний спец эффект"
GetLastCreatedEffectBJHint=


// молния возвращений
GetLastCreatedLightningBJ="Последний Созданный Эффект Молнии"
GetLastCreatedLightningBJ="Последний созданный эффект молнии"
GetLastCreatedLightningBJHint=


// изображение возвращений
GetLastCreatedImage="Последнее Созданное Изображение"
GetLastCreatedImage="Последнее созданное изображение"
GetLastCreatedImageHint=


// возвращения ubersplat
GetLastCreatedUbersplat="Последний Созданный Ubersplat"
GetLastCreatedUbersplat="Последний создал ubersplat"
GetLastCreatedUbersplatHint=


// returns weathereffect
GetLastCreatedWeatherEffect="Последний Эффект Погоды"
GetLastCreatedWeatherEffect="Последний эффект погоды"
GetLastCreatedWeatherEffectHint="Это последний эффект погоды, созданный действием триггера 'Окружающая Среда - Создать Эффект Погоды'."


// returns terraindeformation
GetLastCreatedTerrainDeformation="Последняя Деформация Местности"
GetLastCreatedTerrainDeformation="Последняя деформация местности"
GetLastCreatedTerrainDeformationHint="Это последняя деформация местности, созданная через действие триггера 'Окружающая Среда - Деформировать Местность'."


// returns terraintype
GetTerrainTypeBJ="Terrain Type"
GetTerrainTypeBJ="Terrain type at ",~Location
GetTerrainTypeBJHint=


// returns sound
GetLastPlayedSound="Последний Звук"
GetLastPlayedSound="Последний звук"
GetLastPlayedSoundHint="Это последний звук, изданный действием триггера 'Звук - Играть' или 'Кинематография - Трансмиссия'."


// returns music
GetLastPlayedMusic="Последняя Мелодия"
GetLastPlayedMusic="Последняя мелодия"
GetLastPlayedMusicHint="Это последняя мелодия, сыгранная действием триггера 'Звук - Играть Мелодию'."


// returns quest
GetLastCreatedQuestBJ="Последний Квест"
GetLastCreatedQuestBJ="Последний квест"
GetLastCreatedQuestBJHint="Это последний квест, созданный действием триггера 'Квест - Создать'."


// returns questitem
GetLastCreatedQuestItemBJ="Последнее Требование Квеста"
GetLastCreatedQuestItemBJ="Последнее требование квеста"
GetLastCreatedQuestItemBJHint="Это последнее требование квеста, созданное действием триггера 'Квест - Создать Требование'."


// returns defeatcondition
GetLastCreatedDefeatConditionBJ="Последнее Условие Поражения"
GetLastCreatedDefeatConditionBJ="Последнее условие поражения"
GetLastCreatedDefeatConditionBJHint="Это последнее условие поражения, созданное действием триггера 'Квест - Создать Условие Поражения'."


// returns dialog
GetClickedDialogBJ="Нажатый Диалог"
GetClickedDialogBJ="Нажатый диалог"
GetClickedDialogBJHint="Имеет отношение к диалогу с нажатой кнопкой - при ответе на событие 'Диалог - Нажать Кнопку Диалога'."


// returns button
GetLastCreatedButtonBJ="Последняя Кнопка Диалога"
GetLastCreatedButtonBJ="Последняя Кнопка диалога"
GetLastCreatedButtonBJHint="Это последняя кнопка диалога, созданная действием триггера 'Диалог - Создать Кнопку Диалога'."

GetClickedButtonBJ="Нажатая Кнопка Диалога"
GetClickedButtonBJ="Нажатая кнопка диалога"
GetClickedButtonBJHint="Имеет отношение к кнопке диалога, которая находится в нажатом состоянии при ответе на событие 'Диалог - Нажатая Кнопка'."


// returns leaderboard
GetLastCreatedLeaderboard="Последняя Панель"
GetLastCreatedLeaderboard="Последняя панель"
GetLastCreatedLeaderboardHint="Это последняя панель, созданная действием триггера 'Панель - Создать'."

PlayerGetLeaderboardBJ="Панель Игрока"
PlayerGetLeaderboardBJ="Панель ",~Player
PlayerGetLeaderboardBJHint="У каждого игрока может быть максимум одна панель."


// returns multiboard
GetLastCreatedMultiboard="Последняя Созданная Мультибоард"
GetLastCreatedMultiboard="Последняя созданная мультибоард"
GetLastCreatedMultiboardHint="Обращается к последней доске, созданной командой - 'Создать Мультибоард'"


// returns timer
GetLastCreatedTimerBJ="Последний Включенный Таймер"
GetLastCreatedTimerBJ="Последний Включенный таймер"
GetLastCreatedTimerBJHint="Это последний таймер, запущенный действием триггера 'Таймер Отсчета - Запустить Таймер'."

GetExpiredTimer="Таймер Истечения"
GetExpiredTimer="Таймер истечения"
GetExpiredTimerHint="Имеет отношение к таймеру, время которого истекает, - при ответе на событие 'Время - Время Истекает'."


// returns timerdialog
GetLastCreatedTimerDialogBJ="Последнее Окно Таймера"
GetLastCreatedTimerDialogBJ="Последнее окно таймера"
GetLastCreatedTimerDialogBJHint="Это последнее окно таймера созданное действием триггера 'Таймер Отсчета - Создать Окно Таймера'."


// returns gamecache
GetLastCreatedGameCacheBJ="Последний Кэш Игры"
GetLastCreatedGameCacheBJ="Последний кэш игры"
GetLastCreatedGameCacheBJHint="Это последний кэш игры созданный действием триггера 'Кэш Игры - Создать Кэш'."


// returns texttag
GetLastCreatedTextTag="Последний Свободный Текст"
GetLastCreatedTextTag="Последний свободный текст"
GetLastCreatedTextTagHint="Это последний свободный текст созданный действием триггера 'Свободный Текст - Создать Свободный Текст'."



//***************************************************************************
[AIFunctionStrings]
// These functions are defined in AIEditorData.txt

// --- Boolean

TownThreatened="Атака На Город"
TownThreatened="Атака на город"
TownThreatenedHint=""

TownHasMine="В Городе Есть Шахта"
TownHasMine="В городе #",~Town," есть действующая золотая шахта"

TownHasHall="В Городе Есть Ратуша"
TownHasHall="В городе #",~Town," есть ратуша"

CaptainIsHome="Капитан Группы Дома"
CaptainIsHome="Капитан группы дома"

CaptainIsFull="Группа Нападения Укомплектована"
CaptainIsFull="Группа нападения укомплектована"

CaptainIsEmpty="Группа Нападения Несформирована"
CaptainIsEmpty="Группа нападения несформирована"

CaptainRetreating="Капитан Группы Отступает"
CaptainRetreating="Капитан группы отступает"

CaptainAtGoal="Капитан Группы У Цели"
CaptainAtGoal="Капитан группы у цели"

CaptainInCombat="Капитан В Поединке"
CaptainInCombat=~Captain Type," капитан в поединке"

CreepsOnMap="Нечисть Есть Везде"
CreepsOnMap="Нечисть есть везде на карте"

ExpansionNeeded="Необходимо Расширение"
ExpansionNeeded="Необходимо расширение"
ExpansionNeededHint="Возвращает подтверждение, если есть необходимость в расширении, но в настоящее время нет открытых мест."

// --- Integer

GetUnitCount="Все Юниты Типа"
GetUnitCount="Общее количество ",~Unit Type," юнитов"
GetUnitCountHint="Показатель включает юниты, которые в настоящее время проходят подготовку или конструируются."

GetUnitCountDone="Все Юниты Типа - Только Законченные"
GetUnitCountDone="Общее количество ",~Unit Type," законченных юнитов"
GetUnitCountDoneHint="Показатель НЕ включает юниты, которые в настоящее время проходят подготовку или конструируются."

GetTownUnitCount="Все Юниты Типа - У Города"
GetTownUnitCount="Общее количество ",~Unit Type," юнитов в городе #",~Town," (только законченные: ",~Option,")"
GetTownUnitCountHint=""

GetMinesOwned="Количество Имеющихся Шахт"
GetMinesOwned="Количество имеющихся шахт"
GetMinesOwnedHint="Общее количество шахт, используемых в настоящее время игроком."

GetGoldOwned="Количество Недобытого Золота"
GetGoldOwned="Количество недобытого золота"
GetGoldOwnedHint="Общее количество золота, оставшегося в используемых в настоящее время шахтах."

TownWithMine="Город С Шахтой"
TownWithMine="Город с золотой шахтой"
TownWithMineHint="Возвращает ID первого города с активной золотой шахтой"

GetGold="Текущее Количество Золота"
GetGold="Текущее количество золота"
GetGoldHint="Количество золота, принадлежащего игроку"

GetWood="Текущее Количество Древесины"
GetWood="Текущее количество древесины"
GetWoodHint="Количество древесины, принадлежащей игроку"

GetUnitGoldCost="Стоимость Юнита в Золоте"
GetUnitGoldCost="Стоимость в золоте",~Unit Type

GetUnitWoodCost="Общая стоимость Юнита"
GetUnitWoodCost="Общая стоимость" ,~Unit Type

GetUnitBuildTime="Время Создания Юнита"
GetUnitBuildTime="Время создания ",~Unit Type
GetUnitBuildTimeHint="Время создания в секундах."

GetUpgradeLevel="Текущий Уровень Обновления"
GetUpgradeLevel="Уровень обновления ",~Upgrade Type

GetUpgradeGoldCost="Стоимость Обновления В Золоте"
GetUpgradeGoldCost="Стоимость в золоте следующего",~Upgrade Type," обновления"

GetUpgradeWoodCost="Стоимость Обновления В Лесоматериалах"
GetUpgradeWoodCost="Стоимость, в лесоматериалах, следующего",~Upgrade Type," обновления"

GetNextExpansion="Следующий Город"
GetNextExpansion="Следующий город"
GetNextExpansionHint="Возвращает ID города для последующего расширения"

FoodUsed="Потребляемая Пища"
FoodUsed="Потребляемая пища"
FoodUsedHint="Общее количество пищи, потребляемое игроком"

TotalFoodProduced="Производимая Пища"
TotalFoodProduced="Производимая пища"
TotalFoodProducedHint="Общее количество пищи, производимое в настоящее время игроком"

GetFoodMade="Пища производимая Юнитом"
GetFoodMade="Пища производимая",~Unit Type," юнитами"

CommandsWaiting="Ожидающие Команды"
CommandsWaiting="Количество ожидающих команд"
CommandsWaitingHint="Команды можно отдавать триггерами карты 'Прикладной Интерфейс AI - Отдать Команду'."

CheckLastCommand="Последняя Команда"
CheckLastCommand="Последняя отданная команда, ",~Option," команда"
CheckLastCommandHint="Команды можно отдавать триггерами карты 'Прикладной Интерфейс AI - Отдать Команду'."

CheckLastCommandData="Последние Данные Команды"
CheckLastCommandData="Последние отправленные данные команды, ",~Option," команда"
CheckLastCommandDataHint="Команды можно отдавать триггерами карты 'Прикладной Интерфейс AI - Отдать Команду'."

CaptainGroupSize="Состав Группы Нападения"
CaptainGroupSize="Состав группы нападения"
CaptainGroupSizeHint="Текущее количество юнитов в группе нападения."

CaptainReadinessHP="Степень Здоровья Группы Нападения"
CaptainReadinessHP="Степень здоровья группы нападения"
CaptainReadinessHPHint="Уровень здоровья определяется средним показателем здоровья группы, полное здоровье равно 100."

CaptainReadinessMa="Уровень Маны Группы Нападения"
CaptainReadinessMa="Уровень маны группы нападения"
CaptainReadinessMaHint="Уровень маны определяется средним показателем маны группы, полная мана равна 100."

CurrentAttackWave="Текущая Волна Атаки"
CurrentAttackWave="Текущая волна атаки"
CurrentAttackWaveHint="Волны атаки определены в списке атак."

MeleeDifficulty="Уровень Сложности Нападения"
MeleeDifficulty="Уровень сложности Нападения"